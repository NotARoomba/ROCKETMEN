ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"sd_diskio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "FATFS/Target/sd_diskio.c"
  20              		.section	.text.SD_CheckStatus,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SD_CheckStatus:
  27              	.LVL0:
  28              	.LFB134:
   1:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/sd_diskio.c **** /**
   3:FATFS/Target/sd_diskio.c ****   ******************************************************************************
   4:FATFS/Target/sd_diskio.c ****   * @file    sd_diskio.c
   5:FATFS/Target/sd_diskio.c ****   * @brief   SD Disk I/O driver
   6:FATFS/Target/sd_diskio.c ****   ******************************************************************************
   7:FATFS/Target/sd_diskio.c ****   * @attention
   8:FATFS/Target/sd_diskio.c ****   *
   9:FATFS/Target/sd_diskio.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:FATFS/Target/sd_diskio.c ****   * All rights reserved.
  11:FATFS/Target/sd_diskio.c ****   *
  12:FATFS/Target/sd_diskio.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:FATFS/Target/sd_diskio.c ****   * in the root directory of this software component.
  14:FATFS/Target/sd_diskio.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:FATFS/Target/sd_diskio.c ****   *
  16:FATFS/Target/sd_diskio.c ****   ******************************************************************************
  17:FATFS/Target/sd_diskio.c ****   */
  18:FATFS/Target/sd_diskio.c **** /* USER CODE END Header */
  19:FATFS/Target/sd_diskio.c **** 
  20:FATFS/Target/sd_diskio.c **** /* Note: code generation based on sd_diskio_template_bspv1.c v2.1.4
  21:FATFS/Target/sd_diskio.c ****    as "Use dma template" is disabled. */
  22:FATFS/Target/sd_diskio.c **** 
  23:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN firstSection */
  24:FATFS/Target/sd_diskio.c **** /* can be used to modify / undefine following code or add new definitions */
  25:FATFS/Target/sd_diskio.c **** /* USER CODE END firstSection*/
  26:FATFS/Target/sd_diskio.c **** 
  27:FATFS/Target/sd_diskio.c **** /* Includes ------------------------------------------------------------------*/
  28:FATFS/Target/sd_diskio.c **** #include "ff_gen_drv.h"
  29:FATFS/Target/sd_diskio.c **** #include "sd_diskio.h"
  30:FATFS/Target/sd_diskio.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 2


  31:FATFS/Target/sd_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  32:FATFS/Target/sd_diskio.c **** /* Private define ------------------------------------------------------------*/
  33:FATFS/Target/sd_diskio.c **** /* use the default SD timout as defined in the platform BSP driver*/
  34:FATFS/Target/sd_diskio.c **** #if defined(SDMMC_DATATIMEOUT)
  35:FATFS/Target/sd_diskio.c **** #define SD_TIMEOUT SDMMC_DATATIMEOUT
  36:FATFS/Target/sd_diskio.c **** #elif defined(SD_DATATIMEOUT)
  37:FATFS/Target/sd_diskio.c **** #define SD_TIMEOUT SD_DATATIMEOUT
  38:FATFS/Target/sd_diskio.c **** #else
  39:FATFS/Target/sd_diskio.c **** #define SD_TIMEOUT 30 * 1000
  40:FATFS/Target/sd_diskio.c **** #endif
  41:FATFS/Target/sd_diskio.c **** 
  42:FATFS/Target/sd_diskio.c **** #define SD_DEFAULT_BLOCK_SIZE 512
  43:FATFS/Target/sd_diskio.c **** 
  44:FATFS/Target/sd_diskio.c **** /*
  45:FATFS/Target/sd_diskio.c ****  * Depending on the use case, the SD card initialization could be done at the
  46:FATFS/Target/sd_diskio.c ****  * application level: if it is the case define the flag below to disable
  47:FATFS/Target/sd_diskio.c ****  * the BSP_SD_Init() call in the SD_Initialize() and add a call to
  48:FATFS/Target/sd_diskio.c ****  * BSP_SD_Init() elsewhere in the application.
  49:FATFS/Target/sd_diskio.c ****  */
  50:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN disableSDInit */
  51:FATFS/Target/sd_diskio.c **** /* #define DISABLE_SD_INIT */
  52:FATFS/Target/sd_diskio.c **** /* USER CODE END disableSDInit */
  53:FATFS/Target/sd_diskio.c **** 
  54:FATFS/Target/sd_diskio.c **** /* Private variables ---------------------------------------------------------*/
  55:FATFS/Target/sd_diskio.c **** /* Disk status */
  56:FATFS/Target/sd_diskio.c **** static volatile DSTATUS Stat = STA_NOINIT;
  57:FATFS/Target/sd_diskio.c **** 
  58:FATFS/Target/sd_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  59:FATFS/Target/sd_diskio.c **** static DSTATUS SD_CheckStatus(BYTE lun);
  60:FATFS/Target/sd_diskio.c **** DSTATUS SD_initialize (BYTE);
  61:FATFS/Target/sd_diskio.c **** DSTATUS SD_status (BYTE);
  62:FATFS/Target/sd_diskio.c **** DRESULT SD_read (BYTE, BYTE*, DWORD, UINT);
  63:FATFS/Target/sd_diskio.c **** #if _USE_WRITE == 1
  64:FATFS/Target/sd_diskio.c **** DRESULT SD_write (BYTE, const BYTE*, DWORD, UINT);
  65:FATFS/Target/sd_diskio.c **** #endif /* _USE_WRITE == 1 */
  66:FATFS/Target/sd_diskio.c **** #if _USE_IOCTL == 1
  67:FATFS/Target/sd_diskio.c **** DRESULT SD_ioctl (BYTE, BYTE, void*);
  68:FATFS/Target/sd_diskio.c **** #endif  /* _USE_IOCTL == 1 */
  69:FATFS/Target/sd_diskio.c **** 
  70:FATFS/Target/sd_diskio.c **** const Diskio_drvTypeDef  SD_Driver =
  71:FATFS/Target/sd_diskio.c **** {
  72:FATFS/Target/sd_diskio.c ****   SD_initialize,
  73:FATFS/Target/sd_diskio.c ****   SD_status,
  74:FATFS/Target/sd_diskio.c ****   SD_read,
  75:FATFS/Target/sd_diskio.c **** #if  _USE_WRITE == 1
  76:FATFS/Target/sd_diskio.c ****   SD_write,
  77:FATFS/Target/sd_diskio.c **** #endif /* _USE_WRITE == 1 */
  78:FATFS/Target/sd_diskio.c **** 
  79:FATFS/Target/sd_diskio.c **** #if  _USE_IOCTL == 1
  80:FATFS/Target/sd_diskio.c ****   SD_ioctl,
  81:FATFS/Target/sd_diskio.c **** #endif /* _USE_IOCTL == 1 */
  82:FATFS/Target/sd_diskio.c **** };
  83:FATFS/Target/sd_diskio.c **** 
  84:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN beforeFunctionSection */
  85:FATFS/Target/sd_diskio.c **** /* can be used to modify / undefine following code or add new code */
  86:FATFS/Target/sd_diskio.c **** /* USER CODE END beforeFunctionSection */
  87:FATFS/Target/sd_diskio.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 3


  88:FATFS/Target/sd_diskio.c **** /* Private functions ---------------------------------------------------------*/
  89:FATFS/Target/sd_diskio.c **** 
  90:FATFS/Target/sd_diskio.c **** static DSTATUS SD_CheckStatus(BYTE lun)
  91:FATFS/Target/sd_diskio.c **** {
  29              		.loc 1 91 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 91 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  92:FATFS/Target/sd_diskio.c ****   Stat = STA_NOINIT;
  38              		.loc 1 92 3 is_stmt 1 view .LVU2
  39              		.loc 1 92 8 is_stmt 0 view .LVU3
  40 0002 074B     		ldr	r3, .L4
  41 0004 0122     		movs	r2, #1
  42 0006 1A70     		strb	r2, [r3]
  93:FATFS/Target/sd_diskio.c **** 
  94:FATFS/Target/sd_diskio.c ****   if(BSP_SD_GetCardState() == MSD_OK)
  43              		.loc 1 94 3 is_stmt 1 view .LVU4
  44              		.loc 1 94 6 is_stmt 0 view .LVU5
  45 0008 FFF7FEFF 		bl	BSP_SD_GetCardState
  46              	.LVL1:
  47              		.loc 1 94 5 discriminator 1 view .LVU6
  48 000c 20B9     		cbnz	r0, .L2
  95:FATFS/Target/sd_diskio.c ****   {
  96:FATFS/Target/sd_diskio.c ****     Stat &= ~STA_NOINIT;
  49              		.loc 1 96 5 is_stmt 1 view .LVU7
  50              		.loc 1 96 10 is_stmt 0 view .LVU8
  51 000e 044A     		ldr	r2, .L4
  52 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0012 03F0FE03 		and	r3, r3, #254
  54 0016 1370     		strb	r3, [r2]
  55              	.L2:
  97:FATFS/Target/sd_diskio.c ****   }
  98:FATFS/Target/sd_diskio.c **** 
  99:FATFS/Target/sd_diskio.c ****   return Stat;
  56              		.loc 1 99 3 is_stmt 1 view .LVU9
  57              		.loc 1 99 10 is_stmt 0 view .LVU10
  58 0018 014B     		ldr	r3, .L4
  59 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 100:FATFS/Target/sd_diskio.c **** }
  60              		.loc 1 100 1 view .LVU11
  61 001c 08BD     		pop	{r3, pc}
  62              	.L5:
  63 001e 00BF     		.align	2
  64              	.L4:
  65 0020 00000000 		.word	Stat
  66              		.cfi_endproc
  67              	.LFE134:
  69              		.section	.text.SD_initialize,"ax",%progbits
  70              		.align	1
  71              		.global	SD_initialize
  72              		.syntax unified
  73              		.thumb
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 4


  74              		.thumb_func
  76              	SD_initialize:
  77              	.LVL2:
  78              	.LFB135:
 101:FATFS/Target/sd_diskio.c **** 
 102:FATFS/Target/sd_diskio.c **** /**
 103:FATFS/Target/sd_diskio.c ****   * @brief  Initializes a Drive
 104:FATFS/Target/sd_diskio.c ****   * @param  lun : not used
 105:FATFS/Target/sd_diskio.c ****   * @retval DSTATUS: Operation status
 106:FATFS/Target/sd_diskio.c ****   */
 107:FATFS/Target/sd_diskio.c **** DSTATUS SD_initialize(BYTE lun)
 108:FATFS/Target/sd_diskio.c **** {
  79              		.loc 1 108 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 108 1 is_stmt 0 view .LVU13
  84 0000 10B5     		push	{r4, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
  88 0002 0446     		mov	r4, r0
 109:FATFS/Target/sd_diskio.c **** Stat = STA_NOINIT;
  89              		.loc 1 109 1 is_stmt 1 view .LVU14
  90              		.loc 1 109 6 is_stmt 0 view .LVU15
  91 0004 074B     		ldr	r3, .L10
  92 0006 0122     		movs	r2, #1
  93 0008 1A70     		strb	r2, [r3]
 110:FATFS/Target/sd_diskio.c **** 
 111:FATFS/Target/sd_diskio.c **** #if !defined(DISABLE_SD_INIT)
 112:FATFS/Target/sd_diskio.c **** 
 113:FATFS/Target/sd_diskio.c ****   if(BSP_SD_Init() == MSD_OK)
  94              		.loc 1 113 3 is_stmt 1 view .LVU16
  95              		.loc 1 113 6 is_stmt 0 view .LVU17
  96 000a FFF7FEFF 		bl	BSP_SD_Init
  97              	.LVL3:
  98              		.loc 1 113 5 discriminator 1 view .LVU18
  99 000e 10B1     		cbz	r0, .L9
 100              	.L7:
 114:FATFS/Target/sd_diskio.c ****   {
 115:FATFS/Target/sd_diskio.c ****     Stat = SD_CheckStatus(lun);
 116:FATFS/Target/sd_diskio.c ****   }
 117:FATFS/Target/sd_diskio.c **** 
 118:FATFS/Target/sd_diskio.c **** #else
 119:FATFS/Target/sd_diskio.c ****   Stat = SD_CheckStatus(lun);
 120:FATFS/Target/sd_diskio.c **** #endif
 121:FATFS/Target/sd_diskio.c **** 
 122:FATFS/Target/sd_diskio.c ****   return Stat;
 101              		.loc 1 122 3 is_stmt 1 view .LVU19
 102              		.loc 1 122 10 is_stmt 0 view .LVU20
 103 0010 044B     		ldr	r3, .L10
 104 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 123:FATFS/Target/sd_diskio.c **** }
 105              		.loc 1 123 1 view .LVU21
 106 0014 10BD     		pop	{r4, pc}
 107              	.LVL4:
 108              	.L9:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 5


 115:FATFS/Target/sd_diskio.c ****   }
 109              		.loc 1 115 5 is_stmt 1 view .LVU22
 115:FATFS/Target/sd_diskio.c ****   }
 110              		.loc 1 115 12 is_stmt 0 view .LVU23
 111 0016 2046     		mov	r0, r4
 112 0018 FFF7FEFF 		bl	SD_CheckStatus
 113              	.LVL5:
 115:FATFS/Target/sd_diskio.c ****   }
 114              		.loc 1 115 10 discriminator 1 view .LVU24
 115 001c 014B     		ldr	r3, .L10
 116 001e 1870     		strb	r0, [r3]
 117 0020 F6E7     		b	.L7
 118              	.L11:
 119 0022 00BF     		.align	2
 120              	.L10:
 121 0024 00000000 		.word	Stat
 122              		.cfi_endproc
 123              	.LFE135:
 125              		.section	.text.SD_status,"ax",%progbits
 126              		.align	1
 127              		.global	SD_status
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	SD_status:
 133              	.LVL6:
 134              	.LFB136:
 124:FATFS/Target/sd_diskio.c **** 
 125:FATFS/Target/sd_diskio.c **** /**
 126:FATFS/Target/sd_diskio.c ****   * @brief  Gets Disk Status
 127:FATFS/Target/sd_diskio.c ****   * @param  lun : not used
 128:FATFS/Target/sd_diskio.c ****   * @retval DSTATUS: Operation status
 129:FATFS/Target/sd_diskio.c ****   */
 130:FATFS/Target/sd_diskio.c **** DSTATUS SD_status(BYTE lun)
 131:FATFS/Target/sd_diskio.c **** {
 135              		.loc 1 131 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 131 1 is_stmt 0 view .LVU26
 140 0000 08B5     		push	{r3, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 3, -8
 143              		.cfi_offset 14, -4
 132:FATFS/Target/sd_diskio.c ****   return SD_CheckStatus(lun);
 144              		.loc 1 132 3 is_stmt 1 view .LVU27
 145              		.loc 1 132 10 is_stmt 0 view .LVU28
 146 0002 FFF7FEFF 		bl	SD_CheckStatus
 147              	.LVL7:
 133:FATFS/Target/sd_diskio.c **** }
 148              		.loc 1 133 1 view .LVU29
 149 0006 08BD     		pop	{r3, pc}
 150              		.cfi_endproc
 151              	.LFE136:
 153              		.section	.text.SD_read,"ax",%progbits
 154              		.align	1
 155              		.global	SD_read
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 6


 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	SD_read:
 161              	.LVL8:
 162              	.LFB137:
 134:FATFS/Target/sd_diskio.c **** 
 135:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN beforeReadSection */
 136:FATFS/Target/sd_diskio.c **** /* can be used to modify previous code / undefine following code / add new code */
 137:FATFS/Target/sd_diskio.c **** /* USER CODE END beforeReadSection */
 138:FATFS/Target/sd_diskio.c **** /**
 139:FATFS/Target/sd_diskio.c ****   * @brief  Reads Sector(s)
 140:FATFS/Target/sd_diskio.c ****   * @param  lun : not used
 141:FATFS/Target/sd_diskio.c ****   * @param  *buff: Data buffer to store read data
 142:FATFS/Target/sd_diskio.c ****   * @param  sector: Sector address (LBA)
 143:FATFS/Target/sd_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 144:FATFS/Target/sd_diskio.c ****   * @retval DRESULT: Operation result
 145:FATFS/Target/sd_diskio.c ****   */
 146:FATFS/Target/sd_diskio.c **** 
 147:FATFS/Target/sd_diskio.c **** DRESULT SD_read(BYTE lun, BYTE *buff, DWORD sector, UINT count)
 148:FATFS/Target/sd_diskio.c **** {
 163              		.loc 1 148 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		.loc 1 148 1 is_stmt 0 view .LVU31
 168 0000 08B5     		push	{r3, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172 0002 0846     		mov	r0, r1
 173              	.LVL9:
 174              		.loc 1 148 1 view .LVU32
 175 0004 1146     		mov	r1, r2
 176              	.LVL10:
 177              		.loc 1 148 1 view .LVU33
 178 0006 1A46     		mov	r2, r3
 179              	.LVL11:
 149:FATFS/Target/sd_diskio.c ****   DRESULT res = RES_ERROR;
 180              		.loc 1 149 3 is_stmt 1 view .LVU34
 150:FATFS/Target/sd_diskio.c **** 
 151:FATFS/Target/sd_diskio.c ****   if(BSP_SD_ReadBlocks((uint32_t*)buff,
 181              		.loc 1 151 3 view .LVU35
 182              		.loc 1 151 6 is_stmt 0 view .LVU36
 183 0008 4FF0FF33 		mov	r3, #-1
 184              	.LVL12:
 185              		.loc 1 151 6 view .LVU37
 186 000c FFF7FEFF 		bl	BSP_SD_ReadBlocks
 187              	.LVL13:
 188              		.loc 1 151 5 discriminator 1 view .LVU38
 189 0010 30B9     		cbnz	r0, .L17
 190              	.L16:
 152:FATFS/Target/sd_diskio.c ****                        (uint32_t) (sector),
 153:FATFS/Target/sd_diskio.c ****                        count, SD_TIMEOUT) == MSD_OK)
 154:FATFS/Target/sd_diskio.c ****   {
 155:FATFS/Target/sd_diskio.c ****     /* wait until the read operation is finished */
 156:FATFS/Target/sd_diskio.c ****     while(BSP_SD_GetCardState()!= MSD_OK)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 7


 157:FATFS/Target/sd_diskio.c ****     {
 158:FATFS/Target/sd_diskio.c ****     }
 191              		.loc 1 158 5 is_stmt 1 view .LVU39
 156:FATFS/Target/sd_diskio.c ****     {
 192              		.loc 1 156 32 discriminator 1 view .LVU40
 156:FATFS/Target/sd_diskio.c ****     {
 193              		.loc 1 156 11 is_stmt 0 discriminator 1 view .LVU41
 194 0012 FFF7FEFF 		bl	BSP_SD_GetCardState
 195              	.LVL14:
 156:FATFS/Target/sd_diskio.c ****     {
 196              		.loc 1 156 32 discriminator 1 view .LVU42
 197 0016 0346     		mov	r3, r0
 198 0018 0028     		cmp	r0, #0
 199 001a FAD1     		bne	.L16
 200              	.L15:
 201              	.LVL15:
 159:FATFS/Target/sd_diskio.c ****     res = RES_OK;
 160:FATFS/Target/sd_diskio.c ****   }
 161:FATFS/Target/sd_diskio.c **** 
 162:FATFS/Target/sd_diskio.c ****   return res;
 202              		.loc 1 162 3 is_stmt 1 view .LVU43
 163:FATFS/Target/sd_diskio.c **** }
 203              		.loc 1 163 1 is_stmt 0 view .LVU44
 204 001c 1846     		mov	r0, r3
 205 001e 08BD     		pop	{r3, pc}
 206              	.LVL16:
 207              	.L17:
 149:FATFS/Target/sd_diskio.c **** 
 208              		.loc 1 149 11 view .LVU45
 209 0020 0123     		movs	r3, #1
 210 0022 FBE7     		b	.L15
 211              		.cfi_endproc
 212              	.LFE137:
 214              		.section	.text.SD_write,"ax",%progbits
 215              		.align	1
 216              		.global	SD_write
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	SD_write:
 222              	.LVL17:
 223              	.LFB138:
 164:FATFS/Target/sd_diskio.c **** 
 165:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN beforeWriteSection */
 166:FATFS/Target/sd_diskio.c **** /* can be used to modify previous code / undefine following code / add new code */
 167:FATFS/Target/sd_diskio.c **** /* USER CODE END beforeWriteSection */
 168:FATFS/Target/sd_diskio.c **** /**
 169:FATFS/Target/sd_diskio.c ****   * @brief  Writes Sector(s)
 170:FATFS/Target/sd_diskio.c ****   * @param  lun : not used
 171:FATFS/Target/sd_diskio.c ****   * @param  *buff: Data to be written
 172:FATFS/Target/sd_diskio.c ****   * @param  sector: Sector address (LBA)
 173:FATFS/Target/sd_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 174:FATFS/Target/sd_diskio.c ****   * @retval DRESULT: Operation result
 175:FATFS/Target/sd_diskio.c ****   */
 176:FATFS/Target/sd_diskio.c **** #if _USE_WRITE == 1
 177:FATFS/Target/sd_diskio.c **** 
 178:FATFS/Target/sd_diskio.c **** DRESULT SD_write(BYTE lun, const BYTE *buff, DWORD sector, UINT count)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 8


 179:FATFS/Target/sd_diskio.c **** {
 224              		.loc 1 179 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		.loc 1 179 1 is_stmt 0 view .LVU47
 229 0000 08B5     		push	{r3, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 233 0002 0846     		mov	r0, r1
 234              	.LVL18:
 235              		.loc 1 179 1 view .LVU48
 236 0004 1146     		mov	r1, r2
 237              	.LVL19:
 238              		.loc 1 179 1 view .LVU49
 239 0006 1A46     		mov	r2, r3
 240              	.LVL20:
 180:FATFS/Target/sd_diskio.c ****   DRESULT res = RES_ERROR;
 241              		.loc 1 180 3 is_stmt 1 view .LVU50
 181:FATFS/Target/sd_diskio.c **** 
 182:FATFS/Target/sd_diskio.c ****   if(BSP_SD_WriteBlocks((uint32_t*)buff,
 242              		.loc 1 182 3 view .LVU51
 243              		.loc 1 182 6 is_stmt 0 view .LVU52
 244 0008 4FF0FF33 		mov	r3, #-1
 245              	.LVL21:
 246              		.loc 1 182 6 view .LVU53
 247 000c FFF7FEFF 		bl	BSP_SD_WriteBlocks
 248              	.LVL22:
 249              		.loc 1 182 5 discriminator 1 view .LVU54
 250 0010 30B9     		cbnz	r0, .L22
 251              	.L21:
 183:FATFS/Target/sd_diskio.c ****                         (uint32_t)(sector),
 184:FATFS/Target/sd_diskio.c ****                         count, SD_TIMEOUT) == MSD_OK)
 185:FATFS/Target/sd_diskio.c ****   {
 186:FATFS/Target/sd_diskio.c **** 	/* wait until the Write operation is finished */
 187:FATFS/Target/sd_diskio.c ****     while(BSP_SD_GetCardState() != MSD_OK)
 188:FATFS/Target/sd_diskio.c ****     {
 189:FATFS/Target/sd_diskio.c ****     }
 252              		.loc 1 189 5 is_stmt 1 view .LVU55
 187:FATFS/Target/sd_diskio.c ****     {
 253              		.loc 1 187 33 discriminator 1 view .LVU56
 187:FATFS/Target/sd_diskio.c ****     {
 254              		.loc 1 187 11 is_stmt 0 discriminator 1 view .LVU57
 255 0012 FFF7FEFF 		bl	BSP_SD_GetCardState
 256              	.LVL23:
 187:FATFS/Target/sd_diskio.c ****     {
 257              		.loc 1 187 33 discriminator 1 view .LVU58
 258 0016 0346     		mov	r3, r0
 259 0018 0028     		cmp	r0, #0
 260 001a FAD1     		bne	.L21
 261              	.L20:
 262              	.LVL24:
 190:FATFS/Target/sd_diskio.c ****     res = RES_OK;
 191:FATFS/Target/sd_diskio.c ****   }
 192:FATFS/Target/sd_diskio.c **** 
 193:FATFS/Target/sd_diskio.c ****   return res;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 9


 263              		.loc 1 193 3 is_stmt 1 view .LVU59
 194:FATFS/Target/sd_diskio.c **** }
 264              		.loc 1 194 1 is_stmt 0 view .LVU60
 265 001c 1846     		mov	r0, r3
 266 001e 08BD     		pop	{r3, pc}
 267              	.LVL25:
 268              	.L22:
 180:FATFS/Target/sd_diskio.c **** 
 269              		.loc 1 180 11 view .LVU61
 270 0020 0123     		movs	r3, #1
 271 0022 FBE7     		b	.L20
 272              		.cfi_endproc
 273              	.LFE138:
 275              		.section	.text.SD_ioctl,"ax",%progbits
 276              		.align	1
 277              		.global	SD_ioctl
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	SD_ioctl:
 283              	.LVL26:
 284              	.LFB139:
 195:FATFS/Target/sd_diskio.c **** #endif /* _USE_WRITE == 1 */
 196:FATFS/Target/sd_diskio.c **** 
 197:FATFS/Target/sd_diskio.c **** /* USER CODE BEGIN beforeIoctlSection */
 198:FATFS/Target/sd_diskio.c **** /* can be used to modify previous code / undefine following code / add new code */
 199:FATFS/Target/sd_diskio.c **** /* USER CODE END beforeIoctlSection */
 200:FATFS/Target/sd_diskio.c **** /**
 201:FATFS/Target/sd_diskio.c ****   * @brief  I/O control operation
 202:FATFS/Target/sd_diskio.c ****   * @param  lun : not used
 203:FATFS/Target/sd_diskio.c ****   * @param  cmd: Control code
 204:FATFS/Target/sd_diskio.c ****   * @param  *buff: Buffer to send/receive control data
 205:FATFS/Target/sd_diskio.c ****   * @retval DRESULT: Operation result
 206:FATFS/Target/sd_diskio.c ****   */
 207:FATFS/Target/sd_diskio.c **** #if _USE_IOCTL == 1
 208:FATFS/Target/sd_diskio.c **** DRESULT SD_ioctl(BYTE lun, BYTE cmd, void *buff)
 209:FATFS/Target/sd_diskio.c **** {
 285              		.loc 1 209 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 32
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		.loc 1 209 1 is_stmt 0 view .LVU63
 290 0000 30B5     		push	{r4, r5, lr}
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 295 0002 89B0     		sub	sp, sp, #36
 296              		.cfi_def_cfa_offset 48
 210:FATFS/Target/sd_diskio.c ****   DRESULT res = RES_ERROR;
 297              		.loc 1 210 3 is_stmt 1 view .LVU64
 298              	.LVL27:
 211:FATFS/Target/sd_diskio.c ****   BSP_SD_CardInfo CardInfo;
 299              		.loc 1 211 3 view .LVU65
 212:FATFS/Target/sd_diskio.c **** 
 213:FATFS/Target/sd_diskio.c ****   if (Stat & STA_NOINIT) return RES_NOTRDY;
 300              		.loc 1 213 3 view .LVU66
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 10


 301              		.loc 1 213 12 is_stmt 0 view .LVU67
 302 0004 134B     		ldr	r3, .L34
 303 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 304              	.LVL28:
 305              		.loc 1 213 6 view .LVU68
 306 0008 10F00104 		ands	r4, r0, #1
 307 000c 1BD1     		bne	.L31
 308 000e 1546     		mov	r5, r2
 214:FATFS/Target/sd_diskio.c **** 
 215:FATFS/Target/sd_diskio.c ****   switch (cmd)
 309              		.loc 1 215 3 is_stmt 1 view .LVU69
 310 0010 0329     		cmp	r1, #3
 311 0012 1CD8     		bhi	.L32
 312 0014 DFE801F0 		tbb	[pc, r1]
 313              	.L27:
 314 0018 02       		.byte	(.L30-.L27)/2
 315 0019 04       		.byte	(.L29-.L27)/2
 316 001a 0A       		.byte	(.L28-.L27)/2
 317 001b 10       		.byte	(.L26-.L27)/2
 318              		.p2align 1
 319              	.L30:
 320 001c 0C46     		mov	r4, r1
 321 001e 13E0     		b	.L25
 322              	.L29:
 216:FATFS/Target/sd_diskio.c ****   {
 217:FATFS/Target/sd_diskio.c ****   /* Make sure that no pending write process */
 218:FATFS/Target/sd_diskio.c ****   case CTRL_SYNC :
 219:FATFS/Target/sd_diskio.c ****     res = RES_OK;
 220:FATFS/Target/sd_diskio.c ****     break;
 221:FATFS/Target/sd_diskio.c **** 
 222:FATFS/Target/sd_diskio.c ****   /* Get number of sectors on the disk (DWORD) */
 223:FATFS/Target/sd_diskio.c ****   case GET_SECTOR_COUNT :
 224:FATFS/Target/sd_diskio.c ****     BSP_SD_GetCardInfo(&CardInfo);
 323              		.loc 1 224 5 view .LVU70
 324 0020 6846     		mov	r0, sp
 325 0022 FFF7FEFF 		bl	BSP_SD_GetCardInfo
 326              	.LVL29:
 225:FATFS/Target/sd_diskio.c ****     *(DWORD*)buff = CardInfo.LogBlockNbr;
 327              		.loc 1 225 5 view .LVU71
 328              		.loc 1 225 29 is_stmt 0 view .LVU72
 329 0026 069B     		ldr	r3, [sp, #24]
 330              		.loc 1 225 19 view .LVU73
 331 0028 2B60     		str	r3, [r5]
 226:FATFS/Target/sd_diskio.c ****     res = RES_OK;
 332              		.loc 1 226 5 is_stmt 1 view .LVU74
 333              	.LVL30:
 227:FATFS/Target/sd_diskio.c ****     break;
 334              		.loc 1 227 5 view .LVU75
 335 002a 0DE0     		b	.L25
 336              	.LVL31:
 337              	.L28:
 228:FATFS/Target/sd_diskio.c **** 
 229:FATFS/Target/sd_diskio.c ****   /* Get R/W sector size (WORD) */
 230:FATFS/Target/sd_diskio.c ****   case GET_SECTOR_SIZE :
 231:FATFS/Target/sd_diskio.c ****     BSP_SD_GetCardInfo(&CardInfo);
 338              		.loc 1 231 5 view .LVU76
 339 002c 6846     		mov	r0, sp
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 11


 340 002e FFF7FEFF 		bl	BSP_SD_GetCardInfo
 341              	.LVL32:
 232:FATFS/Target/sd_diskio.c ****     *(WORD*)buff = CardInfo.LogBlockSize;
 342              		.loc 1 232 5 view .LVU77
 343              		.loc 1 232 28 is_stmt 0 view .LVU78
 344 0032 079B     		ldr	r3, [sp, #28]
 345              		.loc 1 232 18 view .LVU79
 346 0034 2B80     		strh	r3, [r5]	@ movhi
 233:FATFS/Target/sd_diskio.c ****     res = RES_OK;
 347              		.loc 1 233 5 is_stmt 1 view .LVU80
 348              	.LVL33:
 234:FATFS/Target/sd_diskio.c ****     break;
 349              		.loc 1 234 5 view .LVU81
 350 0036 07E0     		b	.L25
 351              	.LVL34:
 352              	.L26:
 235:FATFS/Target/sd_diskio.c **** 
 236:FATFS/Target/sd_diskio.c ****   /* Get erase block size in unit of sector (DWORD) */
 237:FATFS/Target/sd_diskio.c ****   case GET_BLOCK_SIZE :
 238:FATFS/Target/sd_diskio.c ****     BSP_SD_GetCardInfo(&CardInfo);
 353              		.loc 1 238 5 view .LVU82
 354 0038 6846     		mov	r0, sp
 355 003a FFF7FEFF 		bl	BSP_SD_GetCardInfo
 356              	.LVL35:
 239:FATFS/Target/sd_diskio.c ****     *(DWORD*)buff = CardInfo.LogBlockSize / SD_DEFAULT_BLOCK_SIZE;
 357              		.loc 1 239 5 view .LVU83
 358              		.loc 1 239 29 is_stmt 0 view .LVU84
 359 003e 079B     		ldr	r3, [sp, #28]
 360              		.loc 1 239 43 view .LVU85
 361 0040 5B0A     		lsrs	r3, r3, #9
 362              		.loc 1 239 19 view .LVU86
 363 0042 2B60     		str	r3, [r5]
 240:FATFS/Target/sd_diskio.c ****     res = RES_OK;
 364              		.loc 1 240 5 is_stmt 1 view .LVU87
 365              	.LVL36:
 241:FATFS/Target/sd_diskio.c ****     break;
 366              		.loc 1 241 5 view .LVU88
 367 0044 00E0     		b	.L25
 368              	.LVL37:
 369              	.L31:
 213:FATFS/Target/sd_diskio.c **** 
 370              		.loc 1 213 33 is_stmt 0 discriminator 1 view .LVU89
 371 0046 0324     		movs	r4, #3
 372              	.LVL38:
 373              	.L25:
 242:FATFS/Target/sd_diskio.c **** 
 243:FATFS/Target/sd_diskio.c ****   default:
 244:FATFS/Target/sd_diskio.c ****     res = RES_PARERR;
 245:FATFS/Target/sd_diskio.c ****   }
 246:FATFS/Target/sd_diskio.c **** 
 247:FATFS/Target/sd_diskio.c ****   return res;
 248:FATFS/Target/sd_diskio.c **** }
 374              		.loc 1 248 1 view .LVU90
 375 0048 2046     		mov	r0, r4
 376 004a 09B0     		add	sp, sp, #36
 377              		.cfi_remember_state
 378              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 12


 379              		@ sp needed
 380 004c 30BD     		pop	{r4, r5, pc}
 381              	.LVL39:
 382              	.L32:
 383              		.cfi_restore_state
 244:FATFS/Target/sd_diskio.c ****   }
 384              		.loc 1 244 9 view .LVU91
 385 004e 0424     		movs	r4, #4
 386 0050 FAE7     		b	.L25
 387              	.L35:
 388 0052 00BF     		.align	2
 389              	.L34:
 390 0054 00000000 		.word	Stat
 391              		.cfi_endproc
 392              	.LFE139:
 394              		.global	SD_Driver
 395              		.section	.rodata.SD_Driver,"a"
 396              		.align	2
 399              	SD_Driver:
 400 0000 00000000 		.word	SD_initialize
 401 0004 00000000 		.word	SD_status
 402 0008 00000000 		.word	SD_read
 403 000c 00000000 		.word	SD_write
 404 0010 00000000 		.word	SD_ioctl
 405              		.section	.data.Stat,"aw"
 408              	Stat:
 409 0000 01       		.byte	1
 410              		.text
 411              	.Letext0:
 412              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 413              		.file 3 "Middlewares/Third_Party/FatFs/src/diskio.h"
 414              		.file 4 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/ma
 415              		.file 5 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/sy
 416              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 417              		.file 7 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 418              		.file 8 "FATFS/Target/bsp_driver_sd.h"
 419              		.file 9 "FATFS/Target/sd_diskio.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 sd_diskio.c
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:21     .text.SD_CheckStatus:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:26     .text.SD_CheckStatus:00000000 SD_CheckStatus
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:65     .text.SD_CheckStatus:00000020 $d
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:408    .data.Stat:00000000 Stat
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:70     .text.SD_initialize:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:76     .text.SD_initialize:00000000 SD_initialize
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:121    .text.SD_initialize:00000024 $d
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:126    .text.SD_status:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:132    .text.SD_status:00000000 SD_status
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:154    .text.SD_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:160    .text.SD_read:00000000 SD_read
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:215    .text.SD_write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:221    .text.SD_write:00000000 SD_write
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:276    .text.SD_ioctl:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:282    .text.SD_ioctl:00000000 SD_ioctl
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:314    .text.SD_ioctl:00000018 $d
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:318    .text.SD_ioctl:0000001c $t
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:390    .text.SD_ioctl:00000054 $d
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:399    .rodata.SD_Driver:00000000 SD_Driver
C:\Users\Nathan\AppData\Local\Temp\ccv2rRVj.s:396    .rodata.SD_Driver:00000000 $d

UNDEFINED SYMBOLS
BSP_SD_GetCardState
BSP_SD_Init
BSP_SD_ReadBlocks
BSP_SD_WriteBlocks
BSP_SD_GetCardInfo
