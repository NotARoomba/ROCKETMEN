ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_SDIO_SD_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** #include <lsm6dsm_reg.h>
  23:Core/Src/main.c **** // #include "llcc68.h"
  24:Core/Src/main.c **** // #include <llcc68_hal.h>
  25:Core/Src/main.c **** #include <stm32f405xx.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** SD_HandleTypeDef hsd;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** UART_HandleTypeDef huart1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  64:Core/Src/main.c **** static void MX_SPI1_Init(void);
  65:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  66:Core/Src/main.c **** static void MX_I2C1_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** // function prototype
  69:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
  70:Core/Src/main.c ****                               uint16_t len);
  71:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
  72:Core/Src/main.c ****                              uint16_t len);
  73:Core/Src/main.c **** static void platform_delay(uint32_t ms);
  74:Core/Src/main.c **** /* USER CODE END PFP */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  77:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  78:Core/Src/main.c ****   int16_t temp;
  79:Core/Src/main.c **** //variable initialization
  80:Core/Src/main.c **** static int16_t data_raw_acceleration[3];
  81:Core/Src/main.c **** static int16_t data_raw_angular_rate[3];
  82:Core/Src/main.c **** static int16_t data_raw_temperature;
  83:Core/Src/main.c **** static float acceleration_mg[3];
  84:Core/Src/main.c **** static float angular_rate_mdps[3];
  85:Core/Src/main.c **** static float temperature_degC;
  86:Core/Src/main.c **** static uint8_t whoamI, rst;
  87:Core/Src/main.c **** /* USER CODE END 0 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 3


  89:Core/Src/main.c **** /**
  90:Core/Src/main.c ****   * @brief  The application entry point.
  91:Core/Src/main.c ****   * @retval int
  92:Core/Src/main.c ****   */
  93:Core/Src/main.c **** int main(void)
  94:Core/Src/main.c **** {
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Core/Src/main.c ****   HAL_Init();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Configure the system clock */
 110:Core/Src/main.c ****   SystemClock_Config();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Initialize all configured peripherals */
 117:Core/Src/main.c ****   MX_GPIO_Init();
 118:Core/Src/main.c ****   MX_SDIO_SD_Init();
 119:Core/Src/main.c ****   MX_SPI1_Init();
 120:Core/Src/main.c ****   MX_USART1_UART_Init();
 121:Core/Src/main.c ****   MX_I2C1_Init();
 122:Core/Src/main.c ****   MX_FATFS_Init();
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****    // variable initialization for sensor access
 128:Core/Src/main.c ****   stmdev_ctx_t dev_ctx;
 129:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 130:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 131:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   // llcc68_ctx_t radio_ctx;
 134:Core/Src/main.c ****   // radio_ctx.write_reg = llcc68_platform_write_read;
 135:Core/Src/main.c ****   // radio_ctx.read_reg = llcc68_platform_write_read;
 136:Core/Src/main.c ****   // radio_ctx.reset = llcc68_platform_reset;
 137:Core/Src/main.c ****   // radio_ctx.handle = &hspi1;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Wait sensor boot time */
 140:Core/Src/main.c ****   platform_delay(100);
 141:Core/Src/main.c ****   //set SPI as 3 wire communication
 142:Core/Src/main.c ****   lsm6dsm_spi_mode_set(&dev_ctx,LSM6DSM_SPI_3_WIRE);
 143:Core/Src/main.c ****   //set auto increment to read several register at same time
 144:Core/Src/main.c ****   lsm6dsm_auto_increment_set(&dev_ctx, 1);
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 4


 146:Core/Src/main.c ****   /* Check device ID */
 147:Core/Src/main.c ****   lsm6dsm_device_id_get(&dev_ctx, &whoamI);
 148:Core/Src/main.c ****   
 149:Core/Src/main.c ****   if (whoamI != LSM6DSM_ID)
 150:Core/Src/main.c ****     while (1) {
 151:Core/Src/main.c ****       /* manage here device not found */
 152:Core/Src/main.c ****     }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Restore default configuration */
 155:Core/Src/main.c ****   // you should not call this function because it will give uncorrect output register value
 156:Core/Src/main.c ****   //lsm6dsm_reset_set(&dev_ctx, PROPERTY_ENABLE);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   do {
 159:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 160:Core/Src/main.c ****   } while (rst);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /*  Enable Block Data Update */
 163:Core/Src/main.c ****   lsm6dsm_block_data_update_set(&dev_ctx, PROPERTY_ENABLE);
 164:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 165:Core/Src/main.c ****   lsm6dsm_xl_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_12Hz5);
 166:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_GY_ODR_12Hz5);
 167:Core/Src/main.c ****   /* Set full scale */
 168:Core/Src/main.c ****   lsm6dsm_xl_full_scale_set(&dev_ctx, LSM6DSM_2g);
 169:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 170:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 171:Core/Src/main.c ****    * Accelerometer - analog filter
 172:Core/Src/main.c ****    */
 173:Core/Src/main.c ****   lsm6dsm_xl_filter_analog_set(&dev_ctx, LSM6DSM_XL_ANA_BW_400Hz);
 174:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 175:Core/Src/main.c ****   //lsm6dsm_xl_lp1_bandwidth_set(&dev_ctx, LSM6DSM_XL_LP1_ODR_DIV_4);
 176:Core/Src/main.c ****   /* Accelerometer - LPF1 + LPF2 path */
 177:Core/Src/main.c ****   lsm6dsm_xl_lp2_bandwidth_set(&dev_ctx,
 178:Core/Src/main.c ****                                LSM6DSM_XL_LOW_NOISE_LP_ODR_DIV_100);
 179:Core/Src/main.c ****   /* Accelerometer - High Pass / Slope path */
 180:Core/Src/main.c ****   //lsm6dsm_xl_reference_mode_set(&dev_ctx, PROPERTY_DISABLE);
 181:Core/Src/main.c ****   //lsm6dsm_xl_hp_bandwidth_set(&dev_ctx, LSM6DSM_XL_HP_ODR_DIV_100);
 182:Core/Src/main.c ****   /* Gyroscope - filtering chain */
 183:Core/Src/main.c ****   lsm6dsm_gy_band_pass_set(&dev_ctx, LSM6DSM_HP_260mHz_LP1_STRONG);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Infinite loop */
 188:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 189:Core/Src/main.c ****   while (1)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t*)"Hello World!\r\n", 14, 1000);
 192:Core/Src/main.c ****     // TEMPERATURE SENSOR INIT
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****     // if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) == HAL_OK) {
 195:Core/Src/main.c ****     //   if (HAL_I2C_Master_Transmit(&hi2c1, 0x41 << 1, (uint8_t*)0xBC, 2, 1000) == HAL_OK) {
 196:Core/Src/main.c ****     //     uint8_t tempData[3];
 197:Core/Src/main.c ****     //     if (HAL_I2C_Master_Receive(&hi2c1, 0x41 << 1, &tempData, 3, 1000) == HAL_OK) {
 198:Core/Src/main.c ****     //       temp = (int16_t)((tempData[1] << 8) | tempData[0]);
 199:Core/Src/main.c ****     //       float tempFloat = ((float)temp/256.0f)+25.0f;
 200:Core/Src/main.c ****     //       printf("Temperature: %.3f\r\n", tempFloat);
 201:Core/Src/main.c ****     //     }
 202:Core/Src/main.c ****     //   }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 5


 203:Core/Src/main.c ****     // }
 204:Core/Src/main.c ****     /* USER CODE END WHILE */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 207:Core/Src/main.c ****      lsm6dsm_reg_t reg;
 208:Core/Src/main.c **** 	    /* Read output only if new value is available */
 209:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** 	    // if (reg.status_reg.xlda) {
 212:Core/Src/main.c **** 	    //   /* Read acceleration field data */
 213:Core/Src/main.c **** 	    //   memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 214:Core/Src/main.c **** 	    //   lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 215:Core/Src/main.c **** 	    //   acceleration_mg[0] =
 216:Core/Src/main.c **** 	    //     lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 217:Core/Src/main.c **** 	    //   acceleration_mg[1] =
 218:Core/Src/main.c **** 	    //     lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 219:Core/Src/main.c **** 	    //   acceleration_mg[2] =
 220:Core/Src/main.c **** 	    //     lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 221:Core/Src/main.c **** 	    //   printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 222:Core/Src/main.c **** 	    //           acceleration_mg[0], acceleration_mg[1], acceleration_mg[2]);
 223:Core/Src/main.c **** 	    // }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** 	    if (reg.status_reg.gda) {
 226:Core/Src/main.c **** 	      /* Read angular rate field data */
 227:Core/Src/main.c **** 	      memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 228:Core/Src/main.c **** 	      lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 229:Core/Src/main.c **** 	      angular_rate_mdps[0] =
 230:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 231:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 232:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 233:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 234:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 235:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 236:Core/Src/main.c **** 	      printf("%4.2f,%4.2f,%4.2f\r\n", angular_rate_mdps[0], angular_rate_mdps[1], angular_rate_mdp
 237:Core/Src/main.c **** 	    }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** 	    // if (reg.status_reg.tda) {
 240:Core/Src/main.c **** 	    //   /* Read temperature data */
 241:Core/Src/main.c **** 	    //   memset(&data_raw_temperature, 0x00, sizeof(int16_t));
 242:Core/Src/main.c **** 	    //   lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 243:Core/Src/main.c **** 	    //   temperature_degC = lsm6dsm_from_lsb_to_celsius(
 244:Core/Src/main.c **** 	    //                        data_raw_temperature);
 245:Core/Src/main.c **** 	    //   printf("Temperature [degC]:%6.2f\r\n",
 246:Core/Src/main.c **** 	    //           temperature_degC);
 247:Core/Src/main.c **** 	    // }
 248:Core/Src/main.c ****       platform_delay(100);
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   /* USER CODE END 3 */
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief System Clock Configuration
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** void SystemClock_Config(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 6


 260:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 265:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 268:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 269:Core/Src/main.c ****   */
 270:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 271:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 272:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 279:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 285:Core/Src/main.c ****   */
 286:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 287:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 288:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 289:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c **** }
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /**
 300:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 301:Core/Src/main.c ****   * @param None
 302:Core/Src/main.c ****   * @retval None
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c **** static void MX_I2C1_Init(void)
 305:Core/Src/main.c **** {
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 314:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 315:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 316:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 7


 317:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 318:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 319:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 320:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 321:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 322:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 323:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     Error_Handler();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 328:Core/Src/main.c ****     if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) != HAL_OK) {
 329:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 330:Core/Src/main.c ****     } else {
 331:Core/Src/main.c ****       HAL_I2C_Mem_Write(&hi2c1, 0x41 << 1, 0x04, 1, (uint8_t*)0x00, 1, 1000);
 332:Core/Src/main.c ****     }
 333:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief SDIO Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 343:Core/Src/main.c **** {
  28              		.loc 1 343 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 352:Core/Src/main.c ****   hsd.Instance = SDIO;
  33              		.loc 1 352 3 view .LVU1
  34              		.loc 1 352 16 is_stmt 0 view .LVU2
  35 0000 054B     		ldr	r3, .L2
  36 0002 064A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 353:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  38              		.loc 1 353 3 is_stmt 1 view .LVU3
  39              		.loc 1 353 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 354:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 354 3 is_stmt 1 view .LVU5
  43              		.loc 1 354 24 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 355:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 355 3 is_stmt 1 view .LVU7
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 8


  46              		.loc 1 355 27 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 356:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  48              		.loc 1 356 3 is_stmt 1 view .LVU9
  49              		.loc 1 356 20 is_stmt 0 view .LVU10
  50 000e 1A61     		str	r2, [r3, #16]
 357:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  51              		.loc 1 357 3 is_stmt 1 view .LVU11
  52              		.loc 1 357 32 is_stmt 0 view .LVU12
  53 0010 5A61     		str	r2, [r3, #20]
 358:Core/Src/main.c ****   hsd.Init.ClockDiv = 0;
  54              		.loc 1 358 3 is_stmt 1 view .LVU13
  55              		.loc 1 358 21 is_stmt 0 view .LVU14
  56 0012 9A61     		str	r2, [r3, #24]
 359:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** }
  57              		.loc 1 363 1 view .LVU15
  58 0014 7047     		bx	lr
  59              	.L3:
  60 0016 00BF     		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE137:
  67              		.section	.text.lsm6dsm_platform_write,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	lsm6dsm_platform_write:
  74              	.LVL0:
  75              	.LFB142:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 367:Core/Src/main.c ****   * @param None
 368:Core/Src/main.c ****   * @retval None
 369:Core/Src/main.c ****   */
 370:Core/Src/main.c **** static void MX_SPI1_Init(void)
 371:Core/Src/main.c **** {
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 380:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 381:Core/Src/main.c ****   hspi1.Instance = SPI1;
 382:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 383:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 384:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 9


 385:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 386:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 387:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 388:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 389:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 390:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 391:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 392:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 393:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief USART1 Initialization Function
 405:Core/Src/main.c ****   * @param None
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 409:Core/Src/main.c **** {
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 418:Core/Src/main.c ****   huart1.Instance = USART1;
 419:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 420:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 421:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 422:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 423:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 424:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 425:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 426:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 427:Core/Src/main.c ****   {
 428:Core/Src/main.c ****     Error_Handler();
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** }
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** /**
 437:Core/Src/main.c ****   * @brief GPIO Initialization Function
 438:Core/Src/main.c ****   * @param None
 439:Core/Src/main.c ****   * @retval None
 440:Core/Src/main.c ****   */
 441:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 10


 442:Core/Src/main.c **** {
 443:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 444:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 445:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 448:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 449:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 450:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 451:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 452:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 455:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin, GPIO_PIN_RESET);
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 458:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin, GPIO_PIN_RESET);
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /*Configure GPIO pins : PARACHUTE_Pin MOTOR_X_Pin MOTOR_Y_Pin RF_RESET_Pin */
 461:Core/Src/main.c ****   GPIO_InitStruct.Pin = PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin;
 462:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 463:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 464:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 465:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /*Configure GPIO pins : IMU_INT_Pin PRESSURE_INT_Pin */
 468:Core/Src/main.c ****   GPIO_InitStruct.Pin = IMU_INT_Pin|PRESSURE_INT_Pin;
 469:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 470:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 471:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 472:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 473:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /*Configure GPIO pin : SD_CD_Pin */
 476:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CD_Pin;
 477:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 478:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 479:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /*Configure GPIO pins : CS_PRESSURE_Pin CS_GYRO_Pin CS_WIRELESS_Pin */
 482:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin;
 483:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 484:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 485:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 486:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /*Configure GPIO pins : PC4 ANTENNA_IRQ_Pin */
 489:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|ANTENNA_IRQ_Pin;
 490:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 491:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 492:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 493:Core/Src/main.c **** 
 494:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 495:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 496:Core/Src/main.c **** }
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 11


 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** int _write(int fd, char* ptr, int len) {
 501:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 502:Core/Src/main.c **** 	return len;
 503:Core/Src/main.c **** }
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /*
 507:Core/Src/main.c ****  * @brief  Write generic device register (platform dependent)
 508:Core/Src/main.c ****  *
 509:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 510:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 511:Core/Src/main.c ****  * @param  reg       register to write
 512:Core/Src/main.c ****  * @param  bufp      pointer to data to write in register reg
 513:Core/Src/main.c ****  * @param  len       number of consecutive register to write
 514:Core/Src/main.c ****  *
 515:Core/Src/main.c ****  */
 516:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
 517:Core/Src/main.c ****                               uint16_t len)
 518:Core/Src/main.c **** {
  76              		.loc 1 518 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 518 1 is_stmt 0 view .LVU17
  81 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  82              		.cfi_def_cfa_offset 20
  83              		.cfi_offset 4, -20
  84              		.cfi_offset 5, -16
  85              		.cfi_offset 6, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 32
  90 0004 0446     		mov	r4, r0
  91 0006 1546     		mov	r5, r2
  92 0008 1E46     		mov	r6, r3
  93 000a 8DF80710 		strb	r1, [sp, #7]
 519:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
  94              		.loc 1 519 4 is_stmt 1 view .LVU18
  95 000e 0E4F     		ldr	r7, .L6
  96 0010 0022     		movs	r2, #0
  97              	.LVL1:
  98              		.loc 1 519 4 is_stmt 0 view .LVU19
  99 0012 0821     		movs	r1, #8
 100              	.LVL2:
 101              		.loc 1 519 4 view .LVU20
 102 0014 3846     		mov	r0, r7
 103              	.LVL3:
 104              		.loc 1 519 4 view .LVU21
 105 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.LVL4:
 520:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 107              		.loc 1 520 4 is_stmt 1 view .LVU22
 108 001a 4FF47A73 		mov	r3, #1000
 109 001e 0122     		movs	r2, #1
 110 0020 0DF10701 		add	r1, sp, #7
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 12


 111 0024 2046     		mov	r0, r4
 112 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 113              	.LVL5:
 521:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
 114              		.loc 1 521 4 view .LVU23
 115 002a 4FF47A73 		mov	r3, #1000
 116 002e 3246     		mov	r2, r6
 117 0030 2946     		mov	r1, r5
 118 0032 2046     		mov	r0, r4
 119 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 120              	.LVL6:
 522:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 121              		.loc 1 522 4 view .LVU24
 122 0038 0122     		movs	r2, #1
 123 003a 0821     		movs	r1, #8
 124 003c 3846     		mov	r0, r7
 125 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 126              	.LVL7:
 523:Core/Src/main.c ****   return 0;
 127              		.loc 1 523 3 view .LVU25
 524:Core/Src/main.c **** }
 128              		.loc 1 524 1 is_stmt 0 view .LVU26
 129 0042 0020     		movs	r0, #0
 130 0044 03B0     		add	sp, sp, #12
 131              		.cfi_def_cfa_offset 20
 132              		@ sp needed
 133 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 134              	.LVL8:
 135              	.L7:
 136              		.loc 1 524 1 view .LVU27
 137              		.align	2
 138              	.L6:
 139 0048 00000240 		.word	1073872896
 140              		.cfi_endproc
 141              	.LFE142:
 143              		.section	.text.lsm6dsm_platform_read,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	lsm6dsm_platform_read:
 150              	.LVL9:
 151              	.LFB143:
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** /*
 527:Core/Src/main.c ****  * @brief  Read generic device register (platform dependent)
 528:Core/Src/main.c ****  *
 529:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 530:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 531:Core/Src/main.c ****  * @param  reg       register to read
 532:Core/Src/main.c ****  * @param  bufp      pointer to buffer that store the data read
 533:Core/Src/main.c ****  * @param  len       number of consecutive register to read
 534:Core/Src/main.c ****  *
 535:Core/Src/main.c ****  */
 536:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
 537:Core/Src/main.c ****                              uint16_t len)
 538:Core/Src/main.c **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 13


 152              		.loc 1 538 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		.loc 1 538 1 is_stmt 0 view .LVU29
 157 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 158              		.cfi_def_cfa_offset 20
 159              		.cfi_offset 4, -20
 160              		.cfi_offset 5, -16
 161              		.cfi_offset 6, -12
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 83B0     		sub	sp, sp, #12
 165              		.cfi_def_cfa_offset 32
 166 0004 0446     		mov	r4, r0
 167 0006 1546     		mov	r5, r2
 168 0008 1E46     		mov	r6, r3
 169 000a 8DF80710 		strb	r1, [sp, #7]
 539:Core/Src/main.c **** 	  reg |= 0x80;
 170              		.loc 1 539 4 is_stmt 1 view .LVU30
 171              		.loc 1 539 8 is_stmt 0 view .LVU31
 172 000e CBB2     		uxtb	r3, r1
 173              	.LVL10:
 174              		.loc 1 539 8 view .LVU32
 175 0010 63F07F03 		orn	r3, r3, #127
 176 0014 8DF80730 		strb	r3, [sp, #7]
 540:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 177              		.loc 1 540 4 is_stmt 1 view .LVU33
 178 0018 0E4F     		ldr	r7, .L10
 179 001a 0022     		movs	r2, #0
 180              	.LVL11:
 181              		.loc 1 540 4 is_stmt 0 view .LVU34
 182 001c 0821     		movs	r1, #8
 183              	.LVL12:
 184              		.loc 1 540 4 view .LVU35
 185 001e 3846     		mov	r0, r7
 186              	.LVL13:
 187              		.loc 1 540 4 view .LVU36
 188 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL14:
 541:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 190              		.loc 1 541 4 is_stmt 1 view .LVU37
 191 0024 4FF47A73 		mov	r3, #1000
 192 0028 0122     		movs	r2, #1
 193 002a 0DF10701 		add	r1, sp, #7
 194 002e 2046     		mov	r0, r4
 195 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 196              	.LVL15:
 542:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 197              		.loc 1 542 4 view .LVU38
 198 0034 4FF47A73 		mov	r3, #1000
 199 0038 3246     		mov	r2, r6
 200 003a 2946     		mov	r1, r5
 201 003c 2046     		mov	r0, r4
 202 003e FFF7FEFF 		bl	HAL_SPI_Receive
 203              	.LVL16:
 543:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 14


 204              		.loc 1 543 4 view .LVU39
 205 0042 0122     		movs	r2, #1
 206 0044 0821     		movs	r1, #8
 207 0046 3846     		mov	r0, r7
 208 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 209              	.LVL17:
 544:Core/Src/main.c ****   return 0;
 210              		.loc 1 544 3 view .LVU40
 545:Core/Src/main.c **** }
 211              		.loc 1 545 1 is_stmt 0 view .LVU41
 212 004c 0020     		movs	r0, #0
 213 004e 03B0     		add	sp, sp, #12
 214              		.cfi_def_cfa_offset 20
 215              		@ sp needed
 216 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 217              	.LVL18:
 218              	.L11:
 219              		.loc 1 545 1 view .LVU42
 220 0052 00BF     		.align	2
 221              	.L10:
 222 0054 00000240 		.word	1073872896
 223              		.cfi_endproc
 224              	.LFE143:
 226              		.section	.text.MX_GPIO_Init,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	MX_GPIO_Init:
 233              	.LFB140:
 442:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 234              		.loc 1 442 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 40
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 4, -24
 241              		.cfi_offset 5, -20
 242              		.cfi_offset 6, -16
 243              		.cfi_offset 7, -12
 244              		.cfi_offset 8, -8
 245              		.cfi_offset 14, -4
 246 0004 8AB0     		sub	sp, sp, #40
 247              		.cfi_def_cfa_offset 64
 443:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 248              		.loc 1 443 3 view .LVU44
 443:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 249              		.loc 1 443 20 is_stmt 0 view .LVU45
 250 0006 0024     		movs	r4, #0
 251 0008 0594     		str	r4, [sp, #20]
 252 000a 0694     		str	r4, [sp, #24]
 253 000c 0794     		str	r4, [sp, #28]
 254 000e 0894     		str	r4, [sp, #32]
 255 0010 0994     		str	r4, [sp, #36]
 448:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 256              		.loc 1 448 3 is_stmt 1 view .LVU46
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 15


 257              	.LBB4:
 448:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 258              		.loc 1 448 3 view .LVU47
 259 0012 0094     		str	r4, [sp]
 448:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 260              		.loc 1 448 3 view .LVU48
 261 0014 384B     		ldr	r3, .L14
 262 0016 1A6B     		ldr	r2, [r3, #48]
 263 0018 42F08002 		orr	r2, r2, #128
 264 001c 1A63     		str	r2, [r3, #48]
 448:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 265              		.loc 1 448 3 view .LVU49
 266 001e 1A6B     		ldr	r2, [r3, #48]
 267 0020 02F08002 		and	r2, r2, #128
 268 0024 0092     		str	r2, [sp]
 448:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 269              		.loc 1 448 3 view .LVU50
 270 0026 009A     		ldr	r2, [sp]
 271              	.LBE4:
 448:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 272              		.loc 1 448 3 view .LVU51
 449:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 273              		.loc 1 449 3 view .LVU52
 274              	.LBB5:
 449:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 275              		.loc 1 449 3 view .LVU53
 276 0028 0194     		str	r4, [sp, #4]
 449:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 277              		.loc 1 449 3 view .LVU54
 278 002a 1A6B     		ldr	r2, [r3, #48]
 279 002c 42F00402 		orr	r2, r2, #4
 280 0030 1A63     		str	r2, [r3, #48]
 449:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 281              		.loc 1 449 3 view .LVU55
 282 0032 1A6B     		ldr	r2, [r3, #48]
 283 0034 02F00402 		and	r2, r2, #4
 284 0038 0192     		str	r2, [sp, #4]
 449:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 285              		.loc 1 449 3 view .LVU56
 286 003a 019A     		ldr	r2, [sp, #4]
 287              	.LBE5:
 449:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 288              		.loc 1 449 3 view .LVU57
 450:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 289              		.loc 1 450 3 view .LVU58
 290              	.LBB6:
 450:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 291              		.loc 1 450 3 view .LVU59
 292 003c 0294     		str	r4, [sp, #8]
 450:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 293              		.loc 1 450 3 view .LVU60
 294 003e 1A6B     		ldr	r2, [r3, #48]
 295 0040 42F00102 		orr	r2, r2, #1
 296 0044 1A63     		str	r2, [r3, #48]
 450:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 297              		.loc 1 450 3 view .LVU61
 298 0046 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 16


 299 0048 02F00102 		and	r2, r2, #1
 300 004c 0292     		str	r2, [sp, #8]
 450:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 301              		.loc 1 450 3 view .LVU62
 302 004e 029A     		ldr	r2, [sp, #8]
 303              	.LBE6:
 450:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 304              		.loc 1 450 3 view .LVU63
 451:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 305              		.loc 1 451 3 view .LVU64
 306              	.LBB7:
 451:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 307              		.loc 1 451 3 view .LVU65
 308 0050 0394     		str	r4, [sp, #12]
 451:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 309              		.loc 1 451 3 view .LVU66
 310 0052 1A6B     		ldr	r2, [r3, #48]
 311 0054 42F00802 		orr	r2, r2, #8
 312 0058 1A63     		str	r2, [r3, #48]
 451:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 313              		.loc 1 451 3 view .LVU67
 314 005a 1A6B     		ldr	r2, [r3, #48]
 315 005c 02F00802 		and	r2, r2, #8
 316 0060 0392     		str	r2, [sp, #12]
 451:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 317              		.loc 1 451 3 view .LVU68
 318 0062 039A     		ldr	r2, [sp, #12]
 319              	.LBE7:
 451:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 320              		.loc 1 451 3 view .LVU69
 452:Core/Src/main.c **** 
 321              		.loc 1 452 3 view .LVU70
 322              	.LBB8:
 452:Core/Src/main.c **** 
 323              		.loc 1 452 3 view .LVU71
 324 0064 0494     		str	r4, [sp, #16]
 452:Core/Src/main.c **** 
 325              		.loc 1 452 3 view .LVU72
 326 0066 1A6B     		ldr	r2, [r3, #48]
 327 0068 42F00202 		orr	r2, r2, #2
 328 006c 1A63     		str	r2, [r3, #48]
 452:Core/Src/main.c **** 
 329              		.loc 1 452 3 view .LVU73
 330 006e 1B6B     		ldr	r3, [r3, #48]
 331 0070 03F00203 		and	r3, r3, #2
 332 0074 0493     		str	r3, [sp, #16]
 452:Core/Src/main.c **** 
 333              		.loc 1 452 3 view .LVU74
 334 0076 049B     		ldr	r3, [sp, #16]
 335              	.LBE8:
 452:Core/Src/main.c **** 
 336              		.loc 1 452 3 view .LVU75
 455:Core/Src/main.c **** 
 337              		.loc 1 455 3 view .LVU76
 338 0078 204D     		ldr	r5, .L14+4
 339 007a 2246     		mov	r2, r4
 340 007c 8721     		movs	r1, #135
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 17


 341 007e 2846     		mov	r0, r5
 342 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 343              	.LVL19:
 458:Core/Src/main.c **** 
 344              		.loc 1 458 3 view .LVU77
 345 0084 1E4E     		ldr	r6, .L14+8
 346 0086 2246     		mov	r2, r4
 347 0088 1C21     		movs	r1, #28
 348 008a 3046     		mov	r0, r6
 349 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 350              	.LVL20:
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 351              		.loc 1 461 3 view .LVU78
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 352              		.loc 1 461 23 is_stmt 0 view .LVU79
 353 0090 8723     		movs	r3, #135
 354 0092 0593     		str	r3, [sp, #20]
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 355              		.loc 1 462 3 is_stmt 1 view .LVU80
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 356              		.loc 1 462 24 is_stmt 0 view .LVU81
 357 0094 0127     		movs	r7, #1
 358 0096 0697     		str	r7, [sp, #24]
 463:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 359              		.loc 1 463 3 is_stmt 1 view .LVU82
 463:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 360              		.loc 1 463 24 is_stmt 0 view .LVU83
 361 0098 0794     		str	r4, [sp, #28]
 464:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 362              		.loc 1 464 3 is_stmt 1 view .LVU84
 464:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 363              		.loc 1 464 25 is_stmt 0 view .LVU85
 364 009a 0894     		str	r4, [sp, #32]
 465:Core/Src/main.c **** 
 365              		.loc 1 465 3 is_stmt 1 view .LVU86
 366 009c 05A9     		add	r1, sp, #20
 367 009e 2846     		mov	r0, r5
 368 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL21:
 468:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 370              		.loc 1 468 3 view .LVU87
 468:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 371              		.loc 1 468 23 is_stmt 0 view .LVU88
 372 00a4 4823     		movs	r3, #72
 373 00a6 0593     		str	r3, [sp, #20]
 469:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 374              		.loc 1 469 3 is_stmt 1 view .LVU89
 469:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 469 24 is_stmt 0 view .LVU90
 376 00a8 4FF00208 		mov	r8, #2
 377 00ac CDF81880 		str	r8, [sp, #24]
 470:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 378              		.loc 1 470 3 is_stmt 1 view .LVU91
 470:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 379              		.loc 1 470 24 is_stmt 0 view .LVU92
 380 00b0 0794     		str	r4, [sp, #28]
 471:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 18


 381              		.loc 1 471 3 is_stmt 1 view .LVU93
 471:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 382              		.loc 1 471 25 is_stmt 0 view .LVU94
 383 00b2 0894     		str	r4, [sp, #32]
 472:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 384              		.loc 1 472 3 is_stmt 1 view .LVU95
 472:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 385              		.loc 1 472 29 is_stmt 0 view .LVU96
 386 00b4 0F23     		movs	r3, #15
 387 00b6 0993     		str	r3, [sp, #36]
 473:Core/Src/main.c **** 
 388              		.loc 1 473 3 is_stmt 1 view .LVU97
 389 00b8 05A9     		add	r1, sp, #20
 390 00ba 2846     		mov	r0, r5
 391 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 392              	.LVL22:
 476:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 393              		.loc 1 476 3 view .LVU98
 476:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 394              		.loc 1 476 23 is_stmt 0 view .LVU99
 395 00c0 CDF81480 		str	r8, [sp, #20]
 477:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 396              		.loc 1 477 3 is_stmt 1 view .LVU100
 477:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 477 24 is_stmt 0 view .LVU101
 398 00c4 0694     		str	r4, [sp, #24]
 478:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 399              		.loc 1 478 3 is_stmt 1 view .LVU102
 478:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 400              		.loc 1 478 24 is_stmt 0 view .LVU103
 401 00c6 0794     		str	r4, [sp, #28]
 479:Core/Src/main.c **** 
 402              		.loc 1 479 3 is_stmt 1 view .LVU104
 403 00c8 05A9     		add	r1, sp, #20
 404 00ca 3046     		mov	r0, r6
 405 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 406              	.LVL23:
 482:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 407              		.loc 1 482 3 view .LVU105
 482:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 408              		.loc 1 482 23 is_stmt 0 view .LVU106
 409 00d0 1C23     		movs	r3, #28
 410 00d2 0593     		str	r3, [sp, #20]
 483:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 411              		.loc 1 483 3 is_stmt 1 view .LVU107
 483:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 483 24 is_stmt 0 view .LVU108
 413 00d4 0697     		str	r7, [sp, #24]
 484:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 414              		.loc 1 484 3 is_stmt 1 view .LVU109
 484:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 415              		.loc 1 484 24 is_stmt 0 view .LVU110
 416 00d6 0794     		str	r4, [sp, #28]
 485:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 417              		.loc 1 485 3 is_stmt 1 view .LVU111
 485:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 418              		.loc 1 485 25 is_stmt 0 view .LVU112
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 19


 419 00d8 0894     		str	r4, [sp, #32]
 486:Core/Src/main.c **** 
 420              		.loc 1 486 3 is_stmt 1 view .LVU113
 421 00da 05A9     		add	r1, sp, #20
 422 00dc 3046     		mov	r0, r6
 423 00de FFF7FEFF 		bl	HAL_GPIO_Init
 424              	.LVL24:
 489:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 425              		.loc 1 489 3 view .LVU114
 489:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 426              		.loc 1 489 23 is_stmt 0 view .LVU115
 427 00e2 3023     		movs	r3, #48
 428 00e4 0593     		str	r3, [sp, #20]
 490:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 429              		.loc 1 490 3 is_stmt 1 view .LVU116
 490:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 430              		.loc 1 490 24 is_stmt 0 view .LVU117
 431 00e6 0694     		str	r4, [sp, #24]
 491:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 432              		.loc 1 491 3 is_stmt 1 view .LVU118
 491:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 433              		.loc 1 491 24 is_stmt 0 view .LVU119
 434 00e8 0794     		str	r4, [sp, #28]
 492:Core/Src/main.c **** 
 435              		.loc 1 492 3 is_stmt 1 view .LVU120
 436 00ea 05A9     		add	r1, sp, #20
 437 00ec 2846     		mov	r0, r5
 438 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 439              	.LVL25:
 496:Core/Src/main.c **** 
 440              		.loc 1 496 1 is_stmt 0 view .LVU121
 441 00f2 0AB0     		add	sp, sp, #40
 442              		.cfi_def_cfa_offset 24
 443              		@ sp needed
 444 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 445              	.L15:
 446              		.align	2
 447              	.L14:
 448 00f8 00380240 		.word	1073887232
 449 00fc 00080240 		.word	1073874944
 450 0100 00000240 		.word	1073872896
 451              		.cfi_endproc
 452              	.LFE140:
 454              		.section	.text.platform_delay,"ax",%progbits
 455              		.align	1
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 460              	platform_delay:
 461              	.LVL26:
 462              	.LFB145:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** static void llcc68_platform_reset(void *handle) {
 548:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_RESET);
 549:Core/Src/main.c ****   HAL_Delay(1);
 550:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_SET);
 551:Core/Src/main.c ****   HAL_Delay(1);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 20


 552:Core/Src/main.c **** }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** /*
 555:Core/Src/main.c ****  * @brief  platform specific delay (platform dependent)
 556:Core/Src/main.c ****  *
 557:Core/Src/main.c ****  * @param  ms        delay in ms
 558:Core/Src/main.c ****  *
 559:Core/Src/main.c ****  */
 560:Core/Src/main.c **** static void platform_delay(uint32_t ms)
 561:Core/Src/main.c **** {
 463              		.loc 1 561 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		.loc 1 561 1 is_stmt 0 view .LVU123
 468 0000 08B5     		push	{r3, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 562:Core/Src/main.c ****   HAL_Delay(ms);
 472              		.loc 1 562 3 is_stmt 1 view .LVU124
 473 0002 FFF7FEFF 		bl	HAL_Delay
 474              	.LVL27:
 563:Core/Src/main.c **** }
 475              		.loc 1 563 1 is_stmt 0 view .LVU125
 476 0006 08BD     		pop	{r3, pc}
 477              		.cfi_endproc
 478              	.LFE145:
 480              		.section	.text._write,"ax",%progbits
 481              		.align	1
 482              		.global	_write
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	_write:
 488              	.LVL28:
 489              	.LFB141:
 500:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 490              		.loc 1 500 40 is_stmt 1 view -0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 500:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 494              		.loc 1 500 40 is_stmt 0 view .LVU127
 495 0000 10B5     		push	{r4, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 4, -8
 498              		.cfi_offset 14, -4
 499 0002 1446     		mov	r4, r2
 501:Core/Src/main.c **** 	return len;
 500              		.loc 1 501 2 is_stmt 1 view .LVU128
 501 0004 6FF07F43 		mvn	r3, #-16777216
 502 0008 92B2     		uxth	r2, r2
 503              	.LVL29:
 501:Core/Src/main.c **** 	return len;
 504              		.loc 1 501 2 is_stmt 0 view .LVU129
 505 000a 0248     		ldr	r0, .L20
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 21


 506              	.LVL30:
 501:Core/Src/main.c **** 	return len;
 507              		.loc 1 501 2 view .LVU130
 508 000c FFF7FEFF 		bl	HAL_UART_Transmit
 509              	.LVL31:
 502:Core/Src/main.c **** }
 510              		.loc 1 502 2 is_stmt 1 view .LVU131
 503:Core/Src/main.c **** 
 511              		.loc 1 503 1 is_stmt 0 view .LVU132
 512 0010 2046     		mov	r0, r4
 513 0012 10BD     		pop	{r4, pc}
 514              	.LVL32:
 515              	.L21:
 503:Core/Src/main.c **** 
 516              		.loc 1 503 1 view .LVU133
 517              		.align	2
 518              	.L20:
 519 0014 00000000 		.word	huart1
 520              		.cfi_endproc
 521              	.LFE141:
 523              		.section	.text.Error_Handler,"ax",%progbits
 524              		.align	1
 525              		.global	Error_Handler
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	Error_Handler:
 531              	.LFB148:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** static void llcc68_reset() {
 566:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_RESET);
 567:Core/Src/main.c ****   HAL_Delay(1);
 568:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_SET);
 569:Core/Src/main.c ****   HAL_Delay(1);
 570:Core/Src/main.c **** }
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t* command, const uint16_t comm
 573:Core/Src/main.c ****                                      uint8_t* data, const uint16_t data_length ) {
 574:Core/Src/main.c ****  uint8_t res;
 575:Core/Src/main.c ****     
 576:Core/Src/main.c ****     /* set cs low */
 577:Core/Src/main.c ****     HAL_GPIO_WritePin(ANTENNA_IRQ_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 578:Core/Src/main.c ****     
 579:Core/Src/main.c ****     /* if in_len > 0 */
 580:Core/Src/main.c ****     if (command_length > 0)
 581:Core/Src/main.c ****     {
 582:Core/Src/main.c ****         /* transmit the input buffer */
 583:Core/Src/main.c ****         res = HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 584:Core/Src/main.c ****         if (res != HAL_OK)
 585:Core/Src/main.c ****         {
 586:Core/Src/main.c ****             /* set cs high */
 587:Core/Src/main.c ****             HAL_GPIO_WritePin(ANTENNA_IRQ_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 588:Core/Src/main.c ****            
 589:Core/Src/main.c ****             return 1;
 590:Core/Src/main.c ****         }
 591:Core/Src/main.c ****     }
 592:Core/Src/main.c ****     
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 22


 593:Core/Src/main.c ****     /* if out_len > 0 */
 594:Core/Src/main.c ****     if (data_length > 0)
 595:Core/Src/main.c ****     {
 596:Core/Src/main.c ****         /* transmit to the output buffer */
 597:Core/Src/main.c ****         res = HAL_SPI_Receive(&hspi1, data, data_length, 1000);
 598:Core/Src/main.c ****         if (res != HAL_OK)
 599:Core/Src/main.c ****         {
 600:Core/Src/main.c ****             /* set cs high */
 601:Core/Src/main.c ****             HAL_GPIO_WritePin(ANTENNA_IRQ_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 602:Core/Src/main.c ****            
 603:Core/Src/main.c ****             return 1;
 604:Core/Src/main.c ****         }
 605:Core/Src/main.c ****     }
 606:Core/Src/main.c ****     
 607:Core/Src/main.c ****     /* set cs high */
 608:Core/Src/main.c ****     HAL_GPIO_WritePin(ANTENNA_IRQ_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 609:Core/Src/main.c ****     
 610:Core/Src/main.c ****     return 0;
 611:Core/Src/main.c ****                                      }
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** /* USER CODE END 4 */
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** /**
 617:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 618:Core/Src/main.c ****   * @retval None
 619:Core/Src/main.c ****   */
 620:Core/Src/main.c **** void Error_Handler(void)
 621:Core/Src/main.c **** {
 532              		.loc 1 621 1 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ Volatile: function does not return.
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 622:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 623:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 624:Core/Src/main.c ****   __disable_irq();
 538              		.loc 1 624 3 view .LVU135
 539              	.LBB9:
 540              	.LBI9:
 541              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 23


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 24


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 25


 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 26


 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 27


 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 28


 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 29


 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 30


 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 31


 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 32


 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 33


 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 34


 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 35


 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 36


 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 37


 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 38


 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 39


 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 542              		.loc 2 960 27 view .LVU136
 543              	.LBB10:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 544              		.loc 2 962 3 view .LVU137
 545              		.syntax unified
 546              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 547 0000 72B6     		cpsid i
 548              	@ 0 "" 2
 549              		.thumb
 550              		.syntax unified
 551              	.L23:
 552              	.LBE10:
 553              	.LBE9:
 625:Core/Src/main.c ****   while (1)
 554              		.loc 1 625 3 view .LVU138
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****   }
 555              		.loc 1 627 3 view .LVU139
 625:Core/Src/main.c ****   while (1)
 556              		.loc 1 625 9 view .LVU140
 557 0002 FEE7     		b	.L23
 558              		.cfi_endproc
 559              	.LFE148:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 40


 561              		.section	.text.MX_SPI1_Init,"ax",%progbits
 562              		.align	1
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 567              	MX_SPI1_Init:
 568              	.LFB138:
 371:Core/Src/main.c **** 
 569              		.loc 1 371 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573 0000 08B5     		push	{r3, lr}
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 3, -8
 576              		.cfi_offset 14, -4
 381:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 577              		.loc 1 381 3 view .LVU142
 381:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 578              		.loc 1 381 18 is_stmt 0 view .LVU143
 579 0002 0D48     		ldr	r0, .L28
 580 0004 0D4B     		ldr	r3, .L28+4
 581 0006 0360     		str	r3, [r0]
 382:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 582              		.loc 1 382 3 is_stmt 1 view .LVU144
 382:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 583              		.loc 1 382 19 is_stmt 0 view .LVU145
 584 0008 4FF48273 		mov	r3, #260
 585 000c 4360     		str	r3, [r0, #4]
 383:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 586              		.loc 1 383 3 is_stmt 1 view .LVU146
 383:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 587              		.loc 1 383 24 is_stmt 0 view .LVU147
 588 000e 0023     		movs	r3, #0
 589 0010 8360     		str	r3, [r0, #8]
 384:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 590              		.loc 1 384 3 is_stmt 1 view .LVU148
 384:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 591              		.loc 1 384 23 is_stmt 0 view .LVU149
 592 0012 C360     		str	r3, [r0, #12]
 385:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 593              		.loc 1 385 3 is_stmt 1 view .LVU150
 385:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 594              		.loc 1 385 26 is_stmt 0 view .LVU151
 595 0014 0361     		str	r3, [r0, #16]
 386:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 596              		.loc 1 386 3 is_stmt 1 view .LVU152
 386:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 597              		.loc 1 386 23 is_stmt 0 view .LVU153
 598 0016 4361     		str	r3, [r0, #20]
 387:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 599              		.loc 1 387 3 is_stmt 1 view .LVU154
 387:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 600              		.loc 1 387 18 is_stmt 0 view .LVU155
 601 0018 4FF48022 		mov	r2, #262144
 602 001c 8261     		str	r2, [r0, #24]
 388:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 41


 603              		.loc 1 388 3 is_stmt 1 view .LVU156
 388:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 604              		.loc 1 388 32 is_stmt 0 view .LVU157
 605 001e C361     		str	r3, [r0, #28]
 389:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 606              		.loc 1 389 3 is_stmt 1 view .LVU158
 389:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 607              		.loc 1 389 23 is_stmt 0 view .LVU159
 608 0020 0362     		str	r3, [r0, #32]
 390:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 609              		.loc 1 390 3 is_stmt 1 view .LVU160
 390:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 610              		.loc 1 390 21 is_stmt 0 view .LVU161
 611 0022 4362     		str	r3, [r0, #36]
 391:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 612              		.loc 1 391 3 is_stmt 1 view .LVU162
 391:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 613              		.loc 1 391 29 is_stmt 0 view .LVU163
 614 0024 8362     		str	r3, [r0, #40]
 392:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 615              		.loc 1 392 3 is_stmt 1 view .LVU164
 392:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 616              		.loc 1 392 28 is_stmt 0 view .LVU165
 617 0026 0A23     		movs	r3, #10
 618 0028 C362     		str	r3, [r0, #44]
 393:Core/Src/main.c ****   {
 619              		.loc 1 393 3 is_stmt 1 view .LVU166
 393:Core/Src/main.c ****   {
 620              		.loc 1 393 7 is_stmt 0 view .LVU167
 621 002a FFF7FEFF 		bl	HAL_SPI_Init
 622              	.LVL33:
 393:Core/Src/main.c ****   {
 623              		.loc 1 393 6 discriminator 1 view .LVU168
 624 002e 00B9     		cbnz	r0, .L27
 401:Core/Src/main.c **** 
 625              		.loc 1 401 1 view .LVU169
 626 0030 08BD     		pop	{r3, pc}
 627              	.L27:
 395:Core/Src/main.c ****   }
 628              		.loc 1 395 5 is_stmt 1 view .LVU170
 629 0032 FFF7FEFF 		bl	Error_Handler
 630              	.LVL34:
 631              	.L29:
 632 0036 00BF     		.align	2
 633              	.L28:
 634 0038 00000000 		.word	hspi1
 635 003c 00300140 		.word	1073819648
 636              		.cfi_endproc
 637              	.LFE138:
 639              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	MX_USART1_UART_Init:
 646              	.LFB139:
 409:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 42


 647              		.loc 1 409 1 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651 0000 08B5     		push	{r3, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 3, -8
 654              		.cfi_offset 14, -4
 418:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 655              		.loc 1 418 3 view .LVU172
 418:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 656              		.loc 1 418 19 is_stmt 0 view .LVU173
 657 0002 0A48     		ldr	r0, .L34
 658 0004 0A4B     		ldr	r3, .L34+4
 659 0006 0360     		str	r3, [r0]
 419:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 660              		.loc 1 419 3 is_stmt 1 view .LVU174
 419:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 661              		.loc 1 419 24 is_stmt 0 view .LVU175
 662 0008 4FF4E133 		mov	r3, #115200
 663 000c 4360     		str	r3, [r0, #4]
 420:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 664              		.loc 1 420 3 is_stmt 1 view .LVU176
 420:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 665              		.loc 1 420 26 is_stmt 0 view .LVU177
 666 000e 0023     		movs	r3, #0
 667 0010 8360     		str	r3, [r0, #8]
 421:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 668              		.loc 1 421 3 is_stmt 1 view .LVU178
 421:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 669              		.loc 1 421 24 is_stmt 0 view .LVU179
 670 0012 C360     		str	r3, [r0, #12]
 422:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 671              		.loc 1 422 3 is_stmt 1 view .LVU180
 422:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 672              		.loc 1 422 22 is_stmt 0 view .LVU181
 673 0014 0361     		str	r3, [r0, #16]
 423:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 674              		.loc 1 423 3 is_stmt 1 view .LVU182
 423:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 675              		.loc 1 423 20 is_stmt 0 view .LVU183
 676 0016 0C22     		movs	r2, #12
 677 0018 4261     		str	r2, [r0, #20]
 424:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 678              		.loc 1 424 3 is_stmt 1 view .LVU184
 424:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 679              		.loc 1 424 25 is_stmt 0 view .LVU185
 680 001a 8361     		str	r3, [r0, #24]
 425:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 681              		.loc 1 425 3 is_stmt 1 view .LVU186
 425:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 682              		.loc 1 425 28 is_stmt 0 view .LVU187
 683 001c C361     		str	r3, [r0, #28]
 426:Core/Src/main.c ****   {
 684              		.loc 1 426 3 is_stmt 1 view .LVU188
 426:Core/Src/main.c ****   {
 685              		.loc 1 426 7 is_stmt 0 view .LVU189
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 43


 686 001e FFF7FEFF 		bl	HAL_UART_Init
 687              	.LVL35:
 426:Core/Src/main.c ****   {
 688              		.loc 1 426 6 discriminator 1 view .LVU190
 689 0022 00B9     		cbnz	r0, .L33
 434:Core/Src/main.c **** 
 690              		.loc 1 434 1 view .LVU191
 691 0024 08BD     		pop	{r3, pc}
 692              	.L33:
 428:Core/Src/main.c ****   }
 693              		.loc 1 428 5 is_stmt 1 view .LVU192
 694 0026 FFF7FEFF 		bl	Error_Handler
 695              	.LVL36:
 696              	.L35:
 697 002a 00BF     		.align	2
 698              	.L34:
 699 002c 00000000 		.word	huart1
 700 0030 00100140 		.word	1073811456
 701              		.cfi_endproc
 702              	.LFE139:
 704              		.section	.rodata.MX_I2C1_Init.str1.4,"aMS",%progbits,1
 705              		.align	2
 706              	.LC0:
 707 0000 54656D70 		.ascii	"Temperature not ready\015\012\000"
 707      65726174 
 707      75726520 
 707      6E6F7420 
 707      72656164 
 708              		.section	.text.MX_I2C1_Init,"ax",%progbits
 709              		.align	1
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 714              	MX_I2C1_Init:
 715              	.LFB136:
 305:Core/Src/main.c **** 
 716              		.loc 1 305 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720 0000 00B5     		push	{lr}
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 14, -4
 723 0002 85B0     		sub	sp, sp, #20
 724              		.cfi_def_cfa_offset 24
 314:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 725              		.loc 1 314 3 view .LVU194
 314:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 726              		.loc 1 314 18 is_stmt 0 view .LVU195
 727 0004 1948     		ldr	r0, .L42
 728 0006 1A4B     		ldr	r3, .L42+4
 729 0008 0360     		str	r3, [r0]
 315:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 730              		.loc 1 315 3 is_stmt 1 view .LVU196
 315:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 731              		.loc 1 315 25 is_stmt 0 view .LVU197
 732 000a 1A4B     		ldr	r3, .L42+8
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 44


 733 000c 4360     		str	r3, [r0, #4]
 316:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 734              		.loc 1 316 3 is_stmt 1 view .LVU198
 316:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 735              		.loc 1 316 24 is_stmt 0 view .LVU199
 736 000e 0023     		movs	r3, #0
 737 0010 8360     		str	r3, [r0, #8]
 317:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 738              		.loc 1 317 3 is_stmt 1 view .LVU200
 317:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 739              		.loc 1 317 26 is_stmt 0 view .LVU201
 740 0012 8222     		movs	r2, #130
 741 0014 C260     		str	r2, [r0, #12]
 318:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 742              		.loc 1 318 3 is_stmt 1 view .LVU202
 318:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 743              		.loc 1 318 29 is_stmt 0 view .LVU203
 744 0016 4FF48042 		mov	r2, #16384
 745 001a 0261     		str	r2, [r0, #16]
 319:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 746              		.loc 1 319 3 is_stmt 1 view .LVU204
 319:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 747              		.loc 1 319 30 is_stmt 0 view .LVU205
 748 001c 4361     		str	r3, [r0, #20]
 320:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 749              		.loc 1 320 3 is_stmt 1 view .LVU206
 320:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 750              		.loc 1 320 26 is_stmt 0 view .LVU207
 751 001e 8361     		str	r3, [r0, #24]
 321:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 752              		.loc 1 321 3 is_stmt 1 view .LVU208
 321:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 753              		.loc 1 321 30 is_stmt 0 view .LVU209
 754 0020 C361     		str	r3, [r0, #28]
 322:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 755              		.loc 1 322 3 is_stmt 1 view .LVU210
 322:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 756              		.loc 1 322 28 is_stmt 0 view .LVU211
 757 0022 0362     		str	r3, [r0, #32]
 323:Core/Src/main.c ****   {
 758              		.loc 1 323 3 is_stmt 1 view .LVU212
 323:Core/Src/main.c ****   {
 759              		.loc 1 323 7 is_stmt 0 view .LVU213
 760 0024 FFF7FEFF 		bl	HAL_I2C_Init
 761              	.LVL37:
 323:Core/Src/main.c ****   {
 762              		.loc 1 323 6 discriminator 1 view .LVU214
 763 0028 88B9     		cbnz	r0, .L41
 328:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 764              		.loc 1 328 5 is_stmt 1 view .LVU215
 328:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 765              		.loc 1 328 9 is_stmt 0 view .LVU216
 766 002a 4FF47A73 		mov	r3, #1000
 767 002e 0222     		movs	r2, #2
 768 0030 8221     		movs	r1, #130
 769 0032 0E48     		ldr	r0, .L42
 770 0034 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 45


 771              	.LVL38:
 328:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 772              		.loc 1 328 8 discriminator 1 view .LVU217
 773 0038 58B1     		cbz	r0, .L38
 329:Core/Src/main.c ****     } else {
 774              		.loc 1 329 7 is_stmt 1 view .LVU218
 775 003a 4FF47A73 		mov	r3, #1000
 776 003e 2022     		movs	r2, #32
 777 0040 0D49     		ldr	r1, .L42+12
 778 0042 0E48     		ldr	r0, .L42+16
 779 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 780              	.LVL39:
 781              	.L36:
 335:Core/Src/main.c **** 
 782              		.loc 1 335 1 is_stmt 0 view .LVU219
 783 0048 05B0     		add	sp, sp, #20
 784              		.cfi_remember_state
 785              		.cfi_def_cfa_offset 4
 786              		@ sp needed
 787 004a 5DF804FB 		ldr	pc, [sp], #4
 788              	.L41:
 789              		.cfi_restore_state
 325:Core/Src/main.c ****   }
 790              		.loc 1 325 5 is_stmt 1 view .LVU220
 791 004e FFF7FEFF 		bl	Error_Handler
 792              	.LVL40:
 793              	.L38:
 331:Core/Src/main.c ****     }
 794              		.loc 1 331 7 view .LVU221
 795 0052 4FF47A73 		mov	r3, #1000
 796 0056 0293     		str	r3, [sp, #8]
 797 0058 0123     		movs	r3, #1
 798 005a 0193     		str	r3, [sp, #4]
 799 005c 0022     		movs	r2, #0
 800 005e 0092     		str	r2, [sp]
 801 0060 0422     		movs	r2, #4
 802 0062 8221     		movs	r1, #130
 803 0064 0148     		ldr	r0, .L42
 804 0066 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 805              	.LVL41:
 335:Core/Src/main.c **** 
 806              		.loc 1 335 1 is_stmt 0 view .LVU222
 807 006a EDE7     		b	.L36
 808              	.L43:
 809              		.align	2
 810              	.L42:
 811 006c 00000000 		.word	hi2c1
 812 0070 00540040 		.word	1073763328
 813 0074 A0860100 		.word	100000
 814 0078 00000000 		.word	.LC0
 815 007c 00000000 		.word	huart1
 816              		.cfi_endproc
 817              	.LFE136:
 819              		.section	.text.SystemClock_Config,"ax",%progbits
 820              		.align	1
 821              		.global	SystemClock_Config
 822              		.syntax unified
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 46


 823              		.thumb
 824              		.thumb_func
 826              	SystemClock_Config:
 827              	.LFB135:
 258:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 828              		.loc 1 258 1 is_stmt 1 view -0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 80
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832 0000 00B5     		push	{lr}
 833              		.cfi_def_cfa_offset 4
 834              		.cfi_offset 14, -4
 835 0002 95B0     		sub	sp, sp, #84
 836              		.cfi_def_cfa_offset 88
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 837              		.loc 1 259 3 view .LVU224
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 838              		.loc 1 259 22 is_stmt 0 view .LVU225
 839 0004 3022     		movs	r2, #48
 840 0006 0021     		movs	r1, #0
 841 0008 08A8     		add	r0, sp, #32
 842 000a FFF7FEFF 		bl	memset
 843              	.LVL42:
 260:Core/Src/main.c **** 
 844              		.loc 1 260 3 is_stmt 1 view .LVU226
 260:Core/Src/main.c **** 
 845              		.loc 1 260 22 is_stmt 0 view .LVU227
 846 000e 0023     		movs	r3, #0
 847 0010 0393     		str	r3, [sp, #12]
 848 0012 0493     		str	r3, [sp, #16]
 849 0014 0593     		str	r3, [sp, #20]
 850 0016 0693     		str	r3, [sp, #24]
 851 0018 0793     		str	r3, [sp, #28]
 264:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 852              		.loc 1 264 3 is_stmt 1 view .LVU228
 853              	.LBB11:
 264:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 854              		.loc 1 264 3 view .LVU229
 855 001a 0193     		str	r3, [sp, #4]
 264:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 856              		.loc 1 264 3 view .LVU230
 857 001c 1C4A     		ldr	r2, .L50
 858 001e 116C     		ldr	r1, [r2, #64]
 859 0020 41F08051 		orr	r1, r1, #268435456
 860 0024 1164     		str	r1, [r2, #64]
 264:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 861              		.loc 1 264 3 view .LVU231
 862 0026 126C     		ldr	r2, [r2, #64]
 863 0028 02F08052 		and	r2, r2, #268435456
 864 002c 0192     		str	r2, [sp, #4]
 264:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 865              		.loc 1 264 3 view .LVU232
 866 002e 019A     		ldr	r2, [sp, #4]
 867              	.LBE11:
 264:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 868              		.loc 1 264 3 view .LVU233
 265:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 47


 869              		.loc 1 265 3 view .LVU234
 870              	.LBB12:
 265:Core/Src/main.c **** 
 871              		.loc 1 265 3 view .LVU235
 872 0030 0293     		str	r3, [sp, #8]
 265:Core/Src/main.c **** 
 873              		.loc 1 265 3 view .LVU236
 874 0032 184A     		ldr	r2, .L50+4
 875 0034 1168     		ldr	r1, [r2]
 876 0036 41F48041 		orr	r1, r1, #16384
 877 003a 1160     		str	r1, [r2]
 265:Core/Src/main.c **** 
 878              		.loc 1 265 3 view .LVU237
 879 003c 1268     		ldr	r2, [r2]
 880 003e 02F48042 		and	r2, r2, #16384
 881 0042 0292     		str	r2, [sp, #8]
 265:Core/Src/main.c **** 
 882              		.loc 1 265 3 view .LVU238
 883 0044 029A     		ldr	r2, [sp, #8]
 884              	.LBE12:
 265:Core/Src/main.c **** 
 885              		.loc 1 265 3 view .LVU239
 270:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 886              		.loc 1 270 3 view .LVU240
 270:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 887              		.loc 1 270 36 is_stmt 0 view .LVU241
 888 0046 0222     		movs	r2, #2
 889 0048 0892     		str	r2, [sp, #32]
 271:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 890              		.loc 1 271 3 is_stmt 1 view .LVU242
 271:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 891              		.loc 1 271 30 is_stmt 0 view .LVU243
 892 004a 0121     		movs	r1, #1
 893 004c 0B91     		str	r1, [sp, #44]
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 894              		.loc 1 272 3 is_stmt 1 view .LVU244
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 895              		.loc 1 272 41 is_stmt 0 view .LVU245
 896 004e 1021     		movs	r1, #16
 897 0050 0C91     		str	r1, [sp, #48]
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 898              		.loc 1 273 3 is_stmt 1 view .LVU246
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 899              		.loc 1 273 34 is_stmt 0 view .LVU247
 900 0052 0E92     		str	r2, [sp, #56]
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 901              		.loc 1 274 3 is_stmt 1 view .LVU248
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 902              		.loc 1 274 35 is_stmt 0 view .LVU249
 903 0054 0F93     		str	r3, [sp, #60]
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 904              		.loc 1 275 3 is_stmt 1 view .LVU250
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 905              		.loc 1 275 30 is_stmt 0 view .LVU251
 906 0056 1091     		str	r1, [sp, #64]
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 907              		.loc 1 276 3 is_stmt 1 view .LVU252
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 48


 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 908              		.loc 1 276 30 is_stmt 0 view .LVU253
 909 0058 C023     		movs	r3, #192
 910 005a 1193     		str	r3, [sp, #68]
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 911              		.loc 1 277 3 is_stmt 1 view .LVU254
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 912              		.loc 1 277 30 is_stmt 0 view .LVU255
 913 005c 1292     		str	r2, [sp, #72]
 278:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 914              		.loc 1 278 3 is_stmt 1 view .LVU256
 278:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 915              		.loc 1 278 30 is_stmt 0 view .LVU257
 916 005e 0423     		movs	r3, #4
 917 0060 1393     		str	r3, [sp, #76]
 279:Core/Src/main.c ****   {
 918              		.loc 1 279 3 is_stmt 1 view .LVU258
 279:Core/Src/main.c ****   {
 919              		.loc 1 279 7 is_stmt 0 view .LVU259
 920 0062 08A8     		add	r0, sp, #32
 921 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 922              	.LVL43:
 279:Core/Src/main.c ****   {
 923              		.loc 1 279 6 discriminator 1 view .LVU260
 924 0068 68B9     		cbnz	r0, .L48
 286:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 925              		.loc 1 286 3 is_stmt 1 view .LVU261
 286:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 926              		.loc 1 286 31 is_stmt 0 view .LVU262
 927 006a 0F23     		movs	r3, #15
 928 006c 0393     		str	r3, [sp, #12]
 288:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 929              		.loc 1 288 3 is_stmt 1 view .LVU263
 288:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 930              		.loc 1 288 34 is_stmt 0 view .LVU264
 931 006e 0021     		movs	r1, #0
 932 0070 0491     		str	r1, [sp, #16]
 289:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 933              		.loc 1 289 3 is_stmt 1 view .LVU265
 289:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 934              		.loc 1 289 35 is_stmt 0 view .LVU266
 935 0072 0591     		str	r1, [sp, #20]
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 936              		.loc 1 290 3 is_stmt 1 view .LVU267
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 937              		.loc 1 290 36 is_stmt 0 view .LVU268
 938 0074 0691     		str	r1, [sp, #24]
 291:Core/Src/main.c **** 
 939              		.loc 1 291 3 is_stmt 1 view .LVU269
 291:Core/Src/main.c **** 
 940              		.loc 1 291 36 is_stmt 0 view .LVU270
 941 0076 0791     		str	r1, [sp, #28]
 293:Core/Src/main.c ****   {
 942              		.loc 1 293 3 is_stmt 1 view .LVU271
 293:Core/Src/main.c ****   {
 943              		.loc 1 293 7 is_stmt 0 view .LVU272
 944 0078 03A8     		add	r0, sp, #12
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 49


 945 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 946              	.LVL44:
 293:Core/Src/main.c ****   {
 947              		.loc 1 293 6 discriminator 1 view .LVU273
 948 007e 20B9     		cbnz	r0, .L49
 297:Core/Src/main.c **** 
 949              		.loc 1 297 1 view .LVU274
 950 0080 15B0     		add	sp, sp, #84
 951              		.cfi_remember_state
 952              		.cfi_def_cfa_offset 4
 953              		@ sp needed
 954 0082 5DF804FB 		ldr	pc, [sp], #4
 955              	.L48:
 956              		.cfi_restore_state
 281:Core/Src/main.c ****   }
 957              		.loc 1 281 5 is_stmt 1 view .LVU275
 958 0086 FFF7FEFF 		bl	Error_Handler
 959              	.LVL45:
 960              	.L49:
 295:Core/Src/main.c ****   }
 961              		.loc 1 295 5 view .LVU276
 962 008a FFF7FEFF 		bl	Error_Handler
 963              	.LVL46:
 964              	.L51:
 965 008e 00BF     		.align	2
 966              	.L50:
 967 0090 00380240 		.word	1073887232
 968 0094 00700040 		.word	1073770496
 969              		.cfi_endproc
 970              	.LFE135:
 972              		.global	__aeabi_f2d
 973              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 974              		.align	2
 975              	.LC1:
 976 0000 25342E32 		.ascii	"%4.2f,%4.2f,%4.2f\015\012\000"
 976      662C2534 
 976      2E32662C 
 976      25342E32 
 976      660D0A00 
 977              		.section	.text.main,"ax",%progbits
 978              		.align	1
 979              		.global	main
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 984              	main:
 985              	.LFB134:
  94:Core/Src/main.c **** 
 986              		.loc 1 94 1 view -0
 987              		.cfi_startproc
 988              		@ Volatile: function does not return.
 989              		@ args = 0, pretend = 0, frame = 24
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991 0000 80B5     		push	{r7, lr}
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 50


 995 0002 8AB0     		sub	sp, sp, #40
 996              		.cfi_def_cfa_offset 48
 103:Core/Src/main.c **** 
 997              		.loc 1 103 3 view .LVU278
 998 0004 FFF7FEFF 		bl	HAL_Init
 999              	.LVL47:
 110:Core/Src/main.c **** 
 1000              		.loc 1 110 3 view .LVU279
 1001 0008 FFF7FEFF 		bl	SystemClock_Config
 1002              	.LVL48:
 117:Core/Src/main.c ****   MX_SDIO_SD_Init();
 1003              		.loc 1 117 3 view .LVU280
 1004 000c FFF7FEFF 		bl	MX_GPIO_Init
 1005              	.LVL49:
 118:Core/Src/main.c ****   MX_SPI1_Init();
 1006              		.loc 1 118 3 view .LVU281
 1007 0010 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1008              	.LVL50:
 119:Core/Src/main.c ****   MX_USART1_UART_Init();
 1009              		.loc 1 119 3 view .LVU282
 1010 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1011              	.LVL51:
 120:Core/Src/main.c ****   MX_I2C1_Init();
 1012              		.loc 1 120 3 view .LVU283
 1013 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 1014              	.LVL52:
 121:Core/Src/main.c ****   MX_FATFS_Init();
 1015              		.loc 1 121 3 view .LVU284
 1016 001c FFF7FEFF 		bl	MX_I2C1_Init
 1017              	.LVL53:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1018              		.loc 1 122 3 view .LVU285
 1019 0020 FFF7FEFF 		bl	MX_FATFS_Init
 1020              	.LVL54:
 128:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 1021              		.loc 1 128 3 view .LVU286
 129:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1022              		.loc 1 129 3 view .LVU287
 129:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1023              		.loc 1 129 21 is_stmt 0 view .LVU288
 1024 0024 414B     		ldr	r3, .L58
 1025 0026 0693     		str	r3, [sp, #24]
 130:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1026              		.loc 1 130 3 is_stmt 1 view .LVU289
 130:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1027              		.loc 1 130 20 is_stmt 0 view .LVU290
 1028 0028 414B     		ldr	r3, .L58+4
 1029 002a 0793     		str	r3, [sp, #28]
 131:Core/Src/main.c **** 
 1030              		.loc 1 131 3 is_stmt 1 view .LVU291
 131:Core/Src/main.c **** 
 1031              		.loc 1 131 18 is_stmt 0 view .LVU292
 1032 002c 414B     		ldr	r3, .L58+8
 1033 002e 0993     		str	r3, [sp, #36]
 140:Core/Src/main.c ****   //set SPI as 3 wire communication
 1034              		.loc 1 140 3 is_stmt 1 view .LVU293
 1035 0030 6420     		movs	r0, #100
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 51


 1036 0032 FFF7FEFF 		bl	platform_delay
 1037              	.LVL55:
 142:Core/Src/main.c ****   //set auto increment to read several register at same time
 1038              		.loc 1 142 3 view .LVU294
 1039 0036 0121     		movs	r1, #1
 1040 0038 06A8     		add	r0, sp, #24
 1041 003a FFF7FEFF 		bl	lsm6dsm_spi_mode_set
 1042              	.LVL56:
 144:Core/Src/main.c **** 
 1043              		.loc 1 144 3 view .LVU295
 1044 003e 0121     		movs	r1, #1
 1045 0040 06A8     		add	r0, sp, #24
 1046 0042 FFF7FEFF 		bl	lsm6dsm_auto_increment_set
 1047              	.LVL57:
 147:Core/Src/main.c ****   
 1048              		.loc 1 147 3 view .LVU296
 1049 0046 3C4C     		ldr	r4, .L58+12
 1050 0048 2146     		mov	r1, r4
 1051 004a 06A8     		add	r0, sp, #24
 1052 004c FFF7FEFF 		bl	lsm6dsm_device_id_get
 1053              	.LVL58:
 149:Core/Src/main.c ****     while (1) {
 1054              		.loc 1 149 3 view .LVU297
 149:Core/Src/main.c ****     while (1) {
 1055              		.loc 1 149 14 is_stmt 0 view .LVU298
 1056 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 149:Core/Src/main.c ****     while (1) {
 1057              		.loc 1 149 6 view .LVU299
 1058 0052 6A2B     		cmp	r3, #106
 1059 0054 00D0     		beq	.L53
 1060              	.L54:
 150:Core/Src/main.c ****       /* manage here device not found */
 1061              		.loc 1 150 5 is_stmt 1 view .LVU300
 152:Core/Src/main.c **** 
 1062              		.loc 1 152 5 view .LVU301
 150:Core/Src/main.c ****       /* manage here device not found */
 1063              		.loc 1 150 11 view .LVU302
 1064 0056 FEE7     		b	.L54
 1065              	.L53:
 158:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 1066              		.loc 1 158 3 view .LVU303
 159:Core/Src/main.c ****   } while (rst);
 1067              		.loc 1 159 5 view .LVU304
 1068 0058 384C     		ldr	r4, .L58+16
 1069 005a 2146     		mov	r1, r4
 1070 005c 06A8     		add	r0, sp, #24
 1071 005e FFF7FEFF 		bl	lsm6dsm_reset_get
 1072              	.LVL59:
 160:Core/Src/main.c **** 
 1073              		.loc 1 160 12 discriminator 1 view .LVU305
 1074 0062 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1075 0064 002B     		cmp	r3, #0
 1076 0066 F7D1     		bne	.L53
 163:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 1077              		.loc 1 163 3 view .LVU306
 1078 0068 0121     		movs	r1, #1
 1079 006a 06A8     		add	r0, sp, #24
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 52


 1080 006c FFF7FEFF 		bl	lsm6dsm_block_data_update_set
 1081              	.LVL60:
 165:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_GY_ODR_12Hz5);
 1082              		.loc 1 165 3 view .LVU307
 1083 0070 0121     		movs	r1, #1
 1084 0072 06A8     		add	r0, sp, #24
 1085 0074 FFF7FEFF 		bl	lsm6dsm_xl_data_rate_set
 1086              	.LVL61:
 166:Core/Src/main.c ****   /* Set full scale */
 1087              		.loc 1 166 3 view .LVU308
 1088 0078 0121     		movs	r1, #1
 1089 007a 06A8     		add	r0, sp, #24
 1090 007c FFF7FEFF 		bl	lsm6dsm_gy_data_rate_set
 1091              	.LVL62:
 168:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 1092              		.loc 1 168 3 view .LVU309
 1093 0080 0021     		movs	r1, #0
 1094 0082 06A8     		add	r0, sp, #24
 1095 0084 FFF7FEFF 		bl	lsm6dsm_xl_full_scale_set
 1096              	.LVL63:
 169:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 1097              		.loc 1 169 3 view .LVU310
 1098 0088 0621     		movs	r1, #6
 1099 008a 06A8     		add	r0, sp, #24
 1100 008c FFF7FEFF 		bl	lsm6dsm_gy_full_scale_set
 1101              	.LVL64:
 173:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 1102              		.loc 1 173 3 view .LVU311
 1103 0090 0121     		movs	r1, #1
 1104 0092 06A8     		add	r0, sp, #24
 1105 0094 FFF7FEFF 		bl	lsm6dsm_xl_filter_analog_set
 1106              	.LVL65:
 177:Core/Src/main.c ****                                LSM6DSM_XL_LOW_NOISE_LP_ODR_DIV_100);
 1107              		.loc 1 177 3 view .LVU312
 1108 0098 1121     		movs	r1, #17
 1109 009a 06A8     		add	r0, sp, #24
 1110 009c FFF7FEFF 		bl	lsm6dsm_xl_lp2_bandwidth_set
 1111              	.LVL66:
 183:Core/Src/main.c **** 
 1112              		.loc 1 183 3 view .LVU313
 1113 00a0 A821     		movs	r1, #168
 1114 00a2 06A8     		add	r0, sp, #24
 1115 00a4 FFF7FEFF 		bl	lsm6dsm_gy_band_pass_set
 1116              	.LVL67:
 1117 00a8 02E0     		b	.L56
 1118              	.L55:
 1119              	.LBB13:
 248:Core/Src/main.c ****   }
 1120              		.loc 1 248 7 view .LVU314
 1121 00aa 6420     		movs	r0, #100
 1122 00ac FFF7FEFF 		bl	platform_delay
 1123              	.LVL68:
 1124              	.LBE13:
 189:Core/Src/main.c ****   {
 1125              		.loc 1 189 9 view .LVU315
 1126              	.L56:
 189:Core/Src/main.c ****   {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 53


 1127              		.loc 1 189 3 view .LVU316
 1128              	.LBB15:
 207:Core/Src/main.c **** 	    /* Read output only if new value is available */
 1129              		.loc 1 207 6 view .LVU317
 209:Core/Src/main.c **** 
 1130              		.loc 1 209 6 view .LVU318
 1131 00b0 05A9     		add	r1, sp, #20
 1132 00b2 06A8     		add	r0, sp, #24
 1133 00b4 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1134              	.LVL69:
 225:Core/Src/main.c **** 	      /* Read angular rate field data */
 1135              		.loc 1 225 6 view .LVU319
 225:Core/Src/main.c **** 	      /* Read angular rate field data */
 1136              		.loc 1 225 10 is_stmt 0 view .LVU320
 1137 00b8 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 225:Core/Src/main.c **** 	      /* Read angular rate field data */
 1138              		.loc 1 225 9 view .LVU321
 1139 00bc 13F0020F 		tst	r3, #2
 1140 00c0 F3D0     		beq	.L55
 1141              	.LBB14:
 227:Core/Src/main.c **** 	      lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1142              		.loc 1 227 8 is_stmt 1 view .LVU322
 1143 00c2 1F4C     		ldr	r4, .L58+20
 1144 00c4 0023     		movs	r3, #0
 1145 00c6 2360     		str	r3, [r4]
 1146 00c8 A380     		strh	r3, [r4, #4]	@ movhi
 228:Core/Src/main.c **** 	      angular_rate_mdps[0] =
 1147              		.loc 1 228 8 view .LVU323
 1148 00ca 2146     		mov	r1, r4
 1149 00cc 06A8     		add	r0, sp, #24
 1150 00ce FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1151              	.LVL70:
 229:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 1152              		.loc 1 229 8 view .LVU324
 230:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 1153              		.loc 1 230 10 is_stmt 0 view .LVU325
 1154 00d2 B4F90000 		ldrsh	r0, [r4]
 1155 00d6 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1156              	.LVL71:
 229:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 1157              		.loc 1 229 29 view .LVU326
 1158 00da 1A4D     		ldr	r5, .L58+24
 1159 00dc 85ED000A 		vstr.32	s0, [r5]
 231:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1160              		.loc 1 231 8 is_stmt 1 view .LVU327
 232:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 1161              		.loc 1 232 10 is_stmt 0 view .LVU328
 1162 00e0 B4F90200 		ldrsh	r0, [r4, #2]
 1163 00e4 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1164              	.LVL72:
 231:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1165              		.loc 1 231 29 view .LVU329
 1166 00e8 85ED010A 		vstr.32	s0, [r5, #4]
 233:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1167              		.loc 1 233 8 is_stmt 1 view .LVU330
 234:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 1168              		.loc 1 234 10 is_stmt 0 view .LVU331
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 54


 1169 00ec B4F90400 		ldrsh	r0, [r4, #4]
 1170 00f0 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1171              	.LVL73:
 1172 00f4 10EE104A 		vmov	r4, s0
 233:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1173              		.loc 1 233 29 view .LVU332
 1174 00f8 85ED020A 		vstr.32	s0, [r5, #8]
 236:Core/Src/main.c **** 	    }
 1175              		.loc 1 236 8 is_stmt 1 view .LVU333
 236:Core/Src/main.c **** 	    }
 1176              		.loc 1 236 79 is_stmt 0 view .LVU334
 1177 00fc D5F80480 		ldr	r8, [r5, #4]	@ float
 236:Core/Src/main.c **** 	    }
 1178              		.loc 1 236 8 view .LVU335
 1179 0100 2868     		ldr	r0, [r5]	@ float
 1180 0102 FFF7FEFF 		bl	__aeabi_f2d
 1181              	.LVL74:
 1182 0106 0646     		mov	r6, r0
 1183 0108 0F46     		mov	r7, r1
 1184 010a 2046     		mov	r0, r4	@ float
 1185 010c FFF7FEFF 		bl	__aeabi_f2d
 1186              	.LVL75:
 1187 0110 CDE90201 		strd	r0, [sp, #8]
 1188 0114 4046     		mov	r0, r8	@ float
 1189 0116 FFF7FEFF 		bl	__aeabi_f2d
 1190              	.LVL76:
 1191 011a CDE90001 		strd	r0, [sp]
 1192 011e 3246     		mov	r2, r6
 1193 0120 3B46     		mov	r3, r7
 1194 0122 0948     		ldr	r0, .L58+28
 1195 0124 FFF7FEFF 		bl	printf
 1196              	.LVL77:
 1197 0128 BFE7     		b	.L55
 1198              	.L59:
 1199 012a 00BF     		.align	2
 1200              	.L58:
 1201 012c 00000000 		.word	lsm6dsm_platform_write
 1202 0130 00000000 		.word	lsm6dsm_platform_read
 1203 0134 00000000 		.word	hspi1
 1204 0138 00000000 		.word	whoamI
 1205 013c 00000000 		.word	rst
 1206 0140 00000000 		.word	data_raw_angular_rate
 1207 0144 00000000 		.word	angular_rate_mdps
 1208 0148 00000000 		.word	.LC1
 1209              	.LBE14:
 1210              	.LBE15:
 1211              		.cfi_endproc
 1212              	.LFE134:
 1214              		.section	.bss.rst,"aw",%nobits
 1217              	rst:
 1218 0000 00       		.space	1
 1219              		.section	.bss.whoamI,"aw",%nobits
 1222              	whoamI:
 1223 0000 00       		.space	1
 1224              		.section	.bss.angular_rate_mdps,"aw",%nobits
 1225              		.align	2
 1228              	angular_rate_mdps:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 55


 1229 0000 00000000 		.space	12
 1229      00000000 
 1229      00000000 
 1230              		.section	.bss.data_raw_angular_rate,"aw",%nobits
 1231              		.align	2
 1234              	data_raw_angular_rate:
 1235 0000 00000000 		.space	6
 1235      0000
 1236              		.global	temp
 1237              		.section	.bss.temp,"aw",%nobits
 1238              		.align	1
 1241              	temp:
 1242 0000 0000     		.space	2
 1243              		.global	huart1
 1244              		.section	.bss.huart1,"aw",%nobits
 1245              		.align	2
 1248              	huart1:
 1249 0000 00000000 		.space	72
 1249      00000000 
 1249      00000000 
 1249      00000000 
 1249      00000000 
 1250              		.global	hspi1
 1251              		.section	.bss.hspi1,"aw",%nobits
 1252              		.align	2
 1255              	hspi1:
 1256 0000 00000000 		.space	88
 1256      00000000 
 1256      00000000 
 1256      00000000 
 1256      00000000 
 1257              		.global	hsd
 1258              		.section	.bss.hsd,"aw",%nobits
 1259              		.align	2
 1262              	hsd:
 1263 0000 00000000 		.space	132
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1264              		.global	hi2c1
 1265              		.section	.bss.hi2c1,"aw",%nobits
 1266              		.align	2
 1269              	hi2c1:
 1270 0000 00000000 		.space	84
 1270      00000000 
 1270      00000000 
 1270      00000000 
 1270      00000000 
 1271              		.text
 1272              	.Letext0:
 1273              		.file 3 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/ma
 1274              		.file 4 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/sy
 1275              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1276              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1277              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1278              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 56


 1279              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1280              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1281              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1282              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1283              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1284              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1285              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1286              		.file 16 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/m
 1287              		.file 17 "Drivers/LSM6DSM/Inc/lsm6dsm_reg.h"
 1288              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1289              		.file 19 "<built-in>"
 1290              		.file 20 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:21     .text.MX_SDIO_SD_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:26     .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:62     .text.MX_SDIO_SD_Init:00000018 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1262   .bss.hsd:00000000 hsd
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:68     .text.lsm6dsm_platform_write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:73     .text.lsm6dsm_platform_write:00000000 lsm6dsm_platform_write
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:139    .text.lsm6dsm_platform_write:00000048 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:144    .text.lsm6dsm_platform_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:149    .text.lsm6dsm_platform_read:00000000 lsm6dsm_platform_read
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:222    .text.lsm6dsm_platform_read:00000054 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:227    .text.MX_GPIO_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:232    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:448    .text.MX_GPIO_Init:000000f8 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:455    .text.platform_delay:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:460    .text.platform_delay:00000000 platform_delay
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:481    .text._write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:487    .text._write:00000000 _write
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:519    .text._write:00000014 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1248   .bss.huart1:00000000 huart1
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:524    .text.Error_Handler:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:530    .text.Error_Handler:00000000 Error_Handler
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:562    .text.MX_SPI1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:567    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:634    .text.MX_SPI1_Init:00000038 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1255   .bss.hspi1:00000000 hspi1
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:640    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:645    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:699    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:705    .rodata.MX_I2C1_Init.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:709    .text.MX_I2C1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:714    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:811    .text.MX_I2C1_Init:0000006c $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1269   .bss.hi2c1:00000000 hi2c1
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:820    .text.SystemClock_Config:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:826    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:967    .text.SystemClock_Config:00000090 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:974    .rodata.main.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:978    .text.main:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:984    .text.main:00000000 main
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1201   .text.main:0000012c $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1222   .bss.whoamI:00000000 whoamI
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1217   .bss.rst:00000000 rst
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1234   .bss.data_raw_angular_rate:00000000 data_raw_angular_rate
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1228   .bss.angular_rate_mdps:00000000 angular_rate_mdps
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1218   .bss.rst:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1223   .bss.whoamI:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1225   .bss.angular_rate_mdps:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1231   .bss.data_raw_angular_rate:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1241   .bss.temp:00000000 temp
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1238   .bss.temp:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1245   .bss.huart1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1252   .bss.hspi1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1259   .bss.hsd:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s:1266   .bss.hi2c1:00000000 $d

ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccO7bQxU.s 			page 58


UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
HAL_SPI_Receive
HAL_GPIO_Init
HAL_Delay
HAL_UART_Transmit
HAL_SPI_Init
HAL_UART_Init
HAL_I2C_Init
HAL_I2C_IsDeviceReady
HAL_I2C_Mem_Write
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_FATFS_Init
lsm6dsm_spi_mode_set
lsm6dsm_auto_increment_set
lsm6dsm_device_id_get
lsm6dsm_reset_get
lsm6dsm_block_data_update_set
lsm6dsm_xl_data_rate_set
lsm6dsm_gy_data_rate_set
lsm6dsm_xl_full_scale_set
lsm6dsm_gy_full_scale_set
lsm6dsm_xl_filter_analog_set
lsm6dsm_xl_lp2_bandwidth_set
lsm6dsm_gy_band_pass_set
lsm6dsm_status_reg_get
lsm6dsm_angular_rate_raw_get
lsm6dsm_from_fs2000dps_to_mdps
printf
