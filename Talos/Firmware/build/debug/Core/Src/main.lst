ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_SDIO_SD_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <lsm6dsm_reg.h>
  26:Core/Src/main.c **** #include <stm32f405xx.h>
  27:Core/Src/main.c **** #include <llcc68_hal.h>
  28:Core/Src/main.c **** #include <llcc68.h>
  29:Core/Src/main.c **** #include <bmp5.h>
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** SD_HandleTypeDef hsd;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** UART_HandleTypeDef huart1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  64:Core/Src/main.c **** static void MX_SPI1_Init(void);
  65:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  66:Core/Src/main.c **** static void MX_I2C1_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** // function prototype
  69:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
  70:Core/Src/main.c ****                               uint16_t len);
  71:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
  72:Core/Src/main.c ****                              uint16_t len);
  73:Core/Src/main.c **** static void platform_delay(uint32_t ms);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t *command, uint16_t command_le
  76:Core/Src/main.c ****                                           uint8_t *data, uint16_t data_length);
  77:Core/Src/main.c **** static int32_t llcc68_platform_reset(void *handle);
  78:Core/Src/main.c **** static int32_t bmp5_read(uint8_t reg_addr, uint8_t *read_data, uint32_t len, void *intf_ptr);
  79:Core/Src/main.c **** static int32_t bmp5_write(uint8_t reg_addr,
  80:Core/Src/main.c ****   const uint8_t * reg_data, uint32_t len, void *intf_ptr);
  81:Core/Src/main.c ****   void bmp5_error_codes_print_result(const char api_name[], int8_t rslt);
  82:Core/Src/main.c ****   static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_de
  83:Core/Src/main.c **** /* USER CODE END PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  86:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  87:Core/Src/main.c ****   int16_t temp;
  88:Core/Src/main.c **** //variable initialization
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 3


  89:Core/Src/main.c **** static int16_t data_raw_acceleration[3];
  90:Core/Src/main.c **** static int16_t data_raw_angular_rate[3];
  91:Core/Src/main.c **** static int16_t data_raw_temperature;
  92:Core/Src/main.c **** static float acceleration_mg[3];
  93:Core/Src/main.c **** static float angular_rate_mdps[3];
  94:Core/Src/main.c **** static float temperature_degC;
  95:Core/Src/main.c **** static uint8_t whoamI, rst;
  96:Core/Src/main.c **** /* USER CODE END 0 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /**
  99:Core/Src/main.c ****   * @brief  The application entry point.
 100:Core/Src/main.c ****   * @retval int
 101:Core/Src/main.c ****   */
 102:Core/Src/main.c **** int main(void)
 103:Core/Src/main.c **** {
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END 1 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 112:Core/Src/main.c ****   HAL_Init();
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Configure the system clock */
 119:Core/Src/main.c ****   SystemClock_Config();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Initialize all configured peripherals */
 126:Core/Src/main.c ****   MX_GPIO_Init();
 127:Core/Src/main.c ****   MX_SDIO_SD_Init();
 128:Core/Src/main.c ****   MX_SPI1_Init();
 129:Core/Src/main.c ****   MX_USART1_UART_Init();
 130:Core/Src/main.c ****   MX_I2C1_Init();
 131:Core/Src/main.c ****   MX_FATFS_Init();
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   //  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****    // variable initialization for sensor access
 137:Core/Src/main.c ****   stmdev_ctx_t dev_ctx;
 138:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 139:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 140:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   llcc68_ctx_t radio_ctx;
 143:Core/Src/main.c ****   radio_ctx.write_reg = llcc68_platform_write_read;
 144:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_write_read;
 145:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 4


 146:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   // int8_t rslt;
 149:Core/Src/main.c ****   // struct bmp5_dev bmp5_ctx;
 150:Core/Src/main.c ****   // bmp5_ctx.intf = BMP5_SPI_INTF;
 151:Core/Src/main.c ****   // bmp5_ctx.intf_ptr = &hspi1;
 152:Core/Src/main.c ****   // bmp5_ctx.read = (bmp5_read_fptr_t) &bmp5_read;
 153:Core/Src/main.c ****   // bmp5_ctx.write = (bmp5_write_fptr_t) &bmp5_write;
 154:Core/Src/main.c ****   // bmp5_ctx.delay_us = (bmp5_delay_us_fptr_t) &platform_delay;
 155:Core/Src/main.c ****   // struct bmp5_osr_odr_press_config osr_odr_press_cfg = { 0 };
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* Wait sensor boot time */
 158:Core/Src/main.c ****   platform_delay(1000);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   // PRESSURE SENSOR CONFIGURATION
 161:Core/Src/main.c ****   // bmp5_read(BMP5_REG_CHIP_ID, &whoamI, 1, &hspi1);
 162:Core/Src/main.c ****   // printf("Pressure sensor who am I: %d\n", whoamI);
 163:Core/Src/main.c ****   // rslt = bmp5_init(&bmp5_ctx);
 164:Core/Src/main.c ****   // bmp5_error_codes_print_result("bmp5_init", rslt);
 165:Core/Src/main.c ****   // if (rslt == BMP5_OK) {
 166:Core/Src/main.c ****   //   rslt = bmp5_set_config(&osr_odr_press_cfg, &bmp5_ctx);
 167:Core/Src/main.c ****   //   bmp5_error_codes_print_result("set_config", rslt);
 168:Core/Src/main.c ****   // }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   // IMU CONFIGURATION
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   //set SPI as 3 wire communication
 173:Core/Src/main.c ****   lsm6dsm_spi_mode_set(&dev_ctx,LSM6DSM_SPI_3_WIRE);
 174:Core/Src/main.c ****   //set auto increment to read several register at same time
 175:Core/Src/main.c ****   lsm6dsm_auto_increment_set(&dev_ctx, 1);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* Check device ID */
 178:Core/Src/main.c ****   lsm6dsm_device_id_get(&dev_ctx, &whoamI);
 179:Core/Src/main.c ****   
 180:Core/Src/main.c ****   if (whoamI != LSM6DSM_ID)
 181:Core/Src/main.c ****     while (1) {
 182:Core/Src/main.c ****       /* manage here device not found */
 183:Core/Src/main.c ****     }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* Restore default configuration */
 186:Core/Src/main.c ****   // you should not call this function because it will give uncorrect output register value
 187:Core/Src/main.c ****   //lsm6dsm_reset_set(&dev_ctx, PROPERTY_ENABLE);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   do {
 190:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 191:Core/Src/main.c ****   } while (rst);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /*  Enable Block Data Update */
 194:Core/Src/main.c ****   lsm6dsm_block_data_update_set(&dev_ctx, PROPERTY_ENABLE);
 195:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 196:Core/Src/main.c ****   lsm6dsm_xl_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_52Hz);
 197:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_52Hz);
 198:Core/Src/main.c ****   /* Set full scale */
 199:Core/Src/main.c ****   lsm6dsm_xl_full_scale_set(&dev_ctx, LSM6DSM_2g);
 200:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 201:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 202:Core/Src/main.c ****    * Accelerometer - analog filter
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 5


 203:Core/Src/main.c ****    */
 204:Core/Src/main.c ****   lsm6dsm_xl_filter_analog_set(&dev_ctx, LSM6DSM_XL_ANA_BW_400Hz);
 205:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 206:Core/Src/main.c ****   //lsm6dsm_xl_lp1_bandwidth_set(&dev_ctx, LSM6DSM_XL_LP1_ODR_DIV_4);
 207:Core/Src/main.c ****   /* Accelerometer - LPF1 + LPF2 path */
 208:Core/Src/main.c ****   lsm6dsm_xl_lp2_bandwidth_set(&dev_ctx,
 209:Core/Src/main.c ****                                LSM6DSM_XL_LOW_LAT_LP_ODR_DIV_400);
 210:Core/Src/main.c ****   /* Accelerometer - High Pass / Slope path */
 211:Core/Src/main.c ****   //lsm6dsm_xl_reference_mode_set(&dev_ctx, PROPERTY_DISABLE);
 212:Core/Src/main.c ****   //lsm6dsm_xl_hp_bandwidth_set(&dev_ctx, LSM6DSM_XL_HP_ODR_DIV_100);
 213:Core/Src/main.c ****   /* Gyroscope - filtering chain */
 214:Core/Src/main.c ****   lsm6dsm_gy_band_pass_set(&dev_ctx, LSM6DSM_HP_DISABLE_LP1_AGGRESSIVE);
 215:Core/Src/main.c ****   // update the offset bias of acceleration
 216:Core/Src/main.c ****   platform_delay(1000);
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   const int SAMPLE_SIZE = 5;
 219:Core/Src/main.c ****   //create a while loop that gets 5 sample of acceleration and calculate the average, then set the 
 220:Core/Src/main.c ****   int16_t acc_bias[3] = {0, 0, 0};
 221:Core/Src/main.c ****   int i = 0;
 222:Core/Src/main.c ****   do {
 223:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 224:Core/Src/main.c ****       /* Read output only if new value is available */
 225:Core/Src/main.c ****       lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 226:Core/Src/main.c ****       if (reg.status_reg.xlda) {
 227:Core/Src/main.c ****         /* Read acceleration field data */
 228:Core/Src/main.c ****         memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 229:Core/Src/main.c ****         lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 230:Core/Src/main.c ****         acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 231:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 232:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 233:Core/Src/main.c ****         platform_delay(100);
 234:Core/Src/main.c ****         i++;
 235:Core/Src/main.c ****       }
 236:Core/Src/main.c ****   } while (i < SAMPLE_SIZE);
 237:Core/Src/main.c ****   acc_bias[0] /= SAMPLE_SIZE;
 238:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 239:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 240:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 241:Core/Src/main.c ****   //   lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 242:Core/Src/main.c ****   //   acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 243:Core/Src/main.c ****   //   acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 244:Core/Src/main.c ****   //   acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 245:Core/Src/main.c ****   //   platform_delay(100);
 246:Core/Src/main.c ****   // } 
 247:Core/Src/main.c ****   // acc_bias[0] /= 10;
 248:Core/Src/main.c ****   // acc_bias[1] /= 10;
 249:Core/Src/main.c ****   // acc_bias[2] /= 10;
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   // lsm6dsm_xl_usr_offset_set(&dev_ctx, (uint8_t*)acc_bias);
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   // do the same for gyro
 254:Core/Src/main.c ****   int16_t gyro_bias[3] = {0, 0, 0};
 255:Core/Src/main.c ****   i = 0;
 256:Core/Src/main.c ****   do {
 257:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 258:Core/Src/main.c **** 	    /* Read output only if new value is available */
 259:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 6


 260:Core/Src/main.c ****       if (reg.status_reg.gda) {
 261:Core/Src/main.c ****         /* Read angular rate field data */
 262:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 263:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 264:Core/Src/main.c ****         gyro_bias[0] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 265:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 266:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 267:Core/Src/main.c ****         platform_delay(100);
 268:Core/Src/main.c ****         i++;
 269:Core/Src/main.c ****       }
 270:Core/Src/main.c ****   } while (i < SAMPLE_SIZE);
 271:Core/Src/main.c ****   gyro_bias[0] /= SAMPLE_SIZE;
 272:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 273:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   // LORA MODULE CONFIGURATION
 276:Core/Src/main.c ****   // platform_delay(100);
 277:Core/Src/main.c ****   //   llcc68_set_standby(&radio_ctx, LLCC68_STANDBY_CFG_RC);
 278:Core/Src/main.c ****   //   llcc68_set_pkt_type(&radio_ctx, LLCC68_PKT_TYPE_LORA);
 279:Core/Src/main.c ****   //   llcc68_set_rf_freq(&radio_ctx, 433000000);
 280:Core/Src/main.c ****   //   // // 17dBm
 281:Core/Src/main.c ****   //   // // {0x03, 0x05, 0x00, 0x01}
 282:Core/Src/main.c ****   //   const llcc68_pa_cfg_params_t pa_cfg = {0x03,
 283:Core/Src/main.c ****   //     0x05,
 284:Core/Src/main.c ****   //    0x00,
 285:Core/Src/main.c ****   //     0x01
 286:Core/Src/main.c ****   //   };
 287:Core/Src/main.c ****   //   const llcc68_pkt_params_lora_t pkt_params = {14, LLCC68_LORA_PKT_EXPLICIT, 14, true, false};
 288:Core/Src/main.c ****   //   const llcc68_mod_params_lora_t mod_params = {LLCC68_LORA_SF11, LLCC68_LORA_BW_250, LLCC68_LO
 289:Core/Src/main.c ****   //   llcc68_set_pa_cfg(&radio_ctx, (llcc68_pa_cfg_params_t*) &pa_cfg);
 290:Core/Src/main.c ****   //   // //The output power is defined as power in dBm in a range of - 9 (0xF7) to +22 (0x16) dBm 
 291:Core/Src/main.c ****   //   llcc68_set_tx_params(&radio_ctx, 0x16, LLCC68_RAMP_200_US);
 292:Core/Src/main.c ****   //    platform_delay(100);
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END 2 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* Infinite loop */
 297:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 298:Core/Src/main.c ****   while (1)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t*)"Hello World!\r\n", 14, 1000);
 301:Core/Src/main.c ****     // TEMPERATURE SENSOR INIT
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     // if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) == HAL_OK) {
 304:Core/Src/main.c ****     //   if (HAL_I2C_Master_Transmit(&hi2c1, 0x41 << 1, (uint8_t*)0xBC, 2, 1000) == HAL_OK) {
 305:Core/Src/main.c ****     //     uint8_t tempData[3];
 306:Core/Src/main.c ****     //     if (HAL_I2C_Master_Receive(&hi2c1, 0x41 << 1, &tempData, 3, 1000) == HAL_OK) {
 307:Core/Src/main.c ****     //       temp = (int16_t)((tempData[1] << 8) | tempData[0]);
 308:Core/Src/main.c ****     //       float tempFloat = ((float)temp/256.0f)+25.0f;
 309:Core/Src/main.c ****     //       printf("Temperature: %.3f\r\n", tempFloat);
 310:Core/Src/main.c ****     //     }
 311:Core/Src/main.c ****     //   }
 312:Core/Src/main.c ****     // }
 313:Core/Src/main.c ****     /* USER CODE END WHILE */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 316:Core/Src/main.c ****      lsm6dsm_reg_t reg;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 7


 317:Core/Src/main.c **** 	    /* Read output only if new value is available */
 318:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** 	    if (reg.status_reg.xlda) {
 321:Core/Src/main.c **** 	      /* Read acceleration field data */
 322:Core/Src/main.c **** 	      memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 323:Core/Src/main.c **** 	      lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 324:Core/Src/main.c **** 	      acceleration_mg[0] =
 325:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]) - acc_bias[0];
 326:Core/Src/main.c **** 	      acceleration_mg[1] =
 327:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]) - acc_bias[1];
 328:Core/Src/main.c **** 	      acceleration_mg[2] =
 329:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]) - acc_bias[2];
 330:Core/Src/main.c **** 	      // printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 331:Core/Src/main.c **** 	      //         acceleration_mg[0], acceleration_mg[1], acceleration_mg[2]);
 332:Core/Src/main.c ****         printf("%4.2f,%4.2f,%4.2f,", acceleration_mg[0], acceleration_mg[1], acceleration_mg[2]);
 333:Core/Src/main.c **** 	    }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 	    if (reg.status_reg.gda) {
 336:Core/Src/main.c **** 	      /* Read angular rate field data */
 337:Core/Src/main.c **** 	      memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 338:Core/Src/main.c **** 	      lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 339:Core/Src/main.c **** 	      angular_rate_mdps[0] =
 340:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]) - gyro_bias[0];
 341:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 342:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]) - gyro_bias[1];
 343:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 344:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]) - gyro_bias[2];
 345:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 346:Core/Src/main.c **** 	      printf("%4.2f,%4.2f,%4.2f,", angular_rate_mdps[0], angular_rate_mdps[1], angular_rate_mdps[2
 347:Core/Src/main.c **** 	    }
 348:Core/Src/main.c **** 	    if (reg.status_reg.tda) {
 349:Core/Src/main.c **** 	      /* Read temperature data */
 350:Core/Src/main.c **** 	      memset(&data_raw_temperature, 0x00, sizeof(int16_t));
 351:Core/Src/main.c **** 	      lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 352:Core/Src/main.c **** 	      temperature_degC = lsm6dsm_from_lsb_to_celsius(
 353:Core/Src/main.c **** 	                           data_raw_temperature);
 354:Core/Src/main.c **** 	      // printf("Temperature [degC]:%6.2f\r\n",
 355:Core/Src/main.c **** 	      //         temperature_degC);
 356:Core/Src/main.c ****         printf("%.2f,101.325\r\n", temperature_degC);
 357:Core/Src/main.c **** 	    }
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****       // uint8_t int_status;
 360:Core/Src/main.c ****       // struct bmp5_sensor_data bmp5_data;
 361:Core/Src/main.c ****       //   rslt = bmp5_get_interrupt_status(&int_status, &bmp5_ctx);
 362:Core/Src/main.c ****       //   bmp5_error_codes_print_result("bmp5_get_interrupt_status", rslt);
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****       //   if (int_status & BMP5_INT_ASSERTED_DRDY)
 365:Core/Src/main.c ****       //   {
 366:Core/Src/main.c ****       //       rslt = bmp5_get_sensor_data(&bmp5_data, &osr_odr_press_cfg, &bmp5_ctx);
 367:Core/Src/main.c ****       //       bmp5_error_codes_print_result("bmp5_get_sensor_data", rslt);
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****       //       if (rslt == BMP5_OK)
 370:Core/Src/main.c ****       //       {
 371:Core/Src/main.c ****       //           printf("%f\r\n", bmp5_data.pressure);
 372:Core/Src/main.c ****       //       }
 373:Core/Src/main.c ****       //   }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 8


 374:Core/Src/main.c ****     //   llcc68_set_buffer_base_address(&radio_ctx, 0x00, 0x00);
 375:Core/Src/main.c ****     // llcc68_write_buffer(&radio_ctx, 0x00, (uint8_t*)"Hello World!\r\n", 14);
 376:Core/Src/main.c ****     // llcc68_set_lora_mod_params(&radio_ctx, &mod_params);
 377:Core/Src/main.c ****     // llcc68_set_lora_pkt_params(&radio_ctx, &pkt_params);
 378:Core/Src/main.c ****     // llcc68_set_dio_irq_params(&radio_ctx, LLCC68_IRQ_TX_DONE | LLCC68_IRQ_RX_DONE, LLCC68_IRQ_TX
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C0, (uint8_t)0x12, 1);
 381:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C1, (uint8_t)0x23, 1);
 382:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C2, (uint8_t)0x34, 1);
 383:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C3, (uint8_t)0x45, 1);
 384:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C4, (uint8_t)0x56, 1);
 385:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C5, (uint8_t)0x67, 1);
 386:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C6, (uint8_t)0x78, 1);
 387:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C7, (uint8_t)0x89, 1);
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****     // llcc68_set_tx(&radio_ctx, 0);
 390:Core/Src/main.c ****     //   llcc68_chip_status_t chip_status;
 391:Core/Src/main.c ****     //   llcc68_status_t lora_status = llcc68_get_status(&radio_ctx, &chip_status);
 392:Core/Src/main.c ****     //   printf("LoRa Status: %d, Chip Status: %d\r\n", lora_status, chip_status.cmd_status);
 393:Core/Src/main.c ****     //  llcc68_set_standby(&radio_ctx, LLCC68_STANDBY_CFG_RC);
 394:Core/Src/main.c ****     //  ///print if busy or not with busy gpio pin
 395:Core/Src/main.c ****     //  HAL_GPIO_ReadPin(BUSY_GPIO_Port, BUSY_Pin) == GPIO_PIN_SET ? printf("Busy\r\n") : printf("N
 396:Core/Src/main.c ****       platform_delay(100);
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   /* USER CODE END 3 */
 399:Core/Src/main.c **** }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** /**
 402:Core/Src/main.c ****   * @brief System Clock Configuration
 403:Core/Src/main.c ****   * @retval None
 404:Core/Src/main.c ****   */
 405:Core/Src/main.c **** void SystemClock_Config(void)
 406:Core/Src/main.c **** {
 407:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 408:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 411:Core/Src/main.c ****   */
 412:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 413:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 416:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 417:Core/Src/main.c ****   */
 418:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 419:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 420:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 421:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 422:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 423:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 424:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 425:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 426:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 427:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 433:Core/Src/main.c ****   */
 434:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 435:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 436:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 437:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 438:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 439:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 442:Core/Src/main.c ****   {
 443:Core/Src/main.c ****     Error_Handler();
 444:Core/Src/main.c ****   }
 445:Core/Src/main.c **** }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 449:Core/Src/main.c ****   * @param None
 450:Core/Src/main.c ****   * @retval None
 451:Core/Src/main.c ****   */
 452:Core/Src/main.c **** static void MX_I2C1_Init(void)
 453:Core/Src/main.c **** {
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 462:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 463:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 464:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 465:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 466:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 467:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 468:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 469:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 470:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 471:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 472:Core/Src/main.c ****   {
 473:Core/Src/main.c ****     Error_Handler();
 474:Core/Src/main.c ****   }
 475:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 476:Core/Src/main.c ****     if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) != HAL_OK) {
 477:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 478:Core/Src/main.c ****     } else {
 479:Core/Src/main.c ****       HAL_I2C_Mem_Write(&hi2c1, 0x41 << 1, 0x04, 1, (uint8_t*)0x00, 1, 1000);
 480:Core/Src/main.c ****     }
 481:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** }
 484:Core/Src/main.c **** 
 485:Core/Src/main.c **** /**
 486:Core/Src/main.c ****   * @brief SDIO Initialization Function
 487:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 10


 488:Core/Src/main.c ****   * @retval None
 489:Core/Src/main.c ****   */
 490:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 491:Core/Src/main.c **** {
  28              		.loc 1 491 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 500:Core/Src/main.c ****   hsd.Instance = SDIO;
  33              		.loc 1 500 3 view .LVU1
  34              		.loc 1 500 16 is_stmt 0 view .LVU2
  35 0000 054B     		ldr	r3, .L2
  36 0002 064A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 501:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  38              		.loc 1 501 3 is_stmt 1 view .LVU3
  39              		.loc 1 501 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 502:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 502 3 is_stmt 1 view .LVU5
  43              		.loc 1 502 24 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 503:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 503 3 is_stmt 1 view .LVU7
  46              		.loc 1 503 27 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 504:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  48              		.loc 1 504 3 is_stmt 1 view .LVU9
  49              		.loc 1 504 20 is_stmt 0 view .LVU10
  50 000e 1A61     		str	r2, [r3, #16]
 505:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  51              		.loc 1 505 3 is_stmt 1 view .LVU11
  52              		.loc 1 505 32 is_stmt 0 view .LVU12
  53 0010 5A61     		str	r2, [r3, #20]
 506:Core/Src/main.c ****   hsd.Init.ClockDiv = 0;
  54              		.loc 1 506 3 is_stmt 1 view .LVU13
  55              		.loc 1 506 21 is_stmt 0 view .LVU14
  56 0012 9A61     		str	r2, [r3, #24]
 507:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** }
  57              		.loc 1 511 1 view .LVU15
  58 0014 7047     		bx	lr
  59              	.L3:
  60 0016 00BF     		.align	2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 11


  61              	.L2:
  62 0018 00000000 		.word	hsd
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE137:
  67              		.section	.text.llcc68_platform_reset,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	llcc68_platform_reset:
  74              	.LVL0:
  75              	.LFB144:
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** /**
 514:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 515:Core/Src/main.c ****   * @param None
 516:Core/Src/main.c ****   * @retval None
 517:Core/Src/main.c ****   */
 518:Core/Src/main.c **** static void MX_SPI1_Init(void)
 519:Core/Src/main.c **** {
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 528:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 529:Core/Src/main.c ****   hspi1.Instance = SPI1;
 530:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 531:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 532:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 533:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 534:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 535:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 536:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 537:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 538:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 539:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 540:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 541:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 542:Core/Src/main.c ****   {
 543:Core/Src/main.c ****     Error_Handler();
 544:Core/Src/main.c ****   }
 545:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** }
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** /**
 552:Core/Src/main.c ****   * @brief USART1 Initialization Function
 553:Core/Src/main.c ****   * @param None
 554:Core/Src/main.c ****   * @retval None
 555:Core/Src/main.c ****   */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 12


 556:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 557:Core/Src/main.c **** {
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 566:Core/Src/main.c ****   huart1.Instance = USART1;
 567:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 568:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 569:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 570:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 571:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 572:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 573:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 574:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 575:Core/Src/main.c ****   {
 576:Core/Src/main.c ****     Error_Handler();
 577:Core/Src/main.c ****   }
 578:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 581:Core/Src/main.c **** 
 582:Core/Src/main.c **** }
 583:Core/Src/main.c **** 
 584:Core/Src/main.c **** /**
 585:Core/Src/main.c ****   * @brief GPIO Initialization Function
 586:Core/Src/main.c ****   * @param None
 587:Core/Src/main.c ****   * @retval None
 588:Core/Src/main.c ****   */
 589:Core/Src/main.c **** static void MX_GPIO_Init(void)
 590:Core/Src/main.c **** {
 591:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 592:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 593:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 596:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 597:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 598:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 599:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 600:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 603:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin, GPIO_PIN_RESET);
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 606:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin, GPIO_PIN_RESET);
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /*Configure GPIO pins : PARACHUTE_Pin MOTOR_X_Pin MOTOR_Y_Pin RF_RESET_Pin */
 609:Core/Src/main.c ****   GPIO_InitStruct.Pin = PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin;
 610:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 611:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 612:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 13


 613:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   /*Configure GPIO pins : IMU_INT_Pin PRESSURE_INT_Pin */
 616:Core/Src/main.c ****   GPIO_InitStruct.Pin = IMU_INT_Pin|PRESSURE_INT_Pin;
 617:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 618:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 619:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 620:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 621:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /*Configure GPIO pin : SD_CD_Pin */
 624:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CD_Pin;
 625:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 626:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 627:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /*Configure GPIO pins : CS_PRESSURE_Pin CS_GYRO_Pin CS_WIRELESS_Pin */
 630:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin;
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 633:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 634:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /*Configure GPIO pin : BUSY_Pin */
 637:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUSY_Pin;
 638:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 639:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 640:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   /*Configure GPIO pin : ANTENNA_IRQ_Pin */
 643:Core/Src/main.c ****   GPIO_InitStruct.Pin = ANTENNA_IRQ_Pin;
 644:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 645:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 646:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 649:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 650:Core/Src/main.c **** }
 651:Core/Src/main.c **** 
 652:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** int _write(int fd, char* ptr, int len) {
 655:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 656:Core/Src/main.c **** 	return len;
 657:Core/Src/main.c **** }
 658:Core/Src/main.c **** 
 659:Core/Src/main.c **** 
 660:Core/Src/main.c **** /*
 661:Core/Src/main.c ****  * @brief  Write generic device register (platform dependent)
 662:Core/Src/main.c ****  *
 663:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 664:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 665:Core/Src/main.c ****  * @param  reg       register to write
 666:Core/Src/main.c ****  * @param  bufp      pointer to data to write in register reg
 667:Core/Src/main.c ****  * @param  len       number of consecutive register to write
 668:Core/Src/main.c ****  *
 669:Core/Src/main.c ****  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 14


 670:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
 671:Core/Src/main.c ****                               uint16_t len)
 672:Core/Src/main.c **** {
 673:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 674:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 675:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
 676:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 677:Core/Src/main.c ****   return 0;
 678:Core/Src/main.c **** }
 679:Core/Src/main.c **** 
 680:Core/Src/main.c **** /*
 681:Core/Src/main.c ****  * @brief  Read generic device register (platform dependent)
 682:Core/Src/main.c ****  *
 683:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 684:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 685:Core/Src/main.c ****  * @param  reg       register to read
 686:Core/Src/main.c ****  * @param  bufp      pointer to buffer that store the data read
 687:Core/Src/main.c ****  * @param  len       number of consecutive register to read
 688:Core/Src/main.c ****  *
 689:Core/Src/main.c ****  */
 690:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
 691:Core/Src/main.c ****                              uint16_t len)
 692:Core/Src/main.c **** {
 693:Core/Src/main.c **** 	  reg |= 0x80;
 694:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 695:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 696:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 697:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 698:Core/Src/main.c ****   return 0;
 699:Core/Src/main.c **** }
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** static int32_t llcc68_platform_reset(void *handle) {
  76              		.loc 1 701 52 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 701 52 is_stmt 0 view .LVU17
  81 0000 10B5     		push	{r4, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
 702:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_RESET);
  85              		.loc 1 702 3 is_stmt 1 view .LVU18
  86 0002 094C     		ldr	r4, .L6
  87 0004 0022     		movs	r2, #0
  88 0006 8021     		movs	r1, #128
  89 0008 2046     		mov	r0, r4
  90              	.LVL1:
  91              		.loc 1 702 3 is_stmt 0 view .LVU19
  92 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL2:
 703:Core/Src/main.c ****   HAL_Delay(1);
  94              		.loc 1 703 3 is_stmt 1 view .LVU20
  95 000e 0120     		movs	r0, #1
  96 0010 FFF7FEFF 		bl	HAL_Delay
  97              	.LVL3:
 704:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_SET);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 15


  98              		.loc 1 704 3 view .LVU21
  99 0014 0122     		movs	r2, #1
 100 0016 8021     		movs	r1, #128
 101 0018 2046     		mov	r0, r4
 102 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL4:
 705:Core/Src/main.c ****   HAL_Delay(1);
 104              		.loc 1 705 3 view .LVU22
 105 001e 0120     		movs	r0, #1
 106 0020 FFF7FEFF 		bl	HAL_Delay
 107              	.LVL5:
 706:Core/Src/main.c ****   return 0;
 108              		.loc 1 706 3 view .LVU23
 707:Core/Src/main.c **** }
 109              		.loc 1 707 1 is_stmt 0 view .LVU24
 110 0024 0020     		movs	r0, #0
 111 0026 10BD     		pop	{r4, pc}
 112              	.L7:
 113              		.align	2
 114              	.L6:
 115 0028 00080240 		.word	1073874944
 116              		.cfi_endproc
 117              	.LFE144:
 119              		.section	.text.platform_delay,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	platform_delay:
 126              	.LVL6:
 127              	.LFB149:
 708:Core/Src/main.c **** 
 709:Core/Src/main.c **** static int32_t bmp5_read(uint8_t reg_addr, uint8_t * reg_data, uint32_t len, void *intf_ptr) {
 710:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_RESET);
 711:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, &reg_addr, 1, 1000);
 712:Core/Src/main.c **** 	  HAL_SPI_Receive(&hspi1, reg_data, len, 1000);
 713:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_SET);
 714:Core/Src/main.c ****   return 0;
 715:Core/Src/main.c **** }
 716:Core/Src/main.c **** 
 717:Core/Src/main.c **** static int32_t bmp5_write(uint8_t reg_addr,
 718:Core/Src/main.c ****   const uint8_t * reg_data, uint32_t len, void *intf_ptr) {
 719:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_RESET);
 720:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, &reg_addr, 1, 1000);
 721:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi1, (uint8_t*) reg_data, len, 1000);
 722:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_SET);
 723:Core/Src/main.c ****   return 0;
 724:Core/Src/main.c **** }
 725:Core/Src/main.c **** 
 726:Core/Src/main.c **** /*!
 727:Core/Src/main.c ****  *  @brief Prints the execution status of the APIs.
 728:Core/Src/main.c ****  */
 729:Core/Src/main.c **** void bmp5_error_codes_print_result(const char api_name[], int8_t rslt)
 730:Core/Src/main.c **** {
 731:Core/Src/main.c ****     if (rslt != BMP5_OK)
 732:Core/Src/main.c ****     {
 733:Core/Src/main.c ****         printf("%s\t", api_name);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 16


 734:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 735:Core/Src/main.c ****         {
 736:Core/Src/main.c ****             printf("Error [%d] : Null pointer\r\n", rslt);
 737:Core/Src/main.c ****         }
 738:Core/Src/main.c ****         else if (rslt == BMP5_E_COM_FAIL)
 739:Core/Src/main.c ****         {
 740:Core/Src/main.c ****             printf("Error [%d] : Communication failure\r\n", rslt);
 741:Core/Src/main.c ****         }
 742:Core/Src/main.c ****         else if (rslt == BMP5_E_DEV_NOT_FOUND)
 743:Core/Src/main.c ****         {
 744:Core/Src/main.c ****             printf("Error [%d] : Device not found\r\n", rslt);
 745:Core/Src/main.c ****         }
 746:Core/Src/main.c ****         else if (rslt == BMP5_E_INVALID_CHIP_ID)
 747:Core/Src/main.c ****         {
 748:Core/Src/main.c ****             printf("Error [%d] : Invalid chip id\r\n", rslt);
 749:Core/Src/main.c ****         }
 750:Core/Src/main.c ****         else if (rslt == BMP5_E_POWER_UP)
 751:Core/Src/main.c ****         {
 752:Core/Src/main.c ****             printf("Error [%d] : Power up error\r\n", rslt);
 753:Core/Src/main.c ****         }
 754:Core/Src/main.c ****         else if (rslt == BMP5_E_POR_SOFTRESET)
 755:Core/Src/main.c ****         {
 756:Core/Src/main.c ****             printf("Error [%d] : Power-on reset/softreset failure\r\n", rslt);
 757:Core/Src/main.c ****         }
 758:Core/Src/main.c ****         else if (rslt == BMP5_E_INVALID_POWERMODE)
 759:Core/Src/main.c ****         {
 760:Core/Src/main.c ****             printf("Error [%d] : Invalid powermode\r\n", rslt);
 761:Core/Src/main.c ****         }
 762:Core/Src/main.c ****         else
 763:Core/Src/main.c ****         {
 764:Core/Src/main.c ****             /* For more error codes refer "*_defs.h" */
 765:Core/Src/main.c ****             printf("Error [%d] : Unknown error code\r\n", rslt);
 766:Core/Src/main.c ****         }
 767:Core/Src/main.c ****     }
 768:Core/Src/main.c **** }
 769:Core/Src/main.c **** static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_dev 
 770:Core/Src/main.c **** {
 771:Core/Src/main.c ****     int8_t rslt;
 772:Core/Src/main.c ****     struct bmp5_iir_config set_iir_cfg;
 773:Core/Src/main.c ****     struct bmp5_int_source_select int_source_select;
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****     rslt = bmp5_set_power_mode(BMP5_POWERMODE_STANDBY, dev);
 776:Core/Src/main.c ****     bmp5_error_codes_print_result("bmp5_set_power_mode1", rslt);
 777:Core/Src/main.c **** 
 778:Core/Src/main.c ****     if (rslt == BMP5_OK)
 779:Core/Src/main.c ****     {
 780:Core/Src/main.c ****         /* Get default odr */
 781:Core/Src/main.c ****         rslt = bmp5_get_osr_odr_press_config(osr_odr_press_cfg, dev);
 782:Core/Src/main.c ****         bmp5_error_codes_print_result("bmp5_get_osr_odr_press_config", rslt);
 783:Core/Src/main.c **** 
 784:Core/Src/main.c ****         if (rslt == BMP5_OK)
 785:Core/Src/main.c ****         {
 786:Core/Src/main.c ****             /* Set ODR as 50Hz */
 787:Core/Src/main.c ****             osr_odr_press_cfg->odr = BMP5_ODR_50_HZ;
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****             /* Enable pressure */
 790:Core/Src/main.c ****             osr_odr_press_cfg->press_en = BMP5_ENABLE;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 17


 791:Core/Src/main.c **** 
 792:Core/Src/main.c ****             /* Set Over-sampling rate with respect to odr */
 793:Core/Src/main.c ****             osr_odr_press_cfg->osr_t = BMP5_OVERSAMPLING_64X;
 794:Core/Src/main.c ****             osr_odr_press_cfg->osr_p = BMP5_OVERSAMPLING_4X;
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****             rslt = bmp5_set_osr_odr_press_config(osr_odr_press_cfg, dev);
 797:Core/Src/main.c ****             bmp5_error_codes_print_result("bmp5_set_osr_odr_press_config", rslt);
 798:Core/Src/main.c ****         }
 799:Core/Src/main.c **** 
 800:Core/Src/main.c ****         if (rslt == BMP5_OK)
 801:Core/Src/main.c ****         {
 802:Core/Src/main.c ****             set_iir_cfg.set_iir_t = BMP5_IIR_FILTER_COEFF_1;
 803:Core/Src/main.c ****             set_iir_cfg.set_iir_p = BMP5_IIR_FILTER_COEFF_1;
 804:Core/Src/main.c ****             set_iir_cfg.shdw_set_iir_t = BMP5_ENABLE;
 805:Core/Src/main.c ****             set_iir_cfg.shdw_set_iir_p = BMP5_ENABLE;
 806:Core/Src/main.c **** 
 807:Core/Src/main.c ****             rslt = bmp5_set_iir_config(&set_iir_cfg, dev);
 808:Core/Src/main.c ****             bmp5_error_codes_print_result("bmp5_set_iir_config", rslt);
 809:Core/Src/main.c ****         }
 810:Core/Src/main.c **** 
 811:Core/Src/main.c ****         if (rslt == BMP5_OK)
 812:Core/Src/main.c ****         {
 813:Core/Src/main.c ****             rslt = bmp5_configure_interrupt(BMP5_PULSED, BMP5_ACTIVE_HIGH, BMP5_INTR_PUSH_PULL, BMP
 814:Core/Src/main.c ****             bmp5_error_codes_print_result("bmp5_configure_interrupt", rslt);
 815:Core/Src/main.c **** 
 816:Core/Src/main.c ****             if (rslt == BMP5_OK)
 817:Core/Src/main.c ****             {
 818:Core/Src/main.c ****                 /* Note : Select INT_SOURCE after configuring interrupt */
 819:Core/Src/main.c ****                 int_source_select.drdy_en = BMP5_ENABLE;
 820:Core/Src/main.c ****                 rslt = bmp5_int_source_select(&int_source_select, dev);
 821:Core/Src/main.c ****                 bmp5_error_codes_print_result("bmp5_int_source_select", rslt);
 822:Core/Src/main.c ****             }
 823:Core/Src/main.c ****         }
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****         /* Set powermode as normal */
 826:Core/Src/main.c ****         rslt = bmp5_set_power_mode(BMP5_POWERMODE_NORMAL, dev);
 827:Core/Src/main.c ****         bmp5_error_codes_print_result("bmp5_set_power_mode", rslt);
 828:Core/Src/main.c ****     }
 829:Core/Src/main.c **** 
 830:Core/Src/main.c ****     return rslt;
 831:Core/Src/main.c **** }
 832:Core/Src/main.c **** 
 833:Core/Src/main.c **** 
 834:Core/Src/main.c **** /*
 835:Core/Src/main.c ****  * @brief  platform specific delay (platform dependent)
 836:Core/Src/main.c ****  *
 837:Core/Src/main.c ****  * @param  ms        delay in ms
 838:Core/Src/main.c ****  *
 839:Core/Src/main.c ****  */
 840:Core/Src/main.c **** static void platform_delay(uint32_t ms)
 841:Core/Src/main.c **** {
 128              		.loc 1 841 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		.loc 1 841 1 is_stmt 0 view .LVU26
 133 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 18


 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 842:Core/Src/main.c ****   HAL_Delay(ms);
 137              		.loc 1 842 3 is_stmt 1 view .LVU27
 138 0002 FFF7FEFF 		bl	HAL_Delay
 139              	.LVL7:
 843:Core/Src/main.c **** }
 140              		.loc 1 843 1 is_stmt 0 view .LVU28
 141 0006 08BD     		pop	{r3, pc}
 142              		.cfi_endproc
 143              	.LFE149:
 145              		.section	.text.lsm6dsm_platform_write,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	lsm6dsm_platform_write:
 152              	.LVL8:
 153              	.LFB142:
 672:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 154              		.loc 1 672 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 672:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 158              		.loc 1 672 1 is_stmt 0 view .LVU30
 159 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 160              		.cfi_def_cfa_offset 20
 161              		.cfi_offset 4, -20
 162              		.cfi_offset 5, -16
 163              		.cfi_offset 6, -12
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              		.cfi_def_cfa_offset 32
 168 0004 0446     		mov	r4, r0
 169 0006 1546     		mov	r5, r2
 170 0008 1E46     		mov	r6, r3
 171 000a 8DF80710 		strb	r1, [sp, #7]
 673:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 172              		.loc 1 673 4 is_stmt 1 view .LVU31
 173 000e 0E4F     		ldr	r7, .L12
 174 0010 0022     		movs	r2, #0
 175              	.LVL9:
 673:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 176              		.loc 1 673 4 is_stmt 0 view .LVU32
 177 0012 0821     		movs	r1, #8
 178              	.LVL10:
 673:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 179              		.loc 1 673 4 view .LVU33
 180 0014 3846     		mov	r0, r7
 181              	.LVL11:
 673:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 182              		.loc 1 673 4 view .LVU34
 183 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 184              	.LVL12:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 19


 674:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
 185              		.loc 1 674 4 is_stmt 1 view .LVU35
 186 001a 4FF47A73 		mov	r3, #1000
 187 001e 0122     		movs	r2, #1
 188 0020 0DF10701 		add	r1, sp, #7
 189 0024 2046     		mov	r0, r4
 190 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 191              	.LVL13:
 675:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 192              		.loc 1 675 4 view .LVU36
 193 002a 4FF47A73 		mov	r3, #1000
 194 002e 3246     		mov	r2, r6
 195 0030 2946     		mov	r1, r5
 196 0032 2046     		mov	r0, r4
 197 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 198              	.LVL14:
 676:Core/Src/main.c ****   return 0;
 199              		.loc 1 676 4 view .LVU37
 200 0038 0122     		movs	r2, #1
 201 003a 0821     		movs	r1, #8
 202 003c 3846     		mov	r0, r7
 203 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL15:
 677:Core/Src/main.c **** }
 205              		.loc 1 677 3 view .LVU38
 678:Core/Src/main.c **** 
 206              		.loc 1 678 1 is_stmt 0 view .LVU39
 207 0042 0020     		movs	r0, #0
 208 0044 03B0     		add	sp, sp, #12
 209              		.cfi_def_cfa_offset 20
 210              		@ sp needed
 211 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 212              	.LVL16:
 213              	.L13:
 678:Core/Src/main.c **** 
 214              		.loc 1 678 1 view .LVU40
 215              		.align	2
 216              	.L12:
 217 0048 00000240 		.word	1073872896
 218              		.cfi_endproc
 219              	.LFE142:
 221              		.section	.text.llcc68_platform_write_read,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	llcc68_platform_write_read:
 228              	.LVL17:
 229              	.LFB150:
 844:Core/Src/main.c **** 
 845:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t* command, const uint16_t comm
 846:Core/Src/main.c ****                                      uint8_t* data, const uint16_t data_length ) {
 230              		.loc 1 846 82 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 4, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		.loc 1 846 82 is_stmt 0 view .LVU42
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 20


 235 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 236              		.cfi_def_cfa_offset 24
 237              		.cfi_offset 3, -24
 238              		.cfi_offset 4, -20
 239              		.cfi_offset 5, -16
 240              		.cfi_offset 6, -12
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 0E46     		mov	r6, r1
 244 0004 1446     		mov	r4, r2
 245 0006 1D46     		mov	r5, r3
 246 0008 BDF81870 		ldrh	r7, [sp, #24]
 847:Core/Src/main.c ****  uint8_t res;
 247              		.loc 1 847 2 is_stmt 1 view .LVU43
 848:Core/Src/main.c ****     
 849:Core/Src/main.c ****     /* set cs low */
 850:Core/Src/main.c ****     HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 248              		.loc 1 850 5 view .LVU44
 249 000c 0022     		movs	r2, #0
 250              	.LVL18:
 251              		.loc 1 850 5 is_stmt 0 view .LVU45
 252 000e 1021     		movs	r1, #16
 253              	.LVL19:
 254              		.loc 1 850 5 view .LVU46
 255 0010 1548     		ldr	r0, .L21
 256              	.LVL20:
 257              		.loc 1 850 5 view .LVU47
 258 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 259              	.LVL21:
 851:Core/Src/main.c ****     
 852:Core/Src/main.c ****     /* if in_len > 0 */
 853:Core/Src/main.c ****     if (command_length > 0)
 260              		.loc 1 853 5 is_stmt 1 view .LVU48
 261              		.loc 1 853 8 is_stmt 0 view .LVU49
 262 0016 7CB9     		cbnz	r4, .L19
 263              	.L15:
 854:Core/Src/main.c ****     {
 855:Core/Src/main.c ****         /* transmit the input buffer */
 856:Core/Src/main.c ****         res = HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 857:Core/Src/main.c ****         if (res != HAL_OK)
 858:Core/Src/main.c ****         {
 859:Core/Src/main.c ****             /* set cs high */
 860:Core/Src/main.c ****             HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 861:Core/Src/main.c ****            
 862:Core/Src/main.c ****             return 1;
 863:Core/Src/main.c ****         }
 864:Core/Src/main.c ****     }
 865:Core/Src/main.c ****     
 866:Core/Src/main.c ****     /* if out_len > 0 */
 867:Core/Src/main.c ****     if (data_length > 0)
 264              		.loc 1 867 5 is_stmt 1 view .LVU50
 265              		.loc 1 867 8 is_stmt 0 view .LVU51
 266 0018 3FB1     		cbz	r7, .L17
 868:Core/Src/main.c ****     {
 869:Core/Src/main.c ****         /* transmit to the output buffer */
 870:Core/Src/main.c ****         res = HAL_SPI_Receive(&hspi1, data, data_length, 1000);
 267              		.loc 1 870 9 is_stmt 1 view .LVU52
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 21


 268              		.loc 1 870 15 is_stmt 0 view .LVU53
 269 001a 4FF47A73 		mov	r3, #1000
 270 001e 3A46     		mov	r2, r7
 271 0020 2946     		mov	r1, r5
 272 0022 1248     		ldr	r0, .L21+4
 273 0024 FFF7FEFF 		bl	HAL_SPI_Receive
 274              	.LVL22:
 871:Core/Src/main.c ****         if (res != HAL_OK)
 275              		.loc 1 871 9 is_stmt 1 view .LVU54
 276              		.loc 1 871 12 is_stmt 0 view .LVU55
 277 0028 B0B9     		cbnz	r0, .L20
 278              	.LVL23:
 279              	.L17:
 872:Core/Src/main.c ****         {
 873:Core/Src/main.c ****             /* set cs high */
 874:Core/Src/main.c ****             HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 875:Core/Src/main.c ****            
 876:Core/Src/main.c ****             return 1;
 877:Core/Src/main.c ****         }
 878:Core/Src/main.c ****     }
 879:Core/Src/main.c ****     
 880:Core/Src/main.c ****     /* set cs high */
 881:Core/Src/main.c ****     HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 280              		.loc 1 881 5 is_stmt 1 view .LVU56
 281 002a 0122     		movs	r2, #1
 282 002c 1021     		movs	r1, #16
 283 002e 0E48     		ldr	r0, .L21
 284 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL24:
 882:Core/Src/main.c ****     
 883:Core/Src/main.c ****     return 0;
 286              		.loc 1 883 5 view .LVU57
 287              		.loc 1 883 12 is_stmt 0 view .LVU58
 288 0034 0020     		movs	r0, #0
 289              	.L14:
 884:Core/Src/main.c ****                                      }
 290              		.loc 1 884 38 view .LVU59
 291 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 292              	.LVL25:
 293              	.L19:
 856:Core/Src/main.c ****         if (res != HAL_OK)
 294              		.loc 1 856 9 is_stmt 1 view .LVU60
 856:Core/Src/main.c ****         if (res != HAL_OK)
 295              		.loc 1 856 15 is_stmt 0 view .LVU61
 296 0038 4FF47A73 		mov	r3, #1000
 297 003c 2246     		mov	r2, r4
 298 003e 3146     		mov	r1, r6
 299 0040 0A48     		ldr	r0, .L21+4
 300 0042 FFF7FEFF 		bl	HAL_SPI_Transmit
 301              	.LVL26:
 857:Core/Src/main.c ****         {
 302              		.loc 1 857 9 is_stmt 1 view .LVU62
 857:Core/Src/main.c ****         {
 303              		.loc 1 857 12 is_stmt 0 view .LVU63
 304 0046 0028     		cmp	r0, #0
 305 0048 E6D0     		beq	.L15
 860:Core/Src/main.c ****            
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 22


 306              		.loc 1 860 13 is_stmt 1 view .LVU64
 307 004a 0122     		movs	r2, #1
 308 004c 1021     		movs	r1, #16
 309 004e 0648     		ldr	r0, .L21
 310              	.LVL27:
 860:Core/Src/main.c ****            
 311              		.loc 1 860 13 is_stmt 0 view .LVU65
 312 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 313              	.LVL28:
 862:Core/Src/main.c ****         }
 314              		.loc 1 862 13 is_stmt 1 view .LVU66
 862:Core/Src/main.c ****         }
 315              		.loc 1 862 20 is_stmt 0 view .LVU67
 316 0054 0120     		movs	r0, #1
 317 0056 EEE7     		b	.L14
 318              	.LVL29:
 319              	.L20:
 874:Core/Src/main.c ****            
 320              		.loc 1 874 13 is_stmt 1 view .LVU68
 321 0058 0122     		movs	r2, #1
 322 005a 1021     		movs	r1, #16
 323 005c 0248     		ldr	r0, .L21
 324              	.LVL30:
 874:Core/Src/main.c ****            
 325              		.loc 1 874 13 is_stmt 0 view .LVU69
 326 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 327              	.LVL31:
 876:Core/Src/main.c ****         }
 328              		.loc 1 876 13 is_stmt 1 view .LVU70
 876:Core/Src/main.c ****         }
 329              		.loc 1 876 20 is_stmt 0 view .LVU71
 330 0062 0120     		movs	r0, #1
 331 0064 E7E7     		b	.L14
 332              	.L22:
 333 0066 00BF     		.align	2
 334              	.L21:
 335 0068 00000240 		.word	1073872896
 336 006c 00000000 		.word	hspi1
 337              		.cfi_endproc
 338              	.LFE150:
 340              		.section	.text.lsm6dsm_platform_read,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	lsm6dsm_platform_read:
 347              	.LVL32:
 348              	.LFB143:
 692:Core/Src/main.c **** 	  reg |= 0x80;
 349              		.loc 1 692 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 692:Core/Src/main.c **** 	  reg |= 0x80;
 353              		.loc 1 692 1 is_stmt 0 view .LVU73
 354 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 355              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 23


 356              		.cfi_offset 4, -20
 357              		.cfi_offset 5, -16
 358              		.cfi_offset 6, -12
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 83B0     		sub	sp, sp, #12
 362              		.cfi_def_cfa_offset 32
 363 0004 0446     		mov	r4, r0
 364 0006 1546     		mov	r5, r2
 365 0008 1E46     		mov	r6, r3
 366 000a 8DF80710 		strb	r1, [sp, #7]
 693:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 367              		.loc 1 693 4 is_stmt 1 view .LVU74
 693:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 368              		.loc 1 693 8 is_stmt 0 view .LVU75
 369 000e CBB2     		uxtb	r3, r1
 370              	.LVL33:
 693:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 371              		.loc 1 693 8 view .LVU76
 372 0010 63F07F03 		orn	r3, r3, #127
 373 0014 8DF80730 		strb	r3, [sp, #7]
 694:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 374              		.loc 1 694 4 is_stmt 1 view .LVU77
 375 0018 0E4F     		ldr	r7, .L25
 376 001a 0022     		movs	r2, #0
 377              	.LVL34:
 694:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 378              		.loc 1 694 4 is_stmt 0 view .LVU78
 379 001c 0821     		movs	r1, #8
 380              	.LVL35:
 694:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 381              		.loc 1 694 4 view .LVU79
 382 001e 3846     		mov	r0, r7
 383              	.LVL36:
 694:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 384              		.loc 1 694 4 view .LVU80
 385 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL37:
 695:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 387              		.loc 1 695 4 is_stmt 1 view .LVU81
 388 0024 4FF47A73 		mov	r3, #1000
 389 0028 0122     		movs	r2, #1
 390 002a 0DF10701 		add	r1, sp, #7
 391 002e 2046     		mov	r0, r4
 392 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 393              	.LVL38:
 696:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 394              		.loc 1 696 4 view .LVU82
 395 0034 4FF47A73 		mov	r3, #1000
 396 0038 3246     		mov	r2, r6
 397 003a 2946     		mov	r1, r5
 398 003c 2046     		mov	r0, r4
 399 003e FFF7FEFF 		bl	HAL_SPI_Receive
 400              	.LVL39:
 697:Core/Src/main.c ****   return 0;
 401              		.loc 1 697 4 view .LVU83
 402 0042 0122     		movs	r2, #1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 24


 403 0044 0821     		movs	r1, #8
 404 0046 3846     		mov	r0, r7
 405 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL40:
 698:Core/Src/main.c **** }
 407              		.loc 1 698 3 view .LVU84
 699:Core/Src/main.c **** 
 408              		.loc 1 699 1 is_stmt 0 view .LVU85
 409 004c 0020     		movs	r0, #0
 410 004e 03B0     		add	sp, sp, #12
 411              		.cfi_def_cfa_offset 20
 412              		@ sp needed
 413 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 414              	.LVL41:
 415              	.L26:
 699:Core/Src/main.c **** 
 416              		.loc 1 699 1 view .LVU86
 417 0052 00BF     		.align	2
 418              	.L25:
 419 0054 00000240 		.word	1073872896
 420              		.cfi_endproc
 421              	.LFE143:
 423              		.section	.text.MX_GPIO_Init,"ax",%progbits
 424              		.align	1
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	MX_GPIO_Init:
 430              	.LFB140:
 590:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 431              		.loc 1 590 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 40
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 436              		.cfi_def_cfa_offset 24
 437              		.cfi_offset 4, -24
 438              		.cfi_offset 5, -20
 439              		.cfi_offset 6, -16
 440              		.cfi_offset 7, -12
 441              		.cfi_offset 8, -8
 442              		.cfi_offset 14, -4
 443 0004 8AB0     		sub	sp, sp, #40
 444              		.cfi_def_cfa_offset 64
 591:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 445              		.loc 1 591 3 view .LVU88
 591:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 446              		.loc 1 591 20 is_stmt 0 view .LVU89
 447 0006 0024     		movs	r4, #0
 448 0008 0594     		str	r4, [sp, #20]
 449 000a 0694     		str	r4, [sp, #24]
 450 000c 0794     		str	r4, [sp, #28]
 451 000e 0894     		str	r4, [sp, #32]
 452 0010 0994     		str	r4, [sp, #36]
 596:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 453              		.loc 1 596 3 is_stmt 1 view .LVU90
 454              	.LBB4:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 25


 596:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 455              		.loc 1 596 3 view .LVU91
 456 0012 0094     		str	r4, [sp]
 596:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 457              		.loc 1 596 3 view .LVU92
 458 0014 3D4B     		ldr	r3, .L29
 459 0016 1A6B     		ldr	r2, [r3, #48]
 460 0018 42F08002 		orr	r2, r2, #128
 461 001c 1A63     		str	r2, [r3, #48]
 596:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 462              		.loc 1 596 3 view .LVU93
 463 001e 1A6B     		ldr	r2, [r3, #48]
 464 0020 02F08002 		and	r2, r2, #128
 465 0024 0092     		str	r2, [sp]
 596:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 466              		.loc 1 596 3 view .LVU94
 467 0026 009A     		ldr	r2, [sp]
 468              	.LBE4:
 596:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 469              		.loc 1 596 3 view .LVU95
 597:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 470              		.loc 1 597 3 view .LVU96
 471              	.LBB5:
 597:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 472              		.loc 1 597 3 view .LVU97
 473 0028 0194     		str	r4, [sp, #4]
 597:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 474              		.loc 1 597 3 view .LVU98
 475 002a 1A6B     		ldr	r2, [r3, #48]
 476 002c 42F00402 		orr	r2, r2, #4
 477 0030 1A63     		str	r2, [r3, #48]
 597:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 478              		.loc 1 597 3 view .LVU99
 479 0032 1A6B     		ldr	r2, [r3, #48]
 480 0034 02F00402 		and	r2, r2, #4
 481 0038 0192     		str	r2, [sp, #4]
 597:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 482              		.loc 1 597 3 view .LVU100
 483 003a 019A     		ldr	r2, [sp, #4]
 484              	.LBE5:
 597:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 485              		.loc 1 597 3 view .LVU101
 598:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 486              		.loc 1 598 3 view .LVU102
 487              	.LBB6:
 598:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 488              		.loc 1 598 3 view .LVU103
 489 003c 0294     		str	r4, [sp, #8]
 598:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 490              		.loc 1 598 3 view .LVU104
 491 003e 1A6B     		ldr	r2, [r3, #48]
 492 0040 42F00102 		orr	r2, r2, #1
 493 0044 1A63     		str	r2, [r3, #48]
 598:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 494              		.loc 1 598 3 view .LVU105
 495 0046 1A6B     		ldr	r2, [r3, #48]
 496 0048 02F00102 		and	r2, r2, #1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 26


 497 004c 0292     		str	r2, [sp, #8]
 598:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 498              		.loc 1 598 3 view .LVU106
 499 004e 029A     		ldr	r2, [sp, #8]
 500              	.LBE6:
 598:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 501              		.loc 1 598 3 view .LVU107
 599:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 502              		.loc 1 599 3 view .LVU108
 503              	.LBB7:
 599:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 504              		.loc 1 599 3 view .LVU109
 505 0050 0394     		str	r4, [sp, #12]
 599:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 506              		.loc 1 599 3 view .LVU110
 507 0052 1A6B     		ldr	r2, [r3, #48]
 508 0054 42F00802 		orr	r2, r2, #8
 509 0058 1A63     		str	r2, [r3, #48]
 599:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 510              		.loc 1 599 3 view .LVU111
 511 005a 1A6B     		ldr	r2, [r3, #48]
 512 005c 02F00802 		and	r2, r2, #8
 513 0060 0392     		str	r2, [sp, #12]
 599:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 514              		.loc 1 599 3 view .LVU112
 515 0062 039A     		ldr	r2, [sp, #12]
 516              	.LBE7:
 599:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 517              		.loc 1 599 3 view .LVU113
 600:Core/Src/main.c **** 
 518              		.loc 1 600 3 view .LVU114
 519              	.LBB8:
 600:Core/Src/main.c **** 
 520              		.loc 1 600 3 view .LVU115
 521 0064 0494     		str	r4, [sp, #16]
 600:Core/Src/main.c **** 
 522              		.loc 1 600 3 view .LVU116
 523 0066 1A6B     		ldr	r2, [r3, #48]
 524 0068 42F00202 		orr	r2, r2, #2
 525 006c 1A63     		str	r2, [r3, #48]
 600:Core/Src/main.c **** 
 526              		.loc 1 600 3 view .LVU117
 527 006e 1B6B     		ldr	r3, [r3, #48]
 528 0070 03F00203 		and	r3, r3, #2
 529 0074 0493     		str	r3, [sp, #16]
 600:Core/Src/main.c **** 
 530              		.loc 1 600 3 view .LVU118
 531 0076 049B     		ldr	r3, [sp, #16]
 532              	.LBE8:
 600:Core/Src/main.c **** 
 533              		.loc 1 600 3 view .LVU119
 603:Core/Src/main.c **** 
 534              		.loc 1 603 3 view .LVU120
 535 0078 254D     		ldr	r5, .L29+4
 536 007a 2246     		mov	r2, r4
 537 007c 8721     		movs	r1, #135
 538 007e 2846     		mov	r0, r5
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 27


 539 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 540              	.LVL42:
 606:Core/Src/main.c **** 
 541              		.loc 1 606 3 view .LVU121
 542 0084 234E     		ldr	r6, .L29+8
 543 0086 2246     		mov	r2, r4
 544 0088 1C21     		movs	r1, #28
 545 008a 3046     		mov	r0, r6
 546 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 547              	.LVL43:
 609:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 548              		.loc 1 609 3 view .LVU122
 609:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 549              		.loc 1 609 23 is_stmt 0 view .LVU123
 550 0090 8723     		movs	r3, #135
 551 0092 0593     		str	r3, [sp, #20]
 610:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 552              		.loc 1 610 3 is_stmt 1 view .LVU124
 610:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 553              		.loc 1 610 24 is_stmt 0 view .LVU125
 554 0094 0127     		movs	r7, #1
 555 0096 0697     		str	r7, [sp, #24]
 611:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 556              		.loc 1 611 3 is_stmt 1 view .LVU126
 611:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 557              		.loc 1 611 24 is_stmt 0 view .LVU127
 558 0098 0794     		str	r4, [sp, #28]
 612:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 559              		.loc 1 612 3 is_stmt 1 view .LVU128
 612:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 560              		.loc 1 612 25 is_stmt 0 view .LVU129
 561 009a 0894     		str	r4, [sp, #32]
 613:Core/Src/main.c **** 
 562              		.loc 1 613 3 is_stmt 1 view .LVU130
 563 009c 05A9     		add	r1, sp, #20
 564 009e 2846     		mov	r0, r5
 565 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL44:
 616:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 567              		.loc 1 616 3 view .LVU131
 616:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 568              		.loc 1 616 23 is_stmt 0 view .LVU132
 569 00a4 4823     		movs	r3, #72
 570 00a6 0593     		str	r3, [sp, #20]
 617:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 571              		.loc 1 617 3 is_stmt 1 view .LVU133
 617:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 617 24 is_stmt 0 view .LVU134
 573 00a8 4FF00208 		mov	r8, #2
 574 00ac CDF81880 		str	r8, [sp, #24]
 618:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 575              		.loc 1 618 3 is_stmt 1 view .LVU135
 618:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 576              		.loc 1 618 24 is_stmt 0 view .LVU136
 577 00b0 0794     		str	r4, [sp, #28]
 619:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 578              		.loc 1 619 3 is_stmt 1 view .LVU137
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 28


 619:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 579              		.loc 1 619 25 is_stmt 0 view .LVU138
 580 00b2 0894     		str	r4, [sp, #32]
 620:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 581              		.loc 1 620 3 is_stmt 1 view .LVU139
 620:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 582              		.loc 1 620 29 is_stmt 0 view .LVU140
 583 00b4 0F23     		movs	r3, #15
 584 00b6 0993     		str	r3, [sp, #36]
 621:Core/Src/main.c **** 
 585              		.loc 1 621 3 is_stmt 1 view .LVU141
 586 00b8 05A9     		add	r1, sp, #20
 587 00ba 2846     		mov	r0, r5
 588 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 589              	.LVL45:
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 590              		.loc 1 624 3 view .LVU142
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 591              		.loc 1 624 23 is_stmt 0 view .LVU143
 592 00c0 CDF81480 		str	r8, [sp, #20]
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 593              		.loc 1 625 3 is_stmt 1 view .LVU144
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 594              		.loc 1 625 24 is_stmt 0 view .LVU145
 595 00c4 0694     		str	r4, [sp, #24]
 626:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 596              		.loc 1 626 3 is_stmt 1 view .LVU146
 626:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 597              		.loc 1 626 24 is_stmt 0 view .LVU147
 598 00c6 0794     		str	r4, [sp, #28]
 627:Core/Src/main.c **** 
 599              		.loc 1 627 3 is_stmt 1 view .LVU148
 600 00c8 05A9     		add	r1, sp, #20
 601 00ca 3046     		mov	r0, r6
 602 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 603              	.LVL46:
 630:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 604              		.loc 1 630 3 view .LVU149
 630:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 605              		.loc 1 630 23 is_stmt 0 view .LVU150
 606 00d0 1C23     		movs	r3, #28
 607 00d2 0593     		str	r3, [sp, #20]
 631:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 608              		.loc 1 631 3 is_stmt 1 view .LVU151
 631:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 609              		.loc 1 631 24 is_stmt 0 view .LVU152
 610 00d4 0697     		str	r7, [sp, #24]
 632:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 611              		.loc 1 632 3 is_stmt 1 view .LVU153
 632:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 612              		.loc 1 632 24 is_stmt 0 view .LVU154
 613 00d6 0794     		str	r4, [sp, #28]
 633:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 614              		.loc 1 633 3 is_stmt 1 view .LVU155
 633:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 615              		.loc 1 633 25 is_stmt 0 view .LVU156
 616 00d8 0894     		str	r4, [sp, #32]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 29


 634:Core/Src/main.c **** 
 617              		.loc 1 634 3 is_stmt 1 view .LVU157
 618 00da 05A9     		add	r1, sp, #20
 619 00dc 3046     		mov	r0, r6
 620 00de FFF7FEFF 		bl	HAL_GPIO_Init
 621              	.LVL47:
 637:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 622              		.loc 1 637 3 view .LVU158
 637:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 623              		.loc 1 637 23 is_stmt 0 view .LVU159
 624 00e2 1023     		movs	r3, #16
 625 00e4 0593     		str	r3, [sp, #20]
 638:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 626              		.loc 1 638 3 is_stmt 1 view .LVU160
 638:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 627              		.loc 1 638 24 is_stmt 0 view .LVU161
 628 00e6 0694     		str	r4, [sp, #24]
 639:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 629              		.loc 1 639 3 is_stmt 1 view .LVU162
 639:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 630              		.loc 1 639 24 is_stmt 0 view .LVU163
 631 00e8 0794     		str	r4, [sp, #28]
 640:Core/Src/main.c **** 
 632              		.loc 1 640 3 is_stmt 1 view .LVU164
 633 00ea 05A9     		add	r1, sp, #20
 634 00ec 2846     		mov	r0, r5
 635 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 636              	.LVL48:
 643:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 637              		.loc 1 643 3 view .LVU165
 643:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 638              		.loc 1 643 23 is_stmt 0 view .LVU166
 639 00f2 2023     		movs	r3, #32
 640 00f4 0593     		str	r3, [sp, #20]
 644:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 641              		.loc 1 644 3 is_stmt 1 view .LVU167
 644:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 642              		.loc 1 644 24 is_stmt 0 view .LVU168
 643 00f6 4FF48813 		mov	r3, #1114112
 644 00fa 0693     		str	r3, [sp, #24]
 645:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 645              		.loc 1 645 3 is_stmt 1 view .LVU169
 645:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 646              		.loc 1 645 24 is_stmt 0 view .LVU170
 647 00fc 0794     		str	r4, [sp, #28]
 646:Core/Src/main.c **** 
 648              		.loc 1 646 3 is_stmt 1 view .LVU171
 649 00fe 05A9     		add	r1, sp, #20
 650 0100 2846     		mov	r0, r5
 651 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 652              	.LVL49:
 650:Core/Src/main.c **** 
 653              		.loc 1 650 1 is_stmt 0 view .LVU172
 654 0106 0AB0     		add	sp, sp, #40
 655              		.cfi_def_cfa_offset 24
 656              		@ sp needed
 657 0108 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 30


 658              	.L30:
 659              		.align	2
 660              	.L29:
 661 010c 00380240 		.word	1073887232
 662 0110 00080240 		.word	1073874944
 663 0114 00000240 		.word	1073872896
 664              		.cfi_endproc
 665              	.LFE140:
 667              		.section	.text._write,"ax",%progbits
 668              		.align	1
 669              		.global	_write
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	_write:
 675              	.LVL50:
 676              	.LFB141:
 654:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 677              		.loc 1 654 40 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 654:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 681              		.loc 1 654 40 is_stmt 0 view .LVU174
 682 0000 10B5     		push	{r4, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 4, -8
 685              		.cfi_offset 14, -4
 686 0002 1446     		mov	r4, r2
 655:Core/Src/main.c **** 	return len;
 687              		.loc 1 655 2 is_stmt 1 view .LVU175
 688 0004 6FF07F43 		mvn	r3, #-16777216
 689 0008 92B2     		uxth	r2, r2
 690              	.LVL51:
 655:Core/Src/main.c **** 	return len;
 691              		.loc 1 655 2 is_stmt 0 view .LVU176
 692 000a 0248     		ldr	r0, .L33
 693              	.LVL52:
 655:Core/Src/main.c **** 	return len;
 694              		.loc 1 655 2 view .LVU177
 695 000c FFF7FEFF 		bl	HAL_UART_Transmit
 696              	.LVL53:
 656:Core/Src/main.c **** }
 697              		.loc 1 656 2 is_stmt 1 view .LVU178
 657:Core/Src/main.c **** 
 698              		.loc 1 657 1 is_stmt 0 view .LVU179
 699 0010 2046     		mov	r0, r4
 700 0012 10BD     		pop	{r4, pc}
 701              	.LVL54:
 702              	.L34:
 657:Core/Src/main.c **** 
 703              		.loc 1 657 1 view .LVU180
 704              		.align	2
 705              	.L33:
 706 0014 00000000 		.word	huart1
 707              		.cfi_endproc
 708              	.LFE141:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 31


 710              		.section	.rodata.bmp5_error_codes_print_result.str1.4,"aMS",%progbits,1
 711              		.align	2
 712              	.LC0:
 713 0000 25730900 		.ascii	"%s\011\000"
 714              		.align	2
 715              	.LC1:
 716 0004 4572726F 		.ascii	"Error [%d] : Null pointer\015\012\000"
 716      72205B25 
 716      645D203A 
 716      204E756C 
 716      6C20706F 
 717              		.align	2
 718              	.LC2:
 719 0020 4572726F 		.ascii	"Error [%d] : Communication failure\015\012\000"
 719      72205B25 
 719      645D203A 
 719      20436F6D 
 719      6D756E69 
 720 0045 000000   		.align	2
 721              	.LC3:
 722 0048 4572726F 		.ascii	"Error [%d] : Device not found\015\012\000"
 722      72205B25 
 722      645D203A 
 722      20446576 
 722      69636520 
 723              		.align	2
 724              	.LC4:
 725 0068 4572726F 		.ascii	"Error [%d] : Invalid chip id\015\012\000"
 725      72205B25 
 725      645D203A 
 725      20496E76 
 725      616C6964 
 726 0087 00       		.align	2
 727              	.LC5:
 728 0088 4572726F 		.ascii	"Error [%d] : Power up error\015\012\000"
 728      72205B25 
 728      645D203A 
 728      20506F77 
 728      65722075 
 729 00a6 0000     		.align	2
 730              	.LC6:
 731 00a8 4572726F 		.ascii	"Error [%d] : Power-on reset/softreset failure\015\012"
 731      72205B25 
 731      645D203A 
 731      20506F77 
 731      65722D6F 
 732 00d7 00       		.ascii	"\000"
 733              		.align	2
 734              	.LC7:
 735 00d8 4572726F 		.ascii	"Error [%d] : Invalid powermode\015\012\000"
 735      72205B25 
 735      645D203A 
 735      20496E76 
 735      616C6964 
 736 00f9 000000   		.align	2
 737              	.LC8:
 738 00fc 4572726F 		.ascii	"Error [%d] : Unknown error code\015\012\000"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 32


 738      72205B25 
 738      645D203A 
 738      20556E6B 
 738      6E6F776E 
 739              		.section	.text.bmp5_error_codes_print_result,"ax",%progbits
 740              		.align	1
 741              		.global	bmp5_error_codes_print_result
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 746              	bmp5_error_codes_print_result:
 747              	.LVL55:
 748              	.LFB147:
 730:Core/Src/main.c ****     if (rslt != BMP5_OK)
 749              		.loc 1 730 1 is_stmt 1 view -0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 731:Core/Src/main.c ****     {
 753              		.loc 1 731 5 view .LVU182
 731:Core/Src/main.c ****     {
 754              		.loc 1 731 8 is_stmt 0 view .LVU183
 755 0000 01B9     		cbnz	r1, .L50
 756 0002 7047     		bx	lr
 757              	.L50:
 730:Core/Src/main.c ****     if (rslt != BMP5_OK)
 758              		.loc 1 730 1 view .LVU184
 759 0004 10B5     		push	{r4, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 4, -8
 762              		.cfi_offset 14, -4
 763 0006 0C46     		mov	r4, r1
 764              	.LBB9:
 733:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 765              		.loc 1 733 9 is_stmt 1 view .LVU185
 766 0008 0146     		mov	r1, r0
 767              	.LVL56:
 733:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 768              		.loc 1 733 9 is_stmt 0 view .LVU186
 769 000a 1A48     		ldr	r0, .L51
 770              	.LVL57:
 733:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 771              		.loc 1 733 9 view .LVU187
 772 000c FFF7FEFF 		bl	printf
 773              	.LVL58:
 734:Core/Src/main.c ****         {
 774              		.loc 1 734 9 is_stmt 1 view .LVU188
 775 0010 E31D     		adds	r3, r4, #7
 776 0012 062B     		cmp	r3, #6
 777 0014 28D8     		bhi	.L37
 778 0016 DFE803F0 		tbb	[pc, r3]
 779              	.L39:
 780 001a 22       		.byte	(.L45-.L39)/2
 781 001b 1D       		.byte	(.L44-.L39)/2
 782 001c 18       		.byte	(.L43-.L39)/2
 783 001d 13       		.byte	(.L42-.L39)/2
 784 001e 0E       		.byte	(.L41-.L39)/2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 33


 785 001f 09       		.byte	(.L40-.L39)/2
 786 0020 04       		.byte	(.L38-.L39)/2
 787 0021 00       		.p2align 1
 788              	.L38:
 736:Core/Src/main.c ****         }
 789              		.loc 1 736 13 view .LVU189
 790 0022 2146     		mov	r1, r4
 791 0024 1448     		ldr	r0, .L51+4
 792 0026 FFF7FEFF 		bl	printf
 793              	.LVL59:
 794              	.L35:
 795              	.LBE9:
 768:Core/Src/main.c **** static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_dev 
 796              		.loc 1 768 1 is_stmt 0 view .LVU190
 797 002a 10BD     		pop	{r4, pc}
 798              	.L40:
 799              	.LBB10:
 740:Core/Src/main.c ****         }
 800              		.loc 1 740 13 is_stmt 1 view .LVU191
 801 002c 2146     		mov	r1, r4
 802 002e 1348     		ldr	r0, .L51+8
 803 0030 FFF7FEFF 		bl	printf
 804              	.LVL60:
 805 0034 F9E7     		b	.L35
 806              	.L41:
 744:Core/Src/main.c ****         }
 807              		.loc 1 744 13 view .LVU192
 808 0036 2146     		mov	r1, r4
 809 0038 1148     		ldr	r0, .L51+12
 810 003a FFF7FEFF 		bl	printf
 811              	.LVL61:
 812 003e F4E7     		b	.L35
 813              	.L42:
 748:Core/Src/main.c ****         }
 814              		.loc 1 748 13 view .LVU193
 815 0040 2146     		mov	r1, r4
 816 0042 1048     		ldr	r0, .L51+16
 817 0044 FFF7FEFF 		bl	printf
 818              	.LVL62:
 819 0048 EFE7     		b	.L35
 820              	.L43:
 752:Core/Src/main.c ****         }
 821              		.loc 1 752 13 view .LVU194
 822 004a 2146     		mov	r1, r4
 823 004c 0E48     		ldr	r0, .L51+20
 824 004e FFF7FEFF 		bl	printf
 825              	.LVL63:
 826 0052 EAE7     		b	.L35
 827              	.L44:
 756:Core/Src/main.c ****         }
 828              		.loc 1 756 13 view .LVU195
 829 0054 2146     		mov	r1, r4
 830 0056 0D48     		ldr	r0, .L51+24
 831 0058 FFF7FEFF 		bl	printf
 832              	.LVL64:
 833 005c E5E7     		b	.L35
 834              	.L45:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 34


 760:Core/Src/main.c ****         }
 835              		.loc 1 760 13 view .LVU196
 836 005e 2146     		mov	r1, r4
 837 0060 0B48     		ldr	r0, .L51+28
 838 0062 FFF7FEFF 		bl	printf
 839              	.LVL65:
 840 0066 E0E7     		b	.L35
 841              	.L37:
 765:Core/Src/main.c ****         }
 842              		.loc 1 765 13 view .LVU197
 843 0068 2146     		mov	r1, r4
 844 006a 0A48     		ldr	r0, .L51+32
 845 006c FFF7FEFF 		bl	printf
 846              	.LVL66:
 847              	.LBE10:
 768:Core/Src/main.c **** static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_dev 
 848              		.loc 1 768 1 is_stmt 0 view .LVU198
 849 0070 DBE7     		b	.L35
 850              	.L52:
 851 0072 00BF     		.align	2
 852              	.L51:
 853 0074 00000000 		.word	.LC0
 854 0078 04000000 		.word	.LC1
 855 007c 20000000 		.word	.LC2
 856 0080 48000000 		.word	.LC3
 857 0084 68000000 		.word	.LC4
 858 0088 88000000 		.word	.LC5
 859 008c A8000000 		.word	.LC6
 860 0090 D8000000 		.word	.LC7
 861 0094 FC000000 		.word	.LC8
 862              		.cfi_endproc
 863              	.LFE147:
 865              		.section	.text.Error_Handler,"ax",%progbits
 866              		.align	1
 867              		.global	Error_Handler
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 872              	Error_Handler:
 873              	.LFB151:
 885:Core/Src/main.c **** 
 886:Core/Src/main.c **** 
 887:Core/Src/main.c **** /* USER CODE END 4 */
 888:Core/Src/main.c **** 
 889:Core/Src/main.c **** /**
 890:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 891:Core/Src/main.c ****   * @retval None
 892:Core/Src/main.c ****   */
 893:Core/Src/main.c **** void Error_Handler(void)
 894:Core/Src/main.c **** {
 874              		.loc 1 894 1 is_stmt 1 view -0
 875              		.cfi_startproc
 876              		@ Volatile: function does not return.
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 895:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 35


 896:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 897:Core/Src/main.c ****   __disable_irq();
 880              		.loc 1 897 3 view .LVU200
 881              	.LBB11:
 882              	.LBI11:
 883              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 36


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 37


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 38


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 39


 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 40


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 41


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 42


 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 43


 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 44


 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 45


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 46


 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 47


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 48


 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 49


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 50


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 51


 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 884              		.loc 2 960 27 view .LVU201
 885              	.LBB12:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 52


 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 886              		.loc 2 962 3 view .LVU202
 887              		.syntax unified
 888              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 889 0000 72B6     		cpsid i
 890              	@ 0 "" 2
 891              		.thumb
 892              		.syntax unified
 893              	.L54:
 894              	.LBE12:
 895              	.LBE11:
 898:Core/Src/main.c ****   while (1)
 896              		.loc 1 898 3 view .LVU203
 899:Core/Src/main.c ****   {
 900:Core/Src/main.c ****   }
 897              		.loc 1 900 3 view .LVU204
 898:Core/Src/main.c ****   while (1)
 898              		.loc 1 898 9 view .LVU205
 899 0002 FEE7     		b	.L54
 900              		.cfi_endproc
 901              	.LFE151:
 903              		.section	.text.MX_SPI1_Init,"ax",%progbits
 904              		.align	1
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 909              	MX_SPI1_Init:
 910              	.LFB138:
 519:Core/Src/main.c **** 
 911              		.loc 1 519 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915 0000 08B5     		push	{r3, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 3, -8
 918              		.cfi_offset 14, -4
 529:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 919              		.loc 1 529 3 view .LVU207
 529:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 920              		.loc 1 529 18 is_stmt 0 view .LVU208
 921 0002 0D48     		ldr	r0, .L59
 922 0004 0D4B     		ldr	r3, .L59+4
 923 0006 0360     		str	r3, [r0]
 530:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 924              		.loc 1 530 3 is_stmt 1 view .LVU209
 530:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 925              		.loc 1 530 19 is_stmt 0 view .LVU210
 926 0008 4FF48273 		mov	r3, #260
 927 000c 4360     		str	r3, [r0, #4]
 531:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 928              		.loc 1 531 3 is_stmt 1 view .LVU211
 531:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 929              		.loc 1 531 24 is_stmt 0 view .LVU212
 930 000e 0023     		movs	r3, #0
 931 0010 8360     		str	r3, [r0, #8]
 532:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 53


 932              		.loc 1 532 3 is_stmt 1 view .LVU213
 532:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 933              		.loc 1 532 23 is_stmt 0 view .LVU214
 934 0012 C360     		str	r3, [r0, #12]
 533:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 935              		.loc 1 533 3 is_stmt 1 view .LVU215
 533:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 936              		.loc 1 533 26 is_stmt 0 view .LVU216
 937 0014 0361     		str	r3, [r0, #16]
 534:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 938              		.loc 1 534 3 is_stmt 1 view .LVU217
 534:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 939              		.loc 1 534 23 is_stmt 0 view .LVU218
 940 0016 4361     		str	r3, [r0, #20]
 535:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 941              		.loc 1 535 3 is_stmt 1 view .LVU219
 535:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 942              		.loc 1 535 18 is_stmt 0 view .LVU220
 943 0018 4FF48022 		mov	r2, #262144
 944 001c 8261     		str	r2, [r0, #24]
 536:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 945              		.loc 1 536 3 is_stmt 1 view .LVU221
 536:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 946              		.loc 1 536 32 is_stmt 0 view .LVU222
 947 001e C361     		str	r3, [r0, #28]
 537:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 948              		.loc 1 537 3 is_stmt 1 view .LVU223
 537:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 949              		.loc 1 537 23 is_stmt 0 view .LVU224
 950 0020 0362     		str	r3, [r0, #32]
 538:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 951              		.loc 1 538 3 is_stmt 1 view .LVU225
 538:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 952              		.loc 1 538 21 is_stmt 0 view .LVU226
 953 0022 4362     		str	r3, [r0, #36]
 539:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 954              		.loc 1 539 3 is_stmt 1 view .LVU227
 539:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 955              		.loc 1 539 29 is_stmt 0 view .LVU228
 956 0024 8362     		str	r3, [r0, #40]
 540:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 957              		.loc 1 540 3 is_stmt 1 view .LVU229
 540:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 958              		.loc 1 540 28 is_stmt 0 view .LVU230
 959 0026 0A23     		movs	r3, #10
 960 0028 C362     		str	r3, [r0, #44]
 541:Core/Src/main.c ****   {
 961              		.loc 1 541 3 is_stmt 1 view .LVU231
 541:Core/Src/main.c ****   {
 962              		.loc 1 541 7 is_stmt 0 view .LVU232
 963 002a FFF7FEFF 		bl	HAL_SPI_Init
 964              	.LVL67:
 541:Core/Src/main.c ****   {
 965              		.loc 1 541 6 discriminator 1 view .LVU233
 966 002e 00B9     		cbnz	r0, .L58
 549:Core/Src/main.c **** 
 967              		.loc 1 549 1 view .LVU234
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 54


 968 0030 08BD     		pop	{r3, pc}
 969              	.L58:
 543:Core/Src/main.c ****   }
 970              		.loc 1 543 5 is_stmt 1 view .LVU235
 971 0032 FFF7FEFF 		bl	Error_Handler
 972              	.LVL68:
 973              	.L60:
 974 0036 00BF     		.align	2
 975              	.L59:
 976 0038 00000000 		.word	hspi1
 977 003c 00300140 		.word	1073819648
 978              		.cfi_endproc
 979              	.LFE138:
 981              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 982              		.align	1
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 987              	MX_USART1_UART_Init:
 988              	.LFB139:
 557:Core/Src/main.c **** 
 989              		.loc 1 557 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993 0000 08B5     		push	{r3, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 3, -8
 996              		.cfi_offset 14, -4
 566:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 997              		.loc 1 566 3 view .LVU237
 566:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 998              		.loc 1 566 19 is_stmt 0 view .LVU238
 999 0002 0A48     		ldr	r0, .L65
 1000 0004 0A4B     		ldr	r3, .L65+4
 1001 0006 0360     		str	r3, [r0]
 567:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1002              		.loc 1 567 3 is_stmt 1 view .LVU239
 567:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1003              		.loc 1 567 24 is_stmt 0 view .LVU240
 1004 0008 4FF4E133 		mov	r3, #115200
 1005 000c 4360     		str	r3, [r0, #4]
 568:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1006              		.loc 1 568 3 is_stmt 1 view .LVU241
 568:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1007              		.loc 1 568 26 is_stmt 0 view .LVU242
 1008 000e 0023     		movs	r3, #0
 1009 0010 8360     		str	r3, [r0, #8]
 569:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1010              		.loc 1 569 3 is_stmt 1 view .LVU243
 569:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1011              		.loc 1 569 24 is_stmt 0 view .LVU244
 1012 0012 C360     		str	r3, [r0, #12]
 570:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1013              		.loc 1 570 3 is_stmt 1 view .LVU245
 570:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1014              		.loc 1 570 22 is_stmt 0 view .LVU246
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 55


 1015 0014 0361     		str	r3, [r0, #16]
 571:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1016              		.loc 1 571 3 is_stmt 1 view .LVU247
 571:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1017              		.loc 1 571 20 is_stmt 0 view .LVU248
 1018 0016 0C22     		movs	r2, #12
 1019 0018 4261     		str	r2, [r0, #20]
 572:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1020              		.loc 1 572 3 is_stmt 1 view .LVU249
 572:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1021              		.loc 1 572 25 is_stmt 0 view .LVU250
 1022 001a 8361     		str	r3, [r0, #24]
 573:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1023              		.loc 1 573 3 is_stmt 1 view .LVU251
 573:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1024              		.loc 1 573 28 is_stmt 0 view .LVU252
 1025 001c C361     		str	r3, [r0, #28]
 574:Core/Src/main.c ****   {
 1026              		.loc 1 574 3 is_stmt 1 view .LVU253
 574:Core/Src/main.c ****   {
 1027              		.loc 1 574 7 is_stmt 0 view .LVU254
 1028 001e FFF7FEFF 		bl	HAL_UART_Init
 1029              	.LVL69:
 574:Core/Src/main.c ****   {
 1030              		.loc 1 574 6 discriminator 1 view .LVU255
 1031 0022 00B9     		cbnz	r0, .L64
 582:Core/Src/main.c **** 
 1032              		.loc 1 582 1 view .LVU256
 1033 0024 08BD     		pop	{r3, pc}
 1034              	.L64:
 576:Core/Src/main.c ****   }
 1035              		.loc 1 576 5 is_stmt 1 view .LVU257
 1036 0026 FFF7FEFF 		bl	Error_Handler
 1037              	.LVL70:
 1038              	.L66:
 1039 002a 00BF     		.align	2
 1040              	.L65:
 1041 002c 00000000 		.word	huart1
 1042 0030 00100140 		.word	1073811456
 1043              		.cfi_endproc
 1044              	.LFE139:
 1046              		.section	.rodata.MX_I2C1_Init.str1.4,"aMS",%progbits,1
 1047              		.align	2
 1048              	.LC9:
 1049 0000 54656D70 		.ascii	"Temperature not ready\015\012\000"
 1049      65726174 
 1049      75726520 
 1049      6E6F7420 
 1049      72656164 
 1050              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1051              		.align	1
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1056              	MX_I2C1_Init:
 1057              	.LFB136:
 453:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 56


 1058              		.loc 1 453 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062 0000 00B5     		push	{lr}
 1063              		.cfi_def_cfa_offset 4
 1064              		.cfi_offset 14, -4
 1065 0002 85B0     		sub	sp, sp, #20
 1066              		.cfi_def_cfa_offset 24
 462:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1067              		.loc 1 462 3 view .LVU259
 462:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1068              		.loc 1 462 18 is_stmt 0 view .LVU260
 1069 0004 1948     		ldr	r0, .L73
 1070 0006 1A4B     		ldr	r3, .L73+4
 1071 0008 0360     		str	r3, [r0]
 463:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1072              		.loc 1 463 3 is_stmt 1 view .LVU261
 463:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1073              		.loc 1 463 25 is_stmt 0 view .LVU262
 1074 000a 1A4B     		ldr	r3, .L73+8
 1075 000c 4360     		str	r3, [r0, #4]
 464:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 1076              		.loc 1 464 3 is_stmt 1 view .LVU263
 464:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 1077              		.loc 1 464 24 is_stmt 0 view .LVU264
 1078 000e 0023     		movs	r3, #0
 1079 0010 8360     		str	r3, [r0, #8]
 465:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1080              		.loc 1 465 3 is_stmt 1 view .LVU265
 465:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1081              		.loc 1 465 26 is_stmt 0 view .LVU266
 1082 0012 8222     		movs	r2, #130
 1083 0014 C260     		str	r2, [r0, #12]
 466:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1084              		.loc 1 466 3 is_stmt 1 view .LVU267
 466:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1085              		.loc 1 466 29 is_stmt 0 view .LVU268
 1086 0016 4FF48042 		mov	r2, #16384
 1087 001a 0261     		str	r2, [r0, #16]
 467:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1088              		.loc 1 467 3 is_stmt 1 view .LVU269
 467:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1089              		.loc 1 467 30 is_stmt 0 view .LVU270
 1090 001c 4361     		str	r3, [r0, #20]
 468:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1091              		.loc 1 468 3 is_stmt 1 view .LVU271
 468:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1092              		.loc 1 468 26 is_stmt 0 view .LVU272
 1093 001e 8361     		str	r3, [r0, #24]
 469:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1094              		.loc 1 469 3 is_stmt 1 view .LVU273
 469:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1095              		.loc 1 469 30 is_stmt 0 view .LVU274
 1096 0020 C361     		str	r3, [r0, #28]
 470:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1097              		.loc 1 470 3 is_stmt 1 view .LVU275
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 57


 470:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1098              		.loc 1 470 28 is_stmt 0 view .LVU276
 1099 0022 0362     		str	r3, [r0, #32]
 471:Core/Src/main.c ****   {
 1100              		.loc 1 471 3 is_stmt 1 view .LVU277
 471:Core/Src/main.c ****   {
 1101              		.loc 1 471 7 is_stmt 0 view .LVU278
 1102 0024 FFF7FEFF 		bl	HAL_I2C_Init
 1103              	.LVL71:
 471:Core/Src/main.c ****   {
 1104              		.loc 1 471 6 discriminator 1 view .LVU279
 1105 0028 88B9     		cbnz	r0, .L72
 476:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 1106              		.loc 1 476 5 is_stmt 1 view .LVU280
 476:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 1107              		.loc 1 476 9 is_stmt 0 view .LVU281
 1108 002a 4FF47A73 		mov	r3, #1000
 1109 002e 0222     		movs	r2, #2
 1110 0030 8221     		movs	r1, #130
 1111 0032 0E48     		ldr	r0, .L73
 1112 0034 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 1113              	.LVL72:
 476:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 1114              		.loc 1 476 8 discriminator 1 view .LVU282
 1115 0038 58B1     		cbz	r0, .L69
 477:Core/Src/main.c ****     } else {
 1116              		.loc 1 477 7 is_stmt 1 view .LVU283
 1117 003a 4FF47A73 		mov	r3, #1000
 1118 003e 2022     		movs	r2, #32
 1119 0040 0D49     		ldr	r1, .L73+12
 1120 0042 0E48     		ldr	r0, .L73+16
 1121 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 1122              	.LVL73:
 1123              	.L67:
 483:Core/Src/main.c **** 
 1124              		.loc 1 483 1 is_stmt 0 view .LVU284
 1125 0048 05B0     		add	sp, sp, #20
 1126              		.cfi_remember_state
 1127              		.cfi_def_cfa_offset 4
 1128              		@ sp needed
 1129 004a 5DF804FB 		ldr	pc, [sp], #4
 1130              	.L72:
 1131              		.cfi_restore_state
 473:Core/Src/main.c ****   }
 1132              		.loc 1 473 5 is_stmt 1 view .LVU285
 1133 004e FFF7FEFF 		bl	Error_Handler
 1134              	.LVL74:
 1135              	.L69:
 479:Core/Src/main.c ****     }
 1136              		.loc 1 479 7 view .LVU286
 1137 0052 4FF47A73 		mov	r3, #1000
 1138 0056 0293     		str	r3, [sp, #8]
 1139 0058 0123     		movs	r3, #1
 1140 005a 0193     		str	r3, [sp, #4]
 1141 005c 0022     		movs	r2, #0
 1142 005e 0092     		str	r2, [sp]
 1143 0060 0422     		movs	r2, #4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 58


 1144 0062 8221     		movs	r1, #130
 1145 0064 0148     		ldr	r0, .L73
 1146 0066 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1147              	.LVL75:
 483:Core/Src/main.c **** 
 1148              		.loc 1 483 1 is_stmt 0 view .LVU287
 1149 006a EDE7     		b	.L67
 1150              	.L74:
 1151              		.align	2
 1152              	.L73:
 1153 006c 00000000 		.word	hi2c1
 1154 0070 00540040 		.word	1073763328
 1155 0074 A0860100 		.word	100000
 1156 0078 00000000 		.word	.LC9
 1157 007c 00000000 		.word	huart1
 1158              		.cfi_endproc
 1159              	.LFE136:
 1161              		.section	.text.SystemClock_Config,"ax",%progbits
 1162              		.align	1
 1163              		.global	SystemClock_Config
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1168              	SystemClock_Config:
 1169              	.LFB135:
 406:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1170              		.loc 1 406 1 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 80
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174 0000 00B5     		push	{lr}
 1175              		.cfi_def_cfa_offset 4
 1176              		.cfi_offset 14, -4
 1177 0002 95B0     		sub	sp, sp, #84
 1178              		.cfi_def_cfa_offset 88
 407:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1179              		.loc 1 407 3 view .LVU289
 407:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1180              		.loc 1 407 22 is_stmt 0 view .LVU290
 1181 0004 3022     		movs	r2, #48
 1182 0006 0021     		movs	r1, #0
 1183 0008 08A8     		add	r0, sp, #32
 1184 000a FFF7FEFF 		bl	memset
 1185              	.LVL76:
 408:Core/Src/main.c **** 
 1186              		.loc 1 408 3 is_stmt 1 view .LVU291
 408:Core/Src/main.c **** 
 1187              		.loc 1 408 22 is_stmt 0 view .LVU292
 1188 000e 0023     		movs	r3, #0
 1189 0010 0393     		str	r3, [sp, #12]
 1190 0012 0493     		str	r3, [sp, #16]
 1191 0014 0593     		str	r3, [sp, #20]
 1192 0016 0693     		str	r3, [sp, #24]
 1193 0018 0793     		str	r3, [sp, #28]
 412:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1194              		.loc 1 412 3 is_stmt 1 view .LVU293
 1195              	.LBB13:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 59


 412:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1196              		.loc 1 412 3 view .LVU294
 1197 001a 0193     		str	r3, [sp, #4]
 412:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1198              		.loc 1 412 3 view .LVU295
 1199 001c 1C4A     		ldr	r2, .L81
 1200 001e 116C     		ldr	r1, [r2, #64]
 1201 0020 41F08051 		orr	r1, r1, #268435456
 1202 0024 1164     		str	r1, [r2, #64]
 412:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1203              		.loc 1 412 3 view .LVU296
 1204 0026 126C     		ldr	r2, [r2, #64]
 1205 0028 02F08052 		and	r2, r2, #268435456
 1206 002c 0192     		str	r2, [sp, #4]
 412:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1207              		.loc 1 412 3 view .LVU297
 1208 002e 019A     		ldr	r2, [sp, #4]
 1209              	.LBE13:
 412:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1210              		.loc 1 412 3 view .LVU298
 413:Core/Src/main.c **** 
 1211              		.loc 1 413 3 view .LVU299
 1212              	.LBB14:
 413:Core/Src/main.c **** 
 1213              		.loc 1 413 3 view .LVU300
 1214 0030 0293     		str	r3, [sp, #8]
 413:Core/Src/main.c **** 
 1215              		.loc 1 413 3 view .LVU301
 1216 0032 184A     		ldr	r2, .L81+4
 1217 0034 1168     		ldr	r1, [r2]
 1218 0036 41F48041 		orr	r1, r1, #16384
 1219 003a 1160     		str	r1, [r2]
 413:Core/Src/main.c **** 
 1220              		.loc 1 413 3 view .LVU302
 1221 003c 1268     		ldr	r2, [r2]
 1222 003e 02F48042 		and	r2, r2, #16384
 1223 0042 0292     		str	r2, [sp, #8]
 413:Core/Src/main.c **** 
 1224              		.loc 1 413 3 view .LVU303
 1225 0044 029A     		ldr	r2, [sp, #8]
 1226              	.LBE14:
 413:Core/Src/main.c **** 
 1227              		.loc 1 413 3 view .LVU304
 418:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1228              		.loc 1 418 3 view .LVU305
 418:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1229              		.loc 1 418 36 is_stmt 0 view .LVU306
 1230 0046 0222     		movs	r2, #2
 1231 0048 0892     		str	r2, [sp, #32]
 419:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1232              		.loc 1 419 3 is_stmt 1 view .LVU307
 419:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1233              		.loc 1 419 30 is_stmt 0 view .LVU308
 1234 004a 0121     		movs	r1, #1
 1235 004c 0B91     		str	r1, [sp, #44]
 420:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1236              		.loc 1 420 3 is_stmt 1 view .LVU309
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 60


 420:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1237              		.loc 1 420 41 is_stmt 0 view .LVU310
 1238 004e 1021     		movs	r1, #16
 1239 0050 0C91     		str	r1, [sp, #48]
 421:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1240              		.loc 1 421 3 is_stmt 1 view .LVU311
 421:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1241              		.loc 1 421 34 is_stmt 0 view .LVU312
 1242 0052 0E92     		str	r2, [sp, #56]
 422:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1243              		.loc 1 422 3 is_stmt 1 view .LVU313
 422:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1244              		.loc 1 422 35 is_stmt 0 view .LVU314
 1245 0054 0F93     		str	r3, [sp, #60]
 423:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1246              		.loc 1 423 3 is_stmt 1 view .LVU315
 423:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1247              		.loc 1 423 30 is_stmt 0 view .LVU316
 1248 0056 1091     		str	r1, [sp, #64]
 424:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1249              		.loc 1 424 3 is_stmt 1 view .LVU317
 424:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1250              		.loc 1 424 30 is_stmt 0 view .LVU318
 1251 0058 C023     		movs	r3, #192
 1252 005a 1193     		str	r3, [sp, #68]
 425:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1253              		.loc 1 425 3 is_stmt 1 view .LVU319
 425:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1254              		.loc 1 425 30 is_stmt 0 view .LVU320
 1255 005c 1292     		str	r2, [sp, #72]
 426:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1256              		.loc 1 426 3 is_stmt 1 view .LVU321
 426:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1257              		.loc 1 426 30 is_stmt 0 view .LVU322
 1258 005e 0423     		movs	r3, #4
 1259 0060 1393     		str	r3, [sp, #76]
 427:Core/Src/main.c ****   {
 1260              		.loc 1 427 3 is_stmt 1 view .LVU323
 427:Core/Src/main.c ****   {
 1261              		.loc 1 427 7 is_stmt 0 view .LVU324
 1262 0062 08A8     		add	r0, sp, #32
 1263 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1264              	.LVL77:
 427:Core/Src/main.c ****   {
 1265              		.loc 1 427 6 discriminator 1 view .LVU325
 1266 0068 68B9     		cbnz	r0, .L79
 434:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1267              		.loc 1 434 3 is_stmt 1 view .LVU326
 434:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1268              		.loc 1 434 31 is_stmt 0 view .LVU327
 1269 006a 0F23     		movs	r3, #15
 1270 006c 0393     		str	r3, [sp, #12]
 436:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1271              		.loc 1 436 3 is_stmt 1 view .LVU328
 436:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1272              		.loc 1 436 34 is_stmt 0 view .LVU329
 1273 006e 0021     		movs	r1, #0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 61


 1274 0070 0491     		str	r1, [sp, #16]
 437:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1275              		.loc 1 437 3 is_stmt 1 view .LVU330
 437:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1276              		.loc 1 437 35 is_stmt 0 view .LVU331
 1277 0072 0591     		str	r1, [sp, #20]
 438:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1278              		.loc 1 438 3 is_stmt 1 view .LVU332
 438:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1279              		.loc 1 438 36 is_stmt 0 view .LVU333
 1280 0074 0691     		str	r1, [sp, #24]
 439:Core/Src/main.c **** 
 1281              		.loc 1 439 3 is_stmt 1 view .LVU334
 439:Core/Src/main.c **** 
 1282              		.loc 1 439 36 is_stmt 0 view .LVU335
 1283 0076 0791     		str	r1, [sp, #28]
 441:Core/Src/main.c ****   {
 1284              		.loc 1 441 3 is_stmt 1 view .LVU336
 441:Core/Src/main.c ****   {
 1285              		.loc 1 441 7 is_stmt 0 view .LVU337
 1286 0078 03A8     		add	r0, sp, #12
 1287 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1288              	.LVL78:
 441:Core/Src/main.c ****   {
 1289              		.loc 1 441 6 discriminator 1 view .LVU338
 1290 007e 20B9     		cbnz	r0, .L80
 445:Core/Src/main.c **** 
 1291              		.loc 1 445 1 view .LVU339
 1292 0080 15B0     		add	sp, sp, #84
 1293              		.cfi_remember_state
 1294              		.cfi_def_cfa_offset 4
 1295              		@ sp needed
 1296 0082 5DF804FB 		ldr	pc, [sp], #4
 1297              	.L79:
 1298              		.cfi_restore_state
 429:Core/Src/main.c ****   }
 1299              		.loc 1 429 5 is_stmt 1 view .LVU340
 1300 0086 FFF7FEFF 		bl	Error_Handler
 1301              	.LVL79:
 1302              	.L80:
 443:Core/Src/main.c ****   }
 1303              		.loc 1 443 5 view .LVU341
 1304 008a FFF7FEFF 		bl	Error_Handler
 1305              	.LVL80:
 1306              	.L82:
 1307 008e 00BF     		.align	2
 1308              	.L81:
 1309 0090 00380240 		.word	1073887232
 1310 0094 00700040 		.word	1073770496
 1311              		.cfi_endproc
 1312              	.LFE135:
 1314              		.global	__aeabi_f2d
 1315              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1316              		.align	2
 1317              	.LC10:
 1318 0000 25342E32 		.ascii	"%4.2f,%4.2f,%4.2f,\000"
 1318      662C2534 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 62


 1318      2E32662C 
 1318      25342E32 
 1318      662C00
 1319 0013 00       		.align	2
 1320              	.LC11:
 1321 0014 252E3266 		.ascii	"%.2f,101.325\015\012\000"
 1321      2C313031 
 1321      2E333235 
 1321      0D0A00
 1322              		.section	.text.main,"ax",%progbits
 1323              		.align	1
 1324              		.global	main
 1325              		.syntax unified
 1326              		.thumb
 1327              		.thumb_func
 1329              	main:
 1330              	.LFB134:
 103:Core/Src/main.c **** 
 1331              		.loc 1 103 1 view -0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 56
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 70B5     		push	{r4, r5, r6, lr}
 1336              		.cfi_def_cfa_offset 16
 1337              		.cfi_offset 4, -16
 1338              		.cfi_offset 5, -12
 1339              		.cfi_offset 6, -8
 1340              		.cfi_offset 14, -4
 1341 0002 2DED088B 		vpush.64	{d8, d9, d10, d11}
 1342              		.cfi_def_cfa_offset 48
 1343              		.cfi_offset 80, -48
 1344              		.cfi_offset 81, -44
 1345              		.cfi_offset 82, -40
 1346              		.cfi_offset 83, -36
 1347              		.cfi_offset 84, -32
 1348              		.cfi_offset 85, -28
 1349              		.cfi_offset 86, -24
 1350              		.cfi_offset 87, -20
 1351 0006 92B0     		sub	sp, sp, #72
 1352              		.cfi_def_cfa_offset 120
 112:Core/Src/main.c **** 
 1353              		.loc 1 112 3 view .LVU343
 1354 0008 FFF7FEFF 		bl	HAL_Init
 1355              	.LVL81:
 119:Core/Src/main.c **** 
 1356              		.loc 1 119 3 view .LVU344
 1357 000c FFF7FEFF 		bl	SystemClock_Config
 1358              	.LVL82:
 126:Core/Src/main.c ****   MX_SDIO_SD_Init();
 1359              		.loc 1 126 3 view .LVU345
 1360 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1361              	.LVL83:
 127:Core/Src/main.c ****   MX_SPI1_Init();
 1362              		.loc 1 127 3 view .LVU346
 1363 0014 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1364              	.LVL84:
 128:Core/Src/main.c ****   MX_USART1_UART_Init();
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 63


 1365              		.loc 1 128 3 view .LVU347
 1366 0018 FFF7FEFF 		bl	MX_SPI1_Init
 1367              	.LVL85:
 129:Core/Src/main.c ****   MX_I2C1_Init();
 1368              		.loc 1 129 3 view .LVU348
 1369 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 1370              	.LVL86:
 130:Core/Src/main.c ****   MX_FATFS_Init();
 1371              		.loc 1 130 3 view .LVU349
 1372 0020 FFF7FEFF 		bl	MX_I2C1_Init
 1373              	.LVL87:
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1374              		.loc 1 131 3 view .LVU350
 1375 0024 FFF7FEFF 		bl	MX_FATFS_Init
 1376              	.LVL88:
 137:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 1377              		.loc 1 137 3 view .LVU351
 138:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1378              		.loc 1 138 3 view .LVU352
 138:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1379              		.loc 1 138 21 is_stmt 0 view .LVU353
 1380 0028 B44B     		ldr	r3, .L99
 1381 002a 0E93     		str	r3, [sp, #56]
 139:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1382              		.loc 1 139 3 is_stmt 1 view .LVU354
 139:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1383              		.loc 1 139 20 is_stmt 0 view .LVU355
 1384 002c B44B     		ldr	r3, .L99+4
 1385 002e 0F93     		str	r3, [sp, #60]
 140:Core/Src/main.c **** 
 1386              		.loc 1 140 3 is_stmt 1 view .LVU356
 140:Core/Src/main.c **** 
 1387              		.loc 1 140 18 is_stmt 0 view .LVU357
 1388 0030 B44B     		ldr	r3, .L99+8
 1389 0032 1193     		str	r3, [sp, #68]
 142:Core/Src/main.c ****   radio_ctx.write_reg = llcc68_platform_write_read;
 1390              		.loc 1 142 3 is_stmt 1 view .LVU358
 143:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_write_read;
 1391              		.loc 1 143 3 view .LVU359
 143:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_write_read;
 1392              		.loc 1 143 23 is_stmt 0 view .LVU360
 1393 0034 B44A     		ldr	r2, .L99+12
 1394 0036 0992     		str	r2, [sp, #36]
 144:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 1395              		.loc 1 144 3 is_stmt 1 view .LVU361
 144:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 1396              		.loc 1 144 22 is_stmt 0 view .LVU362
 1397 0038 0A92     		str	r2, [sp, #40]
 145:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 1398              		.loc 1 145 3 is_stmt 1 view .LVU363
 145:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 1399              		.loc 1 145 19 is_stmt 0 view .LVU364
 1400 003a B44A     		ldr	r2, .L99+16
 1401 003c 0B92     		str	r2, [sp, #44]
 146:Core/Src/main.c **** 
 1402              		.loc 1 146 3 is_stmt 1 view .LVU365
 146:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 64


 1403              		.loc 1 146 20 is_stmt 0 view .LVU366
 1404 003e 0D93     		str	r3, [sp, #52]
 158:Core/Src/main.c **** 
 1405              		.loc 1 158 3 is_stmt 1 view .LVU367
 1406 0040 4FF47A70 		mov	r0, #1000
 1407 0044 FFF7FEFF 		bl	platform_delay
 1408              	.LVL89:
 173:Core/Src/main.c ****   //set auto increment to read several register at same time
 1409              		.loc 1 173 3 view .LVU368
 1410 0048 0121     		movs	r1, #1
 1411 004a 0EA8     		add	r0, sp, #56
 1412 004c FFF7FEFF 		bl	lsm6dsm_spi_mode_set
 1413              	.LVL90:
 175:Core/Src/main.c **** 
 1414              		.loc 1 175 3 view .LVU369
 1415 0050 0121     		movs	r1, #1
 1416 0052 0EA8     		add	r0, sp, #56
 1417 0054 FFF7FEFF 		bl	lsm6dsm_auto_increment_set
 1418              	.LVL91:
 178:Core/Src/main.c ****   
 1419              		.loc 1 178 3 view .LVU370
 1420 0058 AD4C     		ldr	r4, .L99+20
 1421 005a 2146     		mov	r1, r4
 1422 005c 0EA8     		add	r0, sp, #56
 1423 005e FFF7FEFF 		bl	lsm6dsm_device_id_get
 1424              	.LVL92:
 180:Core/Src/main.c ****     while (1) {
 1425              		.loc 1 180 3 view .LVU371
 180:Core/Src/main.c ****     while (1) {
 1426              		.loc 1 180 14 is_stmt 0 view .LVU372
 1427 0062 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 180:Core/Src/main.c ****     while (1) {
 1428              		.loc 1 180 6 view .LVU373
 1429 0064 6A2B     		cmp	r3, #106
 1430 0066 00D0     		beq	.L84
 1431              	.L85:
 181:Core/Src/main.c ****       /* manage here device not found */
 1432              		.loc 1 181 5 is_stmt 1 view .LVU374
 183:Core/Src/main.c **** 
 1433              		.loc 1 183 5 view .LVU375
 181:Core/Src/main.c ****       /* manage here device not found */
 1434              		.loc 1 181 11 view .LVU376
 1435 0068 FEE7     		b	.L85
 1436              	.L84:
 189:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 1437              		.loc 1 189 3 view .LVU377
 190:Core/Src/main.c ****   } while (rst);
 1438              		.loc 1 190 5 view .LVU378
 1439 006a AA4C     		ldr	r4, .L99+24
 1440 006c 2146     		mov	r1, r4
 1441 006e 0EA8     		add	r0, sp, #56
 1442 0070 FFF7FEFF 		bl	lsm6dsm_reset_get
 1443              	.LVL93:
 191:Core/Src/main.c **** 
 1444              		.loc 1 191 12 discriminator 1 view .LVU379
 1445 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1446 0076 002B     		cmp	r3, #0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 65


 1447 0078 F7D1     		bne	.L84
 194:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 1448              		.loc 1 194 3 view .LVU380
 1449 007a 0121     		movs	r1, #1
 1450 007c 0EA8     		add	r0, sp, #56
 1451 007e FFF7FEFF 		bl	lsm6dsm_block_data_update_set
 1452              	.LVL94:
 196:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_52Hz);
 1453              		.loc 1 196 3 view .LVU381
 1454 0082 0321     		movs	r1, #3
 1455 0084 0EA8     		add	r0, sp, #56
 1456 0086 FFF7FEFF 		bl	lsm6dsm_xl_data_rate_set
 1457              	.LVL95:
 197:Core/Src/main.c ****   /* Set full scale */
 1458              		.loc 1 197 3 view .LVU382
 1459 008a 0321     		movs	r1, #3
 1460 008c 0EA8     		add	r0, sp, #56
 1461 008e FFF7FEFF 		bl	lsm6dsm_gy_data_rate_set
 1462              	.LVL96:
 199:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 1463              		.loc 1 199 3 view .LVU383
 1464 0092 0021     		movs	r1, #0
 1465 0094 0EA8     		add	r0, sp, #56
 1466 0096 FFF7FEFF 		bl	lsm6dsm_xl_full_scale_set
 1467              	.LVL97:
 200:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 1468              		.loc 1 200 3 view .LVU384
 1469 009a 0621     		movs	r1, #6
 1470 009c 0EA8     		add	r0, sp, #56
 1471 009e FFF7FEFF 		bl	lsm6dsm_gy_full_scale_set
 1472              	.LVL98:
 204:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 1473              		.loc 1 204 3 view .LVU385
 1474 00a2 0121     		movs	r1, #1
 1475 00a4 0EA8     		add	r0, sp, #56
 1476 00a6 FFF7FEFF 		bl	lsm6dsm_xl_filter_analog_set
 1477              	.LVL99:
 208:Core/Src/main.c ****                                LSM6DSM_XL_LOW_LAT_LP_ODR_DIV_400);
 1478              		.loc 1 208 3 view .LVU386
 1479 00aa 0321     		movs	r1, #3
 1480 00ac 0EA8     		add	r0, sp, #56
 1481 00ae FFF7FEFF 		bl	lsm6dsm_xl_lp2_bandwidth_set
 1482              	.LVL100:
 214:Core/Src/main.c ****   // update the offset bias of acceleration
 1483              		.loc 1 214 3 view .LVU387
 1484 00b2 0B21     		movs	r1, #11
 1485 00b4 0EA8     		add	r0, sp, #56
 1486 00b6 FFF7FEFF 		bl	lsm6dsm_gy_band_pass_set
 1487              	.LVL101:
 216:Core/Src/main.c **** 
 1488              		.loc 1 216 3 view .LVU388
 1489 00ba 4FF47A70 		mov	r0, #1000
 1490 00be FFF7FEFF 		bl	platform_delay
 1491              	.LVL102:
 218:Core/Src/main.c ****   //create a while loop that gets 5 sample of acceleration and calculate the average, then set the 
 1492              		.loc 1 218 3 view .LVU389
 220:Core/Src/main.c ****   int i = 0;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 66


 1493              		.loc 1 220 3 view .LVU390
 220:Core/Src/main.c ****   int i = 0;
 1494              		.loc 1 220 11 is_stmt 0 view .LVU391
 1495 00c2 0024     		movs	r4, #0
 1496 00c4 ADF81C40 		strh	r4, [sp, #28]	@ movhi
 1497 00c8 ADF81E40 		strh	r4, [sp, #30]	@ movhi
 1498 00cc ADF82040 		strh	r4, [sp, #32]	@ movhi
 221:Core/Src/main.c ****   do {
 1499              		.loc 1 221 3 is_stmt 1 view .LVU392
 1500              	.LVL103:
 221:Core/Src/main.c ****   do {
 1501              		.loc 1 221 3 is_stmt 0 view .LVU393
 1502 00d0 01E0     		b	.L87
 1503              	.LVL104:
 1504              	.L86:
 236:Core/Src/main.c ****   acc_bias[0] /= SAMPLE_SIZE;
 1505              		.loc 1 236 14 is_stmt 1 view .LVU394
 1506 00d2 042C     		cmp	r4, #4
 1507 00d4 4BDC     		bgt	.L95
 1508              	.LVL105:
 1509              	.L87:
 222:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 1510              		.loc 1 222 3 view .LVU395
 1511              	.LBB15:
 223:Core/Src/main.c ****       /* Read output only if new value is available */
 1512              		.loc 1 223 5 view .LVU396
 225:Core/Src/main.c ****       if (reg.status_reg.xlda) {
 1513              		.loc 1 225 7 view .LVU397
 1514 00d6 04A9     		add	r1, sp, #16
 1515 00d8 0EA8     		add	r0, sp, #56
 1516 00da FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1517              	.LVL106:
 226:Core/Src/main.c ****         /* Read acceleration field data */
 1518              		.loc 1 226 7 view .LVU398
 226:Core/Src/main.c ****         /* Read acceleration field data */
 1519              		.loc 1 226 11 is_stmt 0 view .LVU399
 1520 00de 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 226:Core/Src/main.c ****         /* Read acceleration field data */
 1521              		.loc 1 226 10 view .LVU400
 1522 00e2 13F0010F 		tst	r3, #1
 1523 00e6 F4D0     		beq	.L86
 1524              	.LBB16:
 228:Core/Src/main.c ****         lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1525              		.loc 1 228 9 is_stmt 1 view .LVU401
 1526 00e8 8B4D     		ldr	r5, .L99+28
 1527 00ea 0023     		movs	r3, #0
 1528 00ec 2B60     		str	r3, [r5]
 1529 00ee AB80     		strh	r3, [r5, #4]	@ movhi
 229:Core/Src/main.c ****         acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 1530              		.loc 1 229 9 view .LVU402
 1531 00f0 2946     		mov	r1, r5
 1532 00f2 0EA8     		add	r0, sp, #56
 1533 00f4 FFF7FEFF 		bl	lsm6dsm_acceleration_raw_get
 1534              	.LVL107:
 230:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1535              		.loc 1 230 9 view .LVU403
 230:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 67


 1536              		.loc 1 230 24 is_stmt 0 view .LVU404
 1537 00f8 B5F90000 		ldrsh	r0, [r5]
 1538 00fc FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1539              	.LVL108:
 230:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1540              		.loc 1 230 17 discriminator 1 view .LVU405
 1541 0100 BDF91C30 		ldrsh	r3, [sp, #28]
 1542 0104 07EE903A 		vmov	s15, r3	@ int
 230:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1543              		.loc 1 230 21 discriminator 1 view .LVU406
 1544 0108 F8EEE77A 		vcvt.f32.s32	s15, s15
 1545 010c 77EE807A 		vadd.f32	s15, s15, s0
 1546 0110 FDEEE77A 		vcvt.s32.f32	s15, s15
 1547 0114 17EE903A 		vmov	r3, s15	@ int
 1548 0118 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 231:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1549              		.loc 1 231 9 is_stmt 1 view .LVU407
 231:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1550              		.loc 1 231 24 is_stmt 0 view .LVU408
 1551 011c B5F90200 		ldrsh	r0, [r5, #2]
 1552 0120 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1553              	.LVL109:
 231:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1554              		.loc 1 231 17 discriminator 1 view .LVU409
 1555 0124 BDF91E30 		ldrsh	r3, [sp, #30]
 1556 0128 07EE903A 		vmov	s15, r3	@ int
 231:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1557              		.loc 1 231 21 discriminator 1 view .LVU410
 1558 012c F8EEE77A 		vcvt.f32.s32	s15, s15
 1559 0130 77EE807A 		vadd.f32	s15, s15, s0
 1560 0134 FDEEE77A 		vcvt.s32.f32	s15, s15
 1561 0138 17EE903A 		vmov	r3, s15	@ int
 1562 013c ADF81E30 		strh	r3, [sp, #30]	@ movhi
 232:Core/Src/main.c ****         platform_delay(100);
 1563              		.loc 1 232 9 is_stmt 1 view .LVU411
 232:Core/Src/main.c ****         platform_delay(100);
 1564              		.loc 1 232 24 is_stmt 0 view .LVU412
 1565 0140 B5F90400 		ldrsh	r0, [r5, #4]
 1566 0144 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1567              	.LVL110:
 232:Core/Src/main.c ****         platform_delay(100);
 1568              		.loc 1 232 17 discriminator 1 view .LVU413
 1569 0148 BDF92030 		ldrsh	r3, [sp, #32]
 1570 014c 07EE903A 		vmov	s15, r3	@ int
 232:Core/Src/main.c ****         platform_delay(100);
 1571              		.loc 1 232 21 discriminator 1 view .LVU414
 1572 0150 F8EEE77A 		vcvt.f32.s32	s15, s15
 1573 0154 77EE807A 		vadd.f32	s15, s15, s0
 1574 0158 FDEEE77A 		vcvt.s32.f32	s15, s15
 1575 015c 17EE903A 		vmov	r3, s15	@ int
 1576 0160 ADF82030 		strh	r3, [sp, #32]	@ movhi
 233:Core/Src/main.c ****         i++;
 1577              		.loc 1 233 9 is_stmt 1 view .LVU415
 1578 0164 6420     		movs	r0, #100
 1579 0166 FFF7FEFF 		bl	platform_delay
 1580              	.LVL111:
 234:Core/Src/main.c ****       }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 68


 1581              		.loc 1 234 9 view .LVU416
 234:Core/Src/main.c ****       }
 1582              		.loc 1 234 10 is_stmt 0 view .LVU417
 1583 016a 0134     		adds	r4, r4, #1
 1584              	.LVL112:
 234:Core/Src/main.c ****       }
 1585              		.loc 1 234 10 view .LVU418
 1586 016c B1E7     		b	.L86
 1587              	.L95:
 234:Core/Src/main.c ****       }
 1588              		.loc 1 234 10 view .LVU419
 1589              	.LBE16:
 1590              	.LBE15:
 237:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 1591              		.loc 1 237 3 is_stmt 1 view .LVU420
 237:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 1592              		.loc 1 237 11 is_stmt 0 view .LVU421
 1593 016e BDF91C20 		ldrsh	r2, [sp, #28]
 237:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 1594              		.loc 1 237 15 view .LVU422
 1595 0172 0523     		movs	r3, #5
 1596 0174 92FBF3F2 		sdiv	r2, r2, r3
 1597 0178 0AEE102A 		vmov	s20, r2	@ int
 1598 017c ADF81C20 		strh	r2, [sp, #28]	@ movhi
 238:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 1599              		.loc 1 238 3 is_stmt 1 view .LVU423
 238:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 1600              		.loc 1 238 11 is_stmt 0 view .LVU424
 1601 0180 BDF91E20 		ldrsh	r2, [sp, #30]
 238:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 1602              		.loc 1 238 15 view .LVU425
 1603 0184 92FBF3F2 		sdiv	r2, r2, r3
 1604 0188 0AEE902A 		vmov	s21, r2	@ int
 1605 018c ADF81E20 		strh	r2, [sp, #30]	@ movhi
 239:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 1606              		.loc 1 239 3 is_stmt 1 view .LVU426
 239:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 1607              		.loc 1 239 11 is_stmt 0 view .LVU427
 1608 0190 BDF92020 		ldrsh	r2, [sp, #32]
 239:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 1609              		.loc 1 239 15 view .LVU428
 1610 0194 92FBF3F3 		sdiv	r3, r2, r3
 1611 0198 0BEE103A 		vmov	s22, r3	@ int
 1612 019c ADF82030 		strh	r3, [sp, #32]	@ movhi
 254:Core/Src/main.c ****   i = 0;
 1613              		.loc 1 254 3 is_stmt 1 view .LVU429
 254:Core/Src/main.c ****   i = 0;
 1614              		.loc 1 254 11 is_stmt 0 view .LVU430
 1615 01a0 0024     		movs	r4, #0
 1616              	.LVL113:
 254:Core/Src/main.c ****   i = 0;
 1617              		.loc 1 254 11 view .LVU431
 1618 01a2 ADF81440 		strh	r4, [sp, #20]	@ movhi
 1619 01a6 ADF81640 		strh	r4, [sp, #22]	@ movhi
 1620 01aa ADF81840 		strh	r4, [sp, #24]	@ movhi
 255:Core/Src/main.c ****   do {
 1621              		.loc 1 255 3 is_stmt 1 view .LVU432
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 69


 1622              	.LVL114:
 255:Core/Src/main.c ****   do {
 1623              		.loc 1 255 3 is_stmt 0 view .LVU433
 1624 01ae 01E0     		b	.L89
 1625              	.LVL115:
 1626              	.L88:
 270:Core/Src/main.c ****   gyro_bias[0] /= SAMPLE_SIZE;
 1627              		.loc 1 270 14 is_stmt 1 view .LVU434
 1628 01b0 042C     		cmp	r4, #4
 1629 01b2 4BDC     		bgt	.L96
 1630              	.LVL116:
 1631              	.L89:
 256:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 1632              		.loc 1 256 3 view .LVU435
 1633              	.LBB17:
 257:Core/Src/main.c **** 	    /* Read output only if new value is available */
 1634              		.loc 1 257 5 view .LVU436
 259:Core/Src/main.c ****       if (reg.status_reg.gda) {
 1635              		.loc 1 259 6 view .LVU437
 1636 01b4 04A9     		add	r1, sp, #16
 1637 01b6 0EA8     		add	r0, sp, #56
 1638 01b8 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1639              	.LVL117:
 260:Core/Src/main.c ****         /* Read angular rate field data */
 1640              		.loc 1 260 7 view .LVU438
 260:Core/Src/main.c ****         /* Read angular rate field data */
 1641              		.loc 1 260 11 is_stmt 0 view .LVU439
 1642 01bc 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 260:Core/Src/main.c ****         /* Read angular rate field data */
 1643              		.loc 1 260 10 view .LVU440
 1644 01c0 13F0020F 		tst	r3, #2
 1645 01c4 F4D0     		beq	.L88
 1646              	.LBB18:
 262:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1647              		.loc 1 262 9 is_stmt 1 view .LVU441
 1648 01c6 554D     		ldr	r5, .L99+32
 1649 01c8 0023     		movs	r3, #0
 1650 01ca 2B60     		str	r3, [r5]
 1651 01cc AB80     		strh	r3, [r5, #4]	@ movhi
 263:Core/Src/main.c ****         gyro_bias[0] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 1652              		.loc 1 263 9 view .LVU442
 1653 01ce 2946     		mov	r1, r5
 1654 01d0 0EA8     		add	r0, sp, #56
 1655 01d2 FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1656              	.LVL118:
 264:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1657              		.loc 1 264 9 view .LVU443
 264:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1658              		.loc 1 264 25 is_stmt 0 view .LVU444
 1659 01d6 B5F90000 		ldrsh	r0, [r5]
 1660 01da FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1661              	.LVL119:
 264:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1662              		.loc 1 264 18 discriminator 1 view .LVU445
 1663 01de BDF91430 		ldrsh	r3, [sp, #20]
 1664 01e2 07EE903A 		vmov	s15, r3	@ int
 264:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 70


 1665              		.loc 1 264 22 discriminator 1 view .LVU446
 1666 01e6 F8EEE77A 		vcvt.f32.s32	s15, s15
 1667 01ea 77EE807A 		vadd.f32	s15, s15, s0
 1668 01ee FDEEE77A 		vcvt.s32.f32	s15, s15
 1669 01f2 17EE903A 		vmov	r3, s15	@ int
 1670 01f6 ADF81430 		strh	r3, [sp, #20]	@ movhi
 265:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1671              		.loc 1 265 9 is_stmt 1 view .LVU447
 265:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1672              		.loc 1 265 25 is_stmt 0 view .LVU448
 1673 01fa B5F90200 		ldrsh	r0, [r5, #2]
 1674 01fe FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1675              	.LVL120:
 265:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1676              		.loc 1 265 18 discriminator 1 view .LVU449
 1677 0202 BDF91630 		ldrsh	r3, [sp, #22]
 1678 0206 07EE903A 		vmov	s15, r3	@ int
 265:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1679              		.loc 1 265 22 discriminator 1 view .LVU450
 1680 020a F8EEE77A 		vcvt.f32.s32	s15, s15
 1681 020e 77EE807A 		vadd.f32	s15, s15, s0
 1682 0212 FDEEE77A 		vcvt.s32.f32	s15, s15
 1683 0216 17EE903A 		vmov	r3, s15	@ int
 1684 021a ADF81630 		strh	r3, [sp, #22]	@ movhi
 266:Core/Src/main.c ****         platform_delay(100);
 1685              		.loc 1 266 9 is_stmt 1 view .LVU451
 266:Core/Src/main.c ****         platform_delay(100);
 1686              		.loc 1 266 25 is_stmt 0 view .LVU452
 1687 021e B5F90400 		ldrsh	r0, [r5, #4]
 1688 0222 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1689              	.LVL121:
 266:Core/Src/main.c ****         platform_delay(100);
 1690              		.loc 1 266 18 discriminator 1 view .LVU453
 1691 0226 BDF91830 		ldrsh	r3, [sp, #24]
 1692 022a 07EE903A 		vmov	s15, r3	@ int
 266:Core/Src/main.c ****         platform_delay(100);
 1693              		.loc 1 266 22 discriminator 1 view .LVU454
 1694 022e F8EEE77A 		vcvt.f32.s32	s15, s15
 1695 0232 77EE807A 		vadd.f32	s15, s15, s0
 1696 0236 FDEEE77A 		vcvt.s32.f32	s15, s15
 1697 023a 17EE903A 		vmov	r3, s15	@ int
 1698 023e ADF81830 		strh	r3, [sp, #24]	@ movhi
 267:Core/Src/main.c ****         i++;
 1699              		.loc 1 267 9 is_stmt 1 view .LVU455
 1700 0242 6420     		movs	r0, #100
 1701 0244 FFF7FEFF 		bl	platform_delay
 1702              	.LVL122:
 268:Core/Src/main.c ****       }
 1703              		.loc 1 268 9 view .LVU456
 268:Core/Src/main.c ****       }
 1704              		.loc 1 268 10 is_stmt 0 view .LVU457
 1705 0248 0134     		adds	r4, r4, #1
 1706              	.LVL123:
 268:Core/Src/main.c ****       }
 1707              		.loc 1 268 10 view .LVU458
 1708 024a B1E7     		b	.L88
 1709              	.L96:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 71


 268:Core/Src/main.c ****       }
 1710              		.loc 1 268 10 view .LVU459
 1711              	.LBE18:
 1712              	.LBE17:
 271:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 1713              		.loc 1 271 3 is_stmt 1 view .LVU460
 271:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 1714              		.loc 1 271 12 is_stmt 0 view .LVU461
 1715 024c BDF91420 		ldrsh	r2, [sp, #20]
 271:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 1716              		.loc 1 271 16 view .LVU462
 1717 0250 0523     		movs	r3, #5
 1718 0252 92FBF3F2 		sdiv	r2, r2, r3
 1719 0256 09EE902A 		vmov	s19, r2	@ int
 1720 025a ADF81420 		strh	r2, [sp, #20]	@ movhi
 272:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 1721              		.loc 1 272 3 is_stmt 1 view .LVU463
 272:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 1722              		.loc 1 272 12 is_stmt 0 view .LVU464
 1723 025e BDF91620 		ldrsh	r2, [sp, #22]
 272:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 1724              		.loc 1 272 16 view .LVU465
 1725 0262 92FBF3F2 		sdiv	r2, r2, r3
 1726 0266 09EE102A 		vmov	s18, r2	@ int
 1727 026a ADF81620 		strh	r2, [sp, #22]	@ movhi
 273:Core/Src/main.c **** 
 1728              		.loc 1 273 3 is_stmt 1 view .LVU466
 273:Core/Src/main.c **** 
 1729              		.loc 1 273 12 is_stmt 0 view .LVU467
 1730 026e BDF91820 		ldrsh	r2, [sp, #24]
 273:Core/Src/main.c **** 
 1731              		.loc 1 273 16 view .LVU468
 1732 0272 92FBF3F3 		sdiv	r3, r2, r3
 1733 0276 08EE903A 		vmov	s17, r3	@ int
 1734 027a ADF81830 		strh	r3, [sp, #24]	@ movhi
 1735 027e 94E0     		b	.L93
 1736              	.LVL124:
 1737              	.L97:
 1738              	.LBB19:
 1739              	.LBB20:
 322:Core/Src/main.c **** 	      lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1740              		.loc 1 322 8 is_stmt 1 view .LVU469
 1741 0280 254C     		ldr	r4, .L99+28
 1742 0282 0023     		movs	r3, #0
 1743 0284 2360     		str	r3, [r4]
 1744 0286 A380     		strh	r3, [r4, #4]	@ movhi
 323:Core/Src/main.c **** 	      acceleration_mg[0] =
 1745              		.loc 1 323 8 view .LVU470
 1746 0288 2146     		mov	r1, r4
 1747 028a 0EA8     		add	r0, sp, #56
 1748 028c FFF7FEFF 		bl	lsm6dsm_acceleration_raw_get
 1749              	.LVL125:
 324:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]) - acc_bias[0];
 1750              		.loc 1 324 8 view .LVU471
 325:Core/Src/main.c **** 	      acceleration_mg[1] =
 1751              		.loc 1 325 10 is_stmt 0 view .LVU472
 1752 0290 B4F90000 		ldrsh	r0, [r4]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 72


 1753 0294 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1754              	.LVL126:
 325:Core/Src/main.c **** 	      acceleration_mg[1] =
 1755              		.loc 1 325 60 discriminator 1 view .LVU473
 1756 0298 F8EECA7A 		vcvt.f32.s32	s15, s20
 1757 029c 30EE670A 		vsub.f32	s0, s0, s15
 324:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]) - acc_bias[0];
 1758              		.loc 1 324 27 view .LVU474
 1759 02a0 1F4D     		ldr	r5, .L99+36
 1760 02a2 85ED000A 		vstr.32	s0, [r5]
 326:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]) - acc_bias[1];
 1761              		.loc 1 326 8 is_stmt 1 view .LVU475
 327:Core/Src/main.c **** 	      acceleration_mg[2] =
 1762              		.loc 1 327 10 is_stmt 0 view .LVU476
 1763 02a6 B4F90200 		ldrsh	r0, [r4, #2]
 1764 02aa FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1765              	.LVL127:
 327:Core/Src/main.c **** 	      acceleration_mg[2] =
 1766              		.loc 1 327 60 discriminator 1 view .LVU477
 1767 02ae F8EEEA7A 		vcvt.f32.s32	s15, s21
 1768 02b2 30EE670A 		vsub.f32	s0, s0, s15
 326:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]) - acc_bias[1];
 1769              		.loc 1 326 27 view .LVU478
 1770 02b6 85ED010A 		vstr.32	s0, [r5, #4]
 328:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]) - acc_bias[2];
 1771              		.loc 1 328 8 is_stmt 1 view .LVU479
 329:Core/Src/main.c **** 	      // printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 1772              		.loc 1 329 10 is_stmt 0 view .LVU480
 1773 02ba B4F90400 		ldrsh	r0, [r4, #4]
 1774 02be FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1775              	.LVL128:
 329:Core/Src/main.c **** 	      // printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 1776              		.loc 1 329 60 discriminator 1 view .LVU481
 1777 02c2 F8EECB7A 		vcvt.f32.s32	s15, s22
 1778 02c6 30EE678A 		vsub.f32	s16, s0, s15
 328:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]) - acc_bias[2];
 1779              		.loc 1 328 27 view .LVU482
 1780 02ca 85ED028A 		vstr.32	s16, [r5, #8]
 332:Core/Src/main.c **** 	    }
 1781              		.loc 1 332 9 is_stmt 1 view .LVU483
 332:Core/Src/main.c **** 	    }
 1782              		.loc 1 332 73 is_stmt 0 view .LVU484
 1783 02ce 6E68     		ldr	r6, [r5, #4]	@ float
 332:Core/Src/main.c **** 	    }
 1784              		.loc 1 332 9 view .LVU485
 1785 02d0 2868     		ldr	r0, [r5]	@ float
 1786 02d2 FFF7FEFF 		bl	__aeabi_f2d
 1787              	.LVL129:
 1788 02d6 0446     		mov	r4, r0
 1789 02d8 0D46     		mov	r5, r1
 1790 02da 18EE100A 		vmov	r0, s16
 1791 02de FFF7FEFF 		bl	__aeabi_f2d
 1792              	.LVL130:
 1793 02e2 CDE90201 		strd	r0, [sp, #8]
 1794 02e6 3046     		mov	r0, r6	@ float
 1795 02e8 FFF7FEFF 		bl	__aeabi_f2d
 1796              	.LVL131:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 73


 1797 02ec CDE90001 		strd	r0, [sp]
 1798 02f0 2246     		mov	r2, r4
 1799 02f2 2B46     		mov	r3, r5
 1800 02f4 0B48     		ldr	r0, .L99+40
 1801 02f6 FFF7FEFF 		bl	printf
 1802              	.LVL132:
 1803 02fa 60E0     		b	.L90
 1804              	.L100:
 1805              		.align	2
 1806              	.L99:
 1807 02fc 00000000 		.word	lsm6dsm_platform_write
 1808 0300 00000000 		.word	lsm6dsm_platform_read
 1809 0304 00000000 		.word	hspi1
 1810 0308 00000000 		.word	llcc68_platform_write_read
 1811 030c 00000000 		.word	llcc68_platform_reset
 1812 0310 00000000 		.word	whoamI
 1813 0314 00000000 		.word	rst
 1814 0318 00000000 		.word	data_raw_acceleration
 1815 031c 00000000 		.word	data_raw_angular_rate
 1816 0320 00000000 		.word	acceleration_mg
 1817 0324 00000000 		.word	.LC10
 1818              	.L98:
 1819              	.LBE20:
 1820              	.LBB21:
 337:Core/Src/main.c **** 	      lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1821              		.loc 1 337 8 is_stmt 1 view .LVU486
 1822 0328 364C     		ldr	r4, .L101
 1823 032a 0023     		movs	r3, #0
 1824 032c 2360     		str	r3, [r4]
 1825 032e A380     		strh	r3, [r4, #4]	@ movhi
 338:Core/Src/main.c **** 	      angular_rate_mdps[0] =
 1826              		.loc 1 338 8 view .LVU487
 1827 0330 2146     		mov	r1, r4
 1828 0332 0EA8     		add	r0, sp, #56
 1829 0334 FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1830              	.LVL133:
 339:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]) - gyro_bias[0];
 1831              		.loc 1 339 8 view .LVU488
 340:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 1832              		.loc 1 340 10 is_stmt 0 view .LVU489
 1833 0338 B4F90000 		ldrsh	r0, [r4]
 1834 033c FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1835              	.LVL134:
 340:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 1836              		.loc 1 340 67 discriminator 1 view .LVU490
 1837 0340 F8EEE97A 		vcvt.f32.s32	s15, s19
 1838 0344 30EE670A 		vsub.f32	s0, s0, s15
 339:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]) - gyro_bias[0];
 1839              		.loc 1 339 29 view .LVU491
 1840 0348 2F4D     		ldr	r5, .L101+4
 1841 034a 85ED000A 		vstr.32	s0, [r5]
 341:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]) - gyro_bias[1];
 1842              		.loc 1 341 8 is_stmt 1 view .LVU492
 342:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 1843              		.loc 1 342 10 is_stmt 0 view .LVU493
 1844 034e B4F90200 		ldrsh	r0, [r4, #2]
 1845 0352 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 74


 1846              	.LVL135:
 342:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 1847              		.loc 1 342 67 discriminator 1 view .LVU494
 1848 0356 F8EEC97A 		vcvt.f32.s32	s15, s18
 1849 035a 30EE670A 		vsub.f32	s0, s0, s15
 341:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]) - gyro_bias[1];
 1850              		.loc 1 341 29 view .LVU495
 1851 035e 85ED010A 		vstr.32	s0, [r5, #4]
 343:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]) - gyro_bias[2];
 1852              		.loc 1 343 8 is_stmt 1 view .LVU496
 344:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 1853              		.loc 1 344 10 is_stmt 0 view .LVU497
 1854 0362 B4F90400 		ldrsh	r0, [r4, #4]
 1855 0366 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1856              	.LVL136:
 344:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 1857              		.loc 1 344 67 discriminator 1 view .LVU498
 1858 036a F8EEE87A 		vcvt.f32.s32	s15, s17
 1859 036e 30EE678A 		vsub.f32	s16, s0, s15
 343:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]) - gyro_bias[2];
 1860              		.loc 1 343 29 view .LVU499
 1861 0372 85ED028A 		vstr.32	s16, [r5, #8]
 346:Core/Src/main.c **** 	    }
 1862              		.loc 1 346 8 is_stmt 1 view .LVU500
 346:Core/Src/main.c **** 	    }
 1863              		.loc 1 346 76 is_stmt 0 view .LVU501
 1864 0376 6E68     		ldr	r6, [r5, #4]	@ float
 346:Core/Src/main.c **** 	    }
 1865              		.loc 1 346 8 view .LVU502
 1866 0378 2868     		ldr	r0, [r5]	@ float
 1867 037a FFF7FEFF 		bl	__aeabi_f2d
 1868              	.LVL137:
 1869 037e 0446     		mov	r4, r0
 1870 0380 0D46     		mov	r5, r1
 1871 0382 18EE100A 		vmov	r0, s16
 1872 0386 FFF7FEFF 		bl	__aeabi_f2d
 1873              	.LVL138:
 1874 038a CDE90201 		strd	r0, [sp, #8]
 1875 038e 3046     		mov	r0, r6	@ float
 1876 0390 FFF7FEFF 		bl	__aeabi_f2d
 1877              	.LVL139:
 1878 0394 CDE90001 		strd	r0, [sp]
 1879 0398 2246     		mov	r2, r4
 1880 039a 2B46     		mov	r3, r5
 1881 039c 1B48     		ldr	r0, .L101+8
 1882 039e FFF7FEFF 		bl	printf
 1883              	.LVL140:
 1884 03a2 11E0     		b	.L91
 1885              	.L92:
 1886              	.LBE21:
 396:Core/Src/main.c ****   }
 1887              		.loc 1 396 7 is_stmt 1 view .LVU503
 1888 03a4 6420     		movs	r0, #100
 1889 03a6 FFF7FEFF 		bl	platform_delay
 1890              	.LVL141:
 1891              	.LBE19:
 298:Core/Src/main.c ****   {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 75


 1892              		.loc 1 298 9 view .LVU504
 1893              	.L93:
 298:Core/Src/main.c ****   {
 1894              		.loc 1 298 3 view .LVU505
 1895              	.LBB23:
 316:Core/Src/main.c **** 	    /* Read output only if new value is available */
 1896              		.loc 1 316 6 view .LVU506
 318:Core/Src/main.c **** 
 1897              		.loc 1 318 6 view .LVU507
 1898 03aa 04A9     		add	r1, sp, #16
 1899 03ac 0EA8     		add	r0, sp, #56
 1900 03ae FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1901              	.LVL142:
 320:Core/Src/main.c **** 	      /* Read acceleration field data */
 1902              		.loc 1 320 6 view .LVU508
 320:Core/Src/main.c **** 	      /* Read acceleration field data */
 1903              		.loc 1 320 10 is_stmt 0 view .LVU509
 1904 03b2 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 320:Core/Src/main.c **** 	      /* Read acceleration field data */
 1905              		.loc 1 320 9 view .LVU510
 1906 03b6 13F0010F 		tst	r3, #1
 1907 03ba 7FF461AF 		bne	.L97
 1908              	.L90:
 335:Core/Src/main.c **** 	      /* Read angular rate field data */
 1909              		.loc 1 335 6 is_stmt 1 view .LVU511
 335:Core/Src/main.c **** 	      /* Read angular rate field data */
 1910              		.loc 1 335 10 is_stmt 0 view .LVU512
 1911 03be 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 335:Core/Src/main.c **** 	      /* Read angular rate field data */
 1912              		.loc 1 335 9 view .LVU513
 1913 03c2 13F0020F 		tst	r3, #2
 1914 03c6 AFD1     		bne	.L98
 1915              	.L91:
 348:Core/Src/main.c **** 	      /* Read temperature data */
 1916              		.loc 1 348 6 is_stmt 1 view .LVU514
 348:Core/Src/main.c **** 	      /* Read temperature data */
 1917              		.loc 1 348 10 is_stmt 0 view .LVU515
 1918 03c8 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 348:Core/Src/main.c **** 	      /* Read temperature data */
 1919              		.loc 1 348 9 view .LVU516
 1920 03cc 13F0040F 		tst	r3, #4
 1921 03d0 E8D0     		beq	.L92
 1922              	.LBB22:
 350:Core/Src/main.c **** 	      lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 1923              		.loc 1 350 8 is_stmt 1 view .LVU517
 1924 03d2 0F4C     		ldr	r4, .L101+12
 1925 03d4 0023     		movs	r3, #0
 1926 03d6 2380     		strh	r3, [r4]	@ movhi
 351:Core/Src/main.c **** 	      temperature_degC = lsm6dsm_from_lsb_to_celsius(
 1927              		.loc 1 351 8 view .LVU518
 1928 03d8 2146     		mov	r1, r4
 1929 03da 0EA8     		add	r0, sp, #56
 1930 03dc FFF7FEFF 		bl	lsm6dsm_temperature_raw_get
 1931              	.LVL143:
 352:Core/Src/main.c **** 	                           data_raw_temperature);
 1932              		.loc 1 352 8 view .LVU519
 352:Core/Src/main.c **** 	                           data_raw_temperature);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 76


 1933              		.loc 1 352 27 is_stmt 0 view .LVU520
 1934 03e0 B4F90000 		ldrsh	r0, [r4]
 1935 03e4 FFF7FEFF 		bl	lsm6dsm_from_lsb_to_celsius
 1936              	.LVL144:
 1937 03e8 10EE100A 		vmov	r0, s0
 352:Core/Src/main.c **** 	                           data_raw_temperature);
 1938              		.loc 1 352 25 discriminator 1 view .LVU521
 1939 03ec 094B     		ldr	r3, .L101+16
 1940 03ee 83ED000A 		vstr.32	s0, [r3]
 356:Core/Src/main.c **** 	    }
 1941              		.loc 1 356 9 is_stmt 1 view .LVU522
 1942 03f2 FFF7FEFF 		bl	__aeabi_f2d
 1943              	.LVL145:
 1944 03f6 0246     		mov	r2, r0
 1945 03f8 0B46     		mov	r3, r1
 1946 03fa 0748     		ldr	r0, .L101+20
 1947 03fc FFF7FEFF 		bl	printf
 1948              	.LVL146:
 1949 0400 D0E7     		b	.L92
 1950              	.L102:
 1951 0402 00BF     		.align	2
 1952              	.L101:
 1953 0404 00000000 		.word	data_raw_angular_rate
 1954 0408 00000000 		.word	angular_rate_mdps
 1955 040c 00000000 		.word	.LC10
 1956 0410 00000000 		.word	data_raw_temperature
 1957 0414 00000000 		.word	temperature_degC
 1958 0418 14000000 		.word	.LC11
 1959              	.LBE22:
 1960              	.LBE23:
 1961              		.cfi_endproc
 1962              	.LFE134:
 1964              		.section	.bss.rst,"aw",%nobits
 1967              	rst:
 1968 0000 00       		.space	1
 1969              		.section	.bss.whoamI,"aw",%nobits
 1972              	whoamI:
 1973 0000 00       		.space	1
 1974              		.section	.bss.temperature_degC,"aw",%nobits
 1975              		.align	2
 1978              	temperature_degC:
 1979 0000 00000000 		.space	4
 1980              		.section	.bss.angular_rate_mdps,"aw",%nobits
 1981              		.align	2
 1984              	angular_rate_mdps:
 1985 0000 00000000 		.space	12
 1985      00000000 
 1985      00000000 
 1986              		.section	.bss.acceleration_mg,"aw",%nobits
 1987              		.align	2
 1990              	acceleration_mg:
 1991 0000 00000000 		.space	12
 1991      00000000 
 1991      00000000 
 1992              		.section	.bss.data_raw_temperature,"aw",%nobits
 1993              		.align	1
 1996              	data_raw_temperature:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 77


 1997 0000 0000     		.space	2
 1998              		.section	.bss.data_raw_angular_rate,"aw",%nobits
 1999              		.align	2
 2002              	data_raw_angular_rate:
 2003 0000 00000000 		.space	6
 2003      0000
 2004              		.section	.bss.data_raw_acceleration,"aw",%nobits
 2005              		.align	2
 2008              	data_raw_acceleration:
 2009 0000 00000000 		.space	6
 2009      0000
 2010              		.global	temp
 2011              		.section	.bss.temp,"aw",%nobits
 2012              		.align	1
 2015              	temp:
 2016 0000 0000     		.space	2
 2017              		.global	huart1
 2018              		.section	.bss.huart1,"aw",%nobits
 2019              		.align	2
 2022              	huart1:
 2023 0000 00000000 		.space	72
 2023      00000000 
 2023      00000000 
 2023      00000000 
 2023      00000000 
 2024              		.global	hspi1
 2025              		.section	.bss.hspi1,"aw",%nobits
 2026              		.align	2
 2029              	hspi1:
 2030 0000 00000000 		.space	88
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2031              		.global	hsd
 2032              		.section	.bss.hsd,"aw",%nobits
 2033              		.align	2
 2036              	hsd:
 2037 0000 00000000 		.space	132
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2038              		.global	hi2c1
 2039              		.section	.bss.hi2c1,"aw",%nobits
 2040              		.align	2
 2043              	hi2c1:
 2044 0000 00000000 		.space	84
 2044      00000000 
 2044      00000000 
 2044      00000000 
 2044      00000000 
 2045              		.text
 2046              	.Letext0:
 2047              		.file 3 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/ma
 2048              		.file 4 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/sy
 2049              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 78


 2050              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2051              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2052              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2053              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2054              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2055              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2056              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 2057              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 2058              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2059              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2060              		.file 16 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/m
 2061              		.file 17 "Drivers/LSM6DSM/Inc/lsm6dsm_reg.h"
 2062              		.file 18 "Drivers/LLCC68/Inc/llcc68_hal.h"
 2063              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2064              		.file 20 "<built-in>"
 2065              		.file 21 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 79


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:21     .text.MX_SDIO_SD_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:26     .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:62     .text.MX_SDIO_SD_Init:00000018 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2036   .bss.hsd:00000000 hsd
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:68     .text.llcc68_platform_reset:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:73     .text.llcc68_platform_reset:00000000 llcc68_platform_reset
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:115    .text.llcc68_platform_reset:00000028 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:120    .text.platform_delay:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:125    .text.platform_delay:00000000 platform_delay
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:146    .text.lsm6dsm_platform_write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:151    .text.lsm6dsm_platform_write:00000000 lsm6dsm_platform_write
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:217    .text.lsm6dsm_platform_write:00000048 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:222    .text.llcc68_platform_write_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:227    .text.llcc68_platform_write_read:00000000 llcc68_platform_write_read
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:335    .text.llcc68_platform_write_read:00000068 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2029   .bss.hspi1:00000000 hspi1
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:341    .text.lsm6dsm_platform_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:346    .text.lsm6dsm_platform_read:00000000 lsm6dsm_platform_read
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:419    .text.lsm6dsm_platform_read:00000054 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:424    .text.MX_GPIO_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:429    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:661    .text.MX_GPIO_Init:0000010c $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:668    .text._write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:674    .text._write:00000000 _write
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:706    .text._write:00000014 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2022   .bss.huart1:00000000 huart1
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:711    .rodata.bmp5_error_codes_print_result.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:740    .text.bmp5_error_codes_print_result:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:746    .text.bmp5_error_codes_print_result:00000000 bmp5_error_codes_print_result
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:780    .text.bmp5_error_codes_print_result:0000001a $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:853    .text.bmp5_error_codes_print_result:00000074 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:866    .text.Error_Handler:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:872    .text.Error_Handler:00000000 Error_Handler
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:904    .text.MX_SPI1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:909    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:976    .text.MX_SPI1_Init:00000038 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:982    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:987    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1041   .text.MX_USART1_UART_Init:0000002c $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1047   .rodata.MX_I2C1_Init.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1051   .text.MX_I2C1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1056   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1153   .text.MX_I2C1_Init:0000006c $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2043   .bss.hi2c1:00000000 hi2c1
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1162   .text.SystemClock_Config:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1168   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1309   .text.SystemClock_Config:00000090 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1316   .rodata.main.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1323   .text.main:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1329   .text.main:00000000 main
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1807   .text.main:000002fc $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1972   .bss.whoamI:00000000 whoamI
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1967   .bss.rst:00000000 rst
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2008   .bss.data_raw_acceleration:00000000 data_raw_acceleration
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2002   .bss.data_raw_angular_rate:00000000 data_raw_angular_rate
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 80


C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1990   .bss.acceleration_mg:00000000 acceleration_mg
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1822   .text.main:00000328 $t
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1953   .text.main:00000404 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1984   .bss.angular_rate_mdps:00000000 angular_rate_mdps
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1996   .bss.data_raw_temperature:00000000 data_raw_temperature
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1978   .bss.temperature_degC:00000000 temperature_degC
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1968   .bss.rst:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1973   .bss.whoamI:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1975   .bss.temperature_degC:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1981   .bss.angular_rate_mdps:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1987   .bss.acceleration_mg:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1993   .bss.data_raw_temperature:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:1999   .bss.data_raw_angular_rate:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2005   .bss.data_raw_acceleration:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2015   .bss.temp:00000000 temp
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2012   .bss.temp:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2019   .bss.huart1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2026   .bss.hspi1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2033   .bss.hsd:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:2040   .bss.hi2c1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:787    .text.bmp5_error_codes_print_result:00000021 $d
C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s:787    .text.bmp5_error_codes_print_result:00000022 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
HAL_SPI_Transmit
HAL_SPI_Receive
HAL_GPIO_Init
HAL_UART_Transmit
printf
HAL_SPI_Init
HAL_UART_Init
HAL_I2C_Init
HAL_I2C_IsDeviceReady
HAL_I2C_Mem_Write
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_FATFS_Init
lsm6dsm_spi_mode_set
lsm6dsm_auto_increment_set
lsm6dsm_device_id_get
lsm6dsm_reset_get
lsm6dsm_block_data_update_set
lsm6dsm_xl_data_rate_set
lsm6dsm_gy_data_rate_set
lsm6dsm_xl_full_scale_set
lsm6dsm_gy_full_scale_set
lsm6dsm_xl_filter_analog_set
lsm6dsm_xl_lp2_bandwidth_set
lsm6dsm_gy_band_pass_set
lsm6dsm_status_reg_get
lsm6dsm_acceleration_raw_get
lsm6dsm_from_fs2g_to_mg
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccKCr1ai.s 			page 81


lsm6dsm_angular_rate_raw_get
lsm6dsm_from_fs2000dps_to_mdps
lsm6dsm_temperature_raw_get
lsm6dsm_from_lsb_to_celsius
