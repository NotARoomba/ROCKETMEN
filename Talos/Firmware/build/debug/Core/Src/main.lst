ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_SDIO_SD_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <lsm6dsm_reg.h>
  26:Core/Src/main.c **** #include <stm32f405xx.h>
  27:Core/Src/main.c **** #include <llcc68_hal.h>
  28:Core/Src/main.c **** #include <llcc68.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SD_HandleTypeDef hsd;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  63:Core/Src/main.c **** static void MX_SPI1_Init(void);
  64:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  65:Core/Src/main.c **** static void MX_I2C1_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** // function prototype
  68:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
  69:Core/Src/main.c ****                               uint16_t len);
  70:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
  71:Core/Src/main.c ****                              uint16_t len);
  72:Core/Src/main.c **** static void platform_delay(uint32_t ms);
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t *command, uint16_t command_le
  75:Core/Src/main.c ****                                           uint8_t *data, uint16_t data_length);
  76:Core/Src/main.c **** static int32_t llcc68_platform_reset(void *handle);
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c ****   int16_t temp;
  82:Core/Src/main.c **** //variable initialization
  83:Core/Src/main.c **** static int16_t data_raw_acceleration[3];
  84:Core/Src/main.c **** static int16_t data_raw_angular_rate[3];
  85:Core/Src/main.c **** static int16_t data_raw_temperature;
  86:Core/Src/main.c **** static float acceleration_mg[3];
  87:Core/Src/main.c **** static float angular_rate_mdps[3];
  88:Core/Src/main.c **** static float temperature_degC;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 3


  89:Core/Src/main.c **** static uint8_t whoamI, rst;
  90:Core/Src/main.c **** /* USER CODE END 0 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /**
  93:Core/Src/main.c ****   * @brief  The application entry point.
  94:Core/Src/main.c ****   * @retval int
  95:Core/Src/main.c ****   */
  96:Core/Src/main.c **** int main(void)
  97:Core/Src/main.c **** {
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
 121:Core/Src/main.c ****   MX_SDIO_SD_Init();
 122:Core/Src/main.c ****   MX_SPI1_Init();
 123:Core/Src/main.c ****   MX_USART1_UART_Init();
 124:Core/Src/main.c ****   MX_I2C1_Init();
 125:Core/Src/main.c ****   MX_FATFS_Init();
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   //  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****    // variable initialization for sensor access
 131:Core/Src/main.c ****   stmdev_ctx_t dev_ctx;
 132:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 133:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 134:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   llcc68_ctx_t radio_ctx;
 137:Core/Src/main.c ****   radio_ctx.write_reg = llcc68_platform_write_read;
 138:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_write_read;
 139:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 140:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Wait sensor boot time */
 143:Core/Src/main.c ****   platform_delay(100);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   // IMU CONFIGURATION
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   //set SPI as 3 wire communication
 148:Core/Src/main.c ****   lsm6dsm_spi_mode_set(&dev_ctx,LSM6DSM_SPI_3_WIRE);
 149:Core/Src/main.c ****   //set auto increment to read several register at same time
 150:Core/Src/main.c ****   lsm6dsm_auto_increment_set(&dev_ctx, 1);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* Check device ID */
 153:Core/Src/main.c ****   lsm6dsm_device_id_get(&dev_ctx, &whoamI);
 154:Core/Src/main.c ****   
 155:Core/Src/main.c ****   if (whoamI != LSM6DSM_ID)
 156:Core/Src/main.c ****     while (1) {
 157:Core/Src/main.c ****       /* manage here device not found */
 158:Core/Src/main.c ****     }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* Restore default configuration */
 161:Core/Src/main.c ****   // you should not call this function because it will give uncorrect output register value
 162:Core/Src/main.c ****   //lsm6dsm_reset_set(&dev_ctx, PROPERTY_ENABLE);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   do {
 165:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 166:Core/Src/main.c ****   } while (rst);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /*  Enable Block Data Update */
 169:Core/Src/main.c ****   lsm6dsm_block_data_update_set(&dev_ctx, PROPERTY_ENABLE);
 170:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 171:Core/Src/main.c ****   lsm6dsm_xl_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_6k66Hz);
 172:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_6k66Hz);
 173:Core/Src/main.c ****   /* Set full scale */
 174:Core/Src/main.c ****   lsm6dsm_xl_full_scale_set(&dev_ctx, LSM6DSM_2g);
 175:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 176:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 177:Core/Src/main.c ****    * Accelerometer - analog filter
 178:Core/Src/main.c ****    */
 179:Core/Src/main.c ****   lsm6dsm_xl_filter_analog_set(&dev_ctx, LSM6DSM_XL_ANA_BW_400Hz);
 180:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 181:Core/Src/main.c ****   //lsm6dsm_xl_lp1_bandwidth_set(&dev_ctx, LSM6DSM_XL_LP1_ODR_DIV_4);
 182:Core/Src/main.c ****   /* Accelerometer - LPF1 + LPF2 path */
 183:Core/Src/main.c ****   lsm6dsm_xl_lp2_bandwidth_set(&dev_ctx,
 184:Core/Src/main.c ****                                LSM6DSM_XL_LOW_LAT_LP_ODR_DIV_400);
 185:Core/Src/main.c ****   /* Accelerometer - High Pass / Slope path */
 186:Core/Src/main.c ****   //lsm6dsm_xl_reference_mode_set(&dev_ctx, PROPERTY_DISABLE);
 187:Core/Src/main.c ****   //lsm6dsm_xl_hp_bandwidth_set(&dev_ctx, LSM6DSM_XL_HP_ODR_DIV_100);
 188:Core/Src/main.c ****   /* Gyroscope - filtering chain */
 189:Core/Src/main.c ****   lsm6dsm_gy_band_pass_set(&dev_ctx, LSM6DSM_HP_DISABLE_LP1_AGGRESSIVE);
 190:Core/Src/main.c ****   // update the offset bias of acceleration
 191:Core/Src/main.c ****   //create a while loop that gets 5 sample of acceleration and calculate the average, then set the 
 192:Core/Src/main.c ****   int16_t acc_bias[3] = {0, 0, 0};
 193:Core/Src/main.c ****   for (int i = 0; i < 10; i++) {
 194:Core/Src/main.c ****     lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 195:Core/Src/main.c ****     acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 196:Core/Src/main.c ****     acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 197:Core/Src/main.c ****     acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 198:Core/Src/main.c ****     platform_delay(100);
 199:Core/Src/main.c ****   } 
 200:Core/Src/main.c ****   acc_bias[0] /= 10;
 201:Core/Src/main.c ****   acc_bias[1] /= 10;
 202:Core/Src/main.c ****   acc_bias[2] /= 10;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   // lsm6dsm_xl_usr_offset_set(&dev_ctx, (uint8_t*)acc_bias);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   // do the same for gyro
 207:Core/Src/main.c ****   int16_t gyro_bias[3] = {0, 0, 0};
 208:Core/Src/main.c ****   int i = 0;
 209:Core/Src/main.c ****   do {
 210:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 211:Core/Src/main.c **** 	    /* Read output only if new value is available */
 212:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 213:Core/Src/main.c ****       if (reg.status_reg.gda) {
 214:Core/Src/main.c ****         /* Read angular rate field data */
 215:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 216:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 217:Core/Src/main.c ****         gyro_bias[0] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 218:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 219:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 220:Core/Src/main.c ****         platform_delay(100);
 221:Core/Src/main.c ****         i++;
 222:Core/Src/main.c ****       }
 223:Core/Src/main.c ****   } while (i < 10);
 224:Core/Src/main.c ****   gyro_bias[0] /= (i+1);
 225:Core/Src/main.c ****   gyro_bias[1] /= (i+1);
 226:Core/Src/main.c ****   gyro_bias[2] /= (i+1);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   // LORA MODULE CONFIGURATION
 229:Core/Src/main.c ****   // platform_delay(100);
 230:Core/Src/main.c ****   //   llcc68_set_standby(&radio_ctx, LLCC68_STANDBY_CFG_RC);
 231:Core/Src/main.c ****   //   llcc68_set_pkt_type(&radio_ctx, LLCC68_PKT_TYPE_LORA);
 232:Core/Src/main.c ****   //   llcc68_set_rf_freq(&radio_ctx, 433000000);
 233:Core/Src/main.c ****   //   // // 17dBm
 234:Core/Src/main.c ****   //   // // {0x03, 0x05, 0x00, 0x01}
 235:Core/Src/main.c ****   //   const llcc68_pa_cfg_params_t pa_cfg = {0x03,
 236:Core/Src/main.c ****   //     0x05,
 237:Core/Src/main.c ****   //    0x00,
 238:Core/Src/main.c ****   //     0x01
 239:Core/Src/main.c ****   //   };
 240:Core/Src/main.c ****   //   const llcc68_pkt_params_lora_t pkt_params = {14, LLCC68_LORA_PKT_EXPLICIT, 14, true, false};
 241:Core/Src/main.c ****   //   const llcc68_mod_params_lora_t mod_params = {LLCC68_LORA_SF11, LLCC68_LORA_BW_250, LLCC68_LO
 242:Core/Src/main.c ****   //   llcc68_set_pa_cfg(&radio_ctx, (llcc68_pa_cfg_params_t*) &pa_cfg);
 243:Core/Src/main.c ****   //   // //The output power is defined as power in dBm in a range of - 9 (0xF7) to +22 (0x16) dBm 
 244:Core/Src/main.c ****   //   llcc68_set_tx_params(&radio_ctx, 0x16, LLCC68_RAMP_200_US);
 245:Core/Src/main.c ****   //    platform_delay(100);
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE END 2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* Infinite loop */
 250:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 251:Core/Src/main.c ****   while (1)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t*)"Hello World!\r\n", 14, 1000);
 254:Core/Src/main.c ****     // TEMPERATURE SENSOR INIT
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     // if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) == HAL_OK) {
 257:Core/Src/main.c ****     //   if (HAL_I2C_Master_Transmit(&hi2c1, 0x41 << 1, (uint8_t*)0xBC, 2, 1000) == HAL_OK) {
 258:Core/Src/main.c ****     //     uint8_t tempData[3];
 259:Core/Src/main.c ****     //     if (HAL_I2C_Master_Receive(&hi2c1, 0x41 << 1, &tempData, 3, 1000) == HAL_OK) {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 6


 260:Core/Src/main.c ****     //       temp = (int16_t)((tempData[1] << 8) | tempData[0]);
 261:Core/Src/main.c ****     //       float tempFloat = ((float)temp/256.0f)+25.0f;
 262:Core/Src/main.c ****     //       printf("Temperature: %.3f\r\n", tempFloat);
 263:Core/Src/main.c ****     //     }
 264:Core/Src/main.c ****     //   }
 265:Core/Src/main.c ****     // }
 266:Core/Src/main.c ****     /* USER CODE END WHILE */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 269:Core/Src/main.c ****      lsm6dsm_reg_t reg;
 270:Core/Src/main.c **** 	    /* Read output only if new value is available */
 271:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** 	    if (reg.status_reg.xlda) {
 274:Core/Src/main.c **** 	      /* Read acceleration field data */
 275:Core/Src/main.c **** 	      memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 276:Core/Src/main.c **** 	      lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 277:Core/Src/main.c **** 	      acceleration_mg[0] =
 278:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]) - acc_bias[0];
 279:Core/Src/main.c **** 	      acceleration_mg[1] =
 280:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]) - acc_bias[1];
 281:Core/Src/main.c **** 	      acceleration_mg[2] =
 282:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]) - acc_bias[2];
 283:Core/Src/main.c **** 	      // printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 284:Core/Src/main.c **** 	      //         acceleration_mg[0], acceleration_mg[1], acceleration_mg[2]);
 285:Core/Src/main.c ****         printf("%4.2f,%4.2f,%4.2f,", acceleration_mg[0], acceleration_mg[1], acceleration_mg[2]);
 286:Core/Src/main.c **** 	    }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** 	    if (reg.status_reg.gda) {
 289:Core/Src/main.c **** 	      /* Read angular rate field data */
 290:Core/Src/main.c **** 	      memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 291:Core/Src/main.c **** 	      lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 292:Core/Src/main.c **** 	      angular_rate_mdps[0] =
 293:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]) - gyro_bias[0];
 294:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 295:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]) - gyro_bias[1];
 296:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 297:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]) - gyro_bias[2];
 298:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 299:Core/Src/main.c **** 	      printf("%4.2f,%4.2f,%4.2f,", angular_rate_mdps[0], angular_rate_mdps[1], angular_rate_mdps[2
 300:Core/Src/main.c **** 	    }
 301:Core/Src/main.c **** 	    if (reg.status_reg.tda) {
 302:Core/Src/main.c **** 	      /* Read temperature data */
 303:Core/Src/main.c **** 	      memset(&data_raw_temperature, 0x00, sizeof(int16_t));
 304:Core/Src/main.c **** 	      lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 305:Core/Src/main.c **** 	      temperature_degC = lsm6dsm_from_lsb_to_celsius(
 306:Core/Src/main.c **** 	                           data_raw_temperature);
 307:Core/Src/main.c **** 	      // printf("Temperature [degC]:%6.2f\r\n",
 308:Core/Src/main.c **** 	      //         temperature_degC);
 309:Core/Src/main.c ****         printf("%.2f,25.25\r\n", temperature_degC);
 310:Core/Src/main.c **** 	    }
 311:Core/Src/main.c ****     //   llcc68_set_buffer_base_address(&radio_ctx, 0x00, 0x00);
 312:Core/Src/main.c ****     // llcc68_write_buffer(&radio_ctx, 0x00, (uint8_t*)"Hello World!\r\n", 14);
 313:Core/Src/main.c ****     // llcc68_set_lora_mod_params(&radio_ctx, &mod_params);
 314:Core/Src/main.c ****     // llcc68_set_lora_pkt_params(&radio_ctx, &pkt_params);
 315:Core/Src/main.c ****     // llcc68_set_dio_irq_params(&radio_ctx, LLCC68_IRQ_TX_DONE | LLCC68_IRQ_RX_DONE, LLCC68_IRQ_TX
 316:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 7


 317:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C0, (uint8_t)0x12, 1);
 318:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C1, (uint8_t)0x23, 1);
 319:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C2, (uint8_t)0x34, 1);
 320:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C3, (uint8_t)0x45, 1);
 321:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C4, (uint8_t)0x56, 1);
 322:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C5, (uint8_t)0x67, 1);
 323:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C6, (uint8_t)0x78, 1);
 324:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C7, (uint8_t)0x89, 1);
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****     // llcc68_set_tx(&radio_ctx, 0);
 327:Core/Src/main.c ****     //   llcc68_chip_status_t chip_status;
 328:Core/Src/main.c ****     //   llcc68_status_t lora_status = llcc68_get_status(&radio_ctx, &chip_status);
 329:Core/Src/main.c ****     //   printf("LoRa Status: %d, Chip Status: %d\r\n", lora_status, chip_status.cmd_status);
 330:Core/Src/main.c ****     //  llcc68_set_standby(&radio_ctx, LLCC68_STANDBY_CFG_RC);
 331:Core/Src/main.c ****     //  ///print if busy or not with busy gpio pin
 332:Core/Src/main.c ****     //  HAL_GPIO_ReadPin(BUSY_GPIO_Port, BUSY_Pin) == GPIO_PIN_SET ? printf("Busy\r\n") : printf("N
 333:Core/Src/main.c ****       platform_delay(100);
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c ****   /* USER CODE END 3 */
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /**
 339:Core/Src/main.c ****   * @brief System Clock Configuration
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** void SystemClock_Config(void)
 343:Core/Src/main.c **** {
 344:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 345:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 350:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 353:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 356:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 357:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 358:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 359:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 360:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 361:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 362:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 363:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 364:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 365:Core/Src/main.c ****   {
 366:Core/Src/main.c ****     Error_Handler();
 367:Core/Src/main.c ****   }
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 370:Core/Src/main.c ****   */
 371:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 372:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 373:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 8


 374:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 375:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 376:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     Error_Handler();
 381:Core/Src/main.c ****   }
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /**
 385:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 386:Core/Src/main.c ****   * @param None
 387:Core/Src/main.c ****   * @retval None
 388:Core/Src/main.c ****   */
 389:Core/Src/main.c **** static void MX_I2C1_Init(void)
 390:Core/Src/main.c **** {
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 399:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 400:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 401:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 402:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 403:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 404:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 405:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 406:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 407:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 408:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 413:Core/Src/main.c ****     if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) != HAL_OK) {
 414:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 415:Core/Src/main.c ****     } else {
 416:Core/Src/main.c ****       HAL_I2C_Mem_Write(&hi2c1, 0x41 << 1, 0x04, 1, (uint8_t*)0x00, 1, 1000);
 417:Core/Src/main.c ****     }
 418:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** }
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /**
 423:Core/Src/main.c ****   * @brief SDIO Initialization Function
 424:Core/Src/main.c ****   * @param None
 425:Core/Src/main.c ****   * @retval None
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 428:Core/Src/main.c **** {
  28              		.loc 1 428 1 view -0
  29              		.cfi_startproc
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 9


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 437:Core/Src/main.c ****   hsd.Instance = SDIO;
  33              		.loc 1 437 3 view .LVU1
  34              		.loc 1 437 16 is_stmt 0 view .LVU2
  35 0000 054B     		ldr	r3, .L2
  36 0002 064A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 438:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  38              		.loc 1 438 3 is_stmt 1 view .LVU3
  39              		.loc 1 438 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 439:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 439 3 is_stmt 1 view .LVU5
  43              		.loc 1 439 24 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 440:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 440 3 is_stmt 1 view .LVU7
  46              		.loc 1 440 27 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 441:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  48              		.loc 1 441 3 is_stmt 1 view .LVU9
  49              		.loc 1 441 20 is_stmt 0 view .LVU10
  50 000e 1A61     		str	r2, [r3, #16]
 442:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  51              		.loc 1 442 3 is_stmt 1 view .LVU11
  52              		.loc 1 442 32 is_stmt 0 view .LVU12
  53 0010 5A61     		str	r2, [r3, #20]
 443:Core/Src/main.c ****   hsd.Init.ClockDiv = 0;
  54              		.loc 1 443 3 is_stmt 1 view .LVU13
  55              		.loc 1 443 21 is_stmt 0 view .LVU14
  56 0012 9A61     		str	r2, [r3, #24]
 444:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** }
  57              		.loc 1 448 1 view .LVU15
  58 0014 7047     		bx	lr
  59              	.L3:
  60 0016 00BF     		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE137:
  67              		.section	.text.llcc68_platform_reset,"ax",%progbits
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 10


  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	llcc68_platform_reset:
  74              	.LVL0:
  75              	.LFB144:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /**
 451:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 452:Core/Src/main.c ****   * @param None
 453:Core/Src/main.c ****   * @retval None
 454:Core/Src/main.c ****   */
 455:Core/Src/main.c **** static void MX_SPI1_Init(void)
 456:Core/Src/main.c **** {
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 465:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 466:Core/Src/main.c ****   hspi1.Instance = SPI1;
 467:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 468:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 469:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 470:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 471:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 472:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 473:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 474:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 475:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 476:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 477:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 478:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****     Error_Handler();
 481:Core/Src/main.c ****   }
 482:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** }
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** /**
 489:Core/Src/main.c ****   * @brief USART1 Initialization Function
 490:Core/Src/main.c ****   * @param None
 491:Core/Src/main.c ****   * @retval None
 492:Core/Src/main.c ****   */
 493:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 494:Core/Src/main.c **** {
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 11


 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 503:Core/Src/main.c ****   huart1.Instance = USART1;
 504:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 505:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 506:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 507:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 508:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 509:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 510:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 511:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 512:Core/Src/main.c ****   {
 513:Core/Src/main.c ****     Error_Handler();
 514:Core/Src/main.c ****   }
 515:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** }
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** /**
 522:Core/Src/main.c ****   * @brief GPIO Initialization Function
 523:Core/Src/main.c ****   * @param None
 524:Core/Src/main.c ****   * @retval None
 525:Core/Src/main.c ****   */
 526:Core/Src/main.c **** static void MX_GPIO_Init(void)
 527:Core/Src/main.c **** {
 528:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 529:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 530:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 533:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 534:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 535:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 536:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 537:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 540:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin, GPIO_PIN_RESET);
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 543:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin, GPIO_PIN_RESET);
 544:Core/Src/main.c **** 
 545:Core/Src/main.c ****   /*Configure GPIO pins : PARACHUTE_Pin MOTOR_X_Pin MOTOR_Y_Pin RF_RESET_Pin */
 546:Core/Src/main.c ****   GPIO_InitStruct.Pin = PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin;
 547:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 548:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 549:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 550:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /*Configure GPIO pins : IMU_INT_Pin PRESSURE_INT_Pin */
 553:Core/Src/main.c ****   GPIO_InitStruct.Pin = IMU_INT_Pin|PRESSURE_INT_Pin;
 554:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 555:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 12


 556:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 557:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 558:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /*Configure GPIO pin : SD_CD_Pin */
 561:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CD_Pin;
 562:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 563:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 564:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /*Configure GPIO pins : CS_PRESSURE_Pin CS_GYRO_Pin CS_WIRELESS_Pin */
 567:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin;
 568:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 569:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 570:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 571:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /*Configure GPIO pin : BUSY_Pin */
 574:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUSY_Pin;
 575:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 576:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 577:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /*Configure GPIO pin : ANTENNA_IRQ_Pin */
 580:Core/Src/main.c ****   GPIO_InitStruct.Pin = ANTENNA_IRQ_Pin;
 581:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 582:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 583:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 584:Core/Src/main.c **** 
 585:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 586:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 587:Core/Src/main.c **** }
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** int _write(int fd, char* ptr, int len) {
 592:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 593:Core/Src/main.c **** 	return len;
 594:Core/Src/main.c **** }
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** 
 597:Core/Src/main.c **** /*
 598:Core/Src/main.c ****  * @brief  Write generic device register (platform dependent)
 599:Core/Src/main.c ****  *
 600:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 601:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 602:Core/Src/main.c ****  * @param  reg       register to write
 603:Core/Src/main.c ****  * @param  bufp      pointer to data to write in register reg
 604:Core/Src/main.c ****  * @param  len       number of consecutive register to write
 605:Core/Src/main.c ****  *
 606:Core/Src/main.c ****  */
 607:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
 608:Core/Src/main.c ****                               uint16_t len)
 609:Core/Src/main.c **** {
 610:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 611:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 612:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 13


 613:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 614:Core/Src/main.c ****   return 0;
 615:Core/Src/main.c **** }
 616:Core/Src/main.c **** 
 617:Core/Src/main.c **** /*
 618:Core/Src/main.c ****  * @brief  Read generic device register (platform dependent)
 619:Core/Src/main.c ****  *
 620:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 621:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 622:Core/Src/main.c ****  * @param  reg       register to read
 623:Core/Src/main.c ****  * @param  bufp      pointer to buffer that store the data read
 624:Core/Src/main.c ****  * @param  len       number of consecutive register to read
 625:Core/Src/main.c ****  *
 626:Core/Src/main.c ****  */
 627:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
 628:Core/Src/main.c ****                              uint16_t len)
 629:Core/Src/main.c **** {
 630:Core/Src/main.c **** 	  reg |= 0x80;
 631:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 632:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 633:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 634:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 635:Core/Src/main.c ****   return 0;
 636:Core/Src/main.c **** }
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** static int32_t llcc68_platform_reset(void *handle) {
  76              		.loc 1 638 52 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 638 52 is_stmt 0 view .LVU17
  81 0000 10B5     		push	{r4, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
 639:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_RESET);
  85              		.loc 1 639 3 is_stmt 1 view .LVU18
  86 0002 094C     		ldr	r4, .L6
  87 0004 0022     		movs	r2, #0
  88 0006 8021     		movs	r1, #128
  89 0008 2046     		mov	r0, r4
  90              	.LVL1:
  91              		.loc 1 639 3 is_stmt 0 view .LVU19
  92 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL2:
 640:Core/Src/main.c ****   HAL_Delay(1);
  94              		.loc 1 640 3 is_stmt 1 view .LVU20
  95 000e 0120     		movs	r0, #1
  96 0010 FFF7FEFF 		bl	HAL_Delay
  97              	.LVL3:
 641:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_SET);
  98              		.loc 1 641 3 view .LVU21
  99 0014 0122     		movs	r2, #1
 100 0016 8021     		movs	r1, #128
 101 0018 2046     		mov	r0, r4
 102 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL4:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 14


 642:Core/Src/main.c ****   HAL_Delay(1);
 104              		.loc 1 642 3 view .LVU22
 105 001e 0120     		movs	r0, #1
 106 0020 FFF7FEFF 		bl	HAL_Delay
 107              	.LVL5:
 643:Core/Src/main.c ****   return 0;
 108              		.loc 1 643 3 view .LVU23
 644:Core/Src/main.c **** }
 109              		.loc 1 644 1 is_stmt 0 view .LVU24
 110 0024 0020     		movs	r0, #0
 111 0026 10BD     		pop	{r4, pc}
 112              	.L7:
 113              		.align	2
 114              	.L6:
 115 0028 00080240 		.word	1073874944
 116              		.cfi_endproc
 117              	.LFE144:
 119              		.section	.text.platform_delay,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	platform_delay:
 126              	.LVL6:
 127              	.LFB145:
 645:Core/Src/main.c **** 
 646:Core/Src/main.c **** /*
 647:Core/Src/main.c ****  * @brief  platform specific delay (platform dependent)
 648:Core/Src/main.c ****  *
 649:Core/Src/main.c ****  * @param  ms        delay in ms
 650:Core/Src/main.c ****  *
 651:Core/Src/main.c ****  */
 652:Core/Src/main.c **** static void platform_delay(uint32_t ms)
 653:Core/Src/main.c **** {
 128              		.loc 1 653 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		.loc 1 653 1 is_stmt 0 view .LVU26
 133 0000 08B5     		push	{r3, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 654:Core/Src/main.c ****   HAL_Delay(ms);
 137              		.loc 1 654 3 is_stmt 1 view .LVU27
 138 0002 FFF7FEFF 		bl	HAL_Delay
 139              	.LVL7:
 655:Core/Src/main.c **** }
 140              		.loc 1 655 1 is_stmt 0 view .LVU28
 141 0006 08BD     		pop	{r3, pc}
 142              		.cfi_endproc
 143              	.LFE145:
 145              		.section	.text.lsm6dsm_platform_write,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 15


 151              	lsm6dsm_platform_write:
 152              	.LVL8:
 153              	.LFB142:
 609:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 154              		.loc 1 609 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 609:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 158              		.loc 1 609 1 is_stmt 0 view .LVU30
 159 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 160              		.cfi_def_cfa_offset 20
 161              		.cfi_offset 4, -20
 162              		.cfi_offset 5, -16
 163              		.cfi_offset 6, -12
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              		.cfi_def_cfa_offset 32
 168 0004 0446     		mov	r4, r0
 169 0006 1546     		mov	r5, r2
 170 0008 1E46     		mov	r6, r3
 171 000a 8DF80710 		strb	r1, [sp, #7]
 610:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 172              		.loc 1 610 4 is_stmt 1 view .LVU31
 173 000e 0E4F     		ldr	r7, .L12
 174 0010 0022     		movs	r2, #0
 175              	.LVL9:
 610:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 176              		.loc 1 610 4 is_stmt 0 view .LVU32
 177 0012 0821     		movs	r1, #8
 178              	.LVL10:
 610:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 179              		.loc 1 610 4 view .LVU33
 180 0014 3846     		mov	r0, r7
 181              	.LVL11:
 610:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 182              		.loc 1 610 4 view .LVU34
 183 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 184              	.LVL12:
 611:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
 185              		.loc 1 611 4 is_stmt 1 view .LVU35
 186 001a 4FF47A73 		mov	r3, #1000
 187 001e 0122     		movs	r2, #1
 188 0020 0DF10701 		add	r1, sp, #7
 189 0024 2046     		mov	r0, r4
 190 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 191              	.LVL13:
 612:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 192              		.loc 1 612 4 view .LVU36
 193 002a 4FF47A73 		mov	r3, #1000
 194 002e 3246     		mov	r2, r6
 195 0030 2946     		mov	r1, r5
 196 0032 2046     		mov	r0, r4
 197 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 198              	.LVL14:
 613:Core/Src/main.c ****   return 0;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 16


 199              		.loc 1 613 4 view .LVU37
 200 0038 0122     		movs	r2, #1
 201 003a 0821     		movs	r1, #8
 202 003c 3846     		mov	r0, r7
 203 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL15:
 614:Core/Src/main.c **** }
 205              		.loc 1 614 3 view .LVU38
 615:Core/Src/main.c **** 
 206              		.loc 1 615 1 is_stmt 0 view .LVU39
 207 0042 0020     		movs	r0, #0
 208 0044 03B0     		add	sp, sp, #12
 209              		.cfi_def_cfa_offset 20
 210              		@ sp needed
 211 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 212              	.LVL16:
 213              	.L13:
 615:Core/Src/main.c **** 
 214              		.loc 1 615 1 view .LVU40
 215              		.align	2
 216              	.L12:
 217 0048 00000240 		.word	1073872896
 218              		.cfi_endproc
 219              	.LFE142:
 221              		.section	.text.llcc68_platform_write_read,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	llcc68_platform_write_read:
 228              	.LVL17:
 229              	.LFB146:
 656:Core/Src/main.c **** 
 657:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t* command, const uint16_t comm
 658:Core/Src/main.c ****                                      uint8_t* data, const uint16_t data_length ) {
 230              		.loc 1 658 82 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 4, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		.loc 1 658 82 is_stmt 0 view .LVU42
 235 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 236              		.cfi_def_cfa_offset 24
 237              		.cfi_offset 3, -24
 238              		.cfi_offset 4, -20
 239              		.cfi_offset 5, -16
 240              		.cfi_offset 6, -12
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 0E46     		mov	r6, r1
 244 0004 1446     		mov	r4, r2
 245 0006 1D46     		mov	r5, r3
 246 0008 BDF81870 		ldrh	r7, [sp, #24]
 659:Core/Src/main.c ****  uint8_t res;
 247              		.loc 1 659 2 is_stmt 1 view .LVU43
 660:Core/Src/main.c ****     
 661:Core/Src/main.c ****     /* set cs low */
 662:Core/Src/main.c ****     HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 17


 248              		.loc 1 662 5 view .LVU44
 249 000c 0022     		movs	r2, #0
 250              	.LVL18:
 251              		.loc 1 662 5 is_stmt 0 view .LVU45
 252 000e 1021     		movs	r1, #16
 253              	.LVL19:
 254              		.loc 1 662 5 view .LVU46
 255 0010 1548     		ldr	r0, .L21
 256              	.LVL20:
 257              		.loc 1 662 5 view .LVU47
 258 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 259              	.LVL21:
 663:Core/Src/main.c ****     
 664:Core/Src/main.c ****     /* if in_len > 0 */
 665:Core/Src/main.c ****     if (command_length > 0)
 260              		.loc 1 665 5 is_stmt 1 view .LVU48
 261              		.loc 1 665 8 is_stmt 0 view .LVU49
 262 0016 7CB9     		cbnz	r4, .L19
 263              	.L15:
 666:Core/Src/main.c ****     {
 667:Core/Src/main.c ****         /* transmit the input buffer */
 668:Core/Src/main.c ****         res = HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 669:Core/Src/main.c ****         if (res != HAL_OK)
 670:Core/Src/main.c ****         {
 671:Core/Src/main.c ****             /* set cs high */
 672:Core/Src/main.c ****             HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 673:Core/Src/main.c ****            
 674:Core/Src/main.c ****             return 1;
 675:Core/Src/main.c ****         }
 676:Core/Src/main.c ****     }
 677:Core/Src/main.c ****     
 678:Core/Src/main.c ****     /* if out_len > 0 */
 679:Core/Src/main.c ****     if (data_length > 0)
 264              		.loc 1 679 5 is_stmt 1 view .LVU50
 265              		.loc 1 679 8 is_stmt 0 view .LVU51
 266 0018 3FB1     		cbz	r7, .L17
 680:Core/Src/main.c ****     {
 681:Core/Src/main.c ****         /* transmit to the output buffer */
 682:Core/Src/main.c ****         res = HAL_SPI_Receive(&hspi1, data, data_length, 1000);
 267              		.loc 1 682 9 is_stmt 1 view .LVU52
 268              		.loc 1 682 15 is_stmt 0 view .LVU53
 269 001a 4FF47A73 		mov	r3, #1000
 270 001e 3A46     		mov	r2, r7
 271 0020 2946     		mov	r1, r5
 272 0022 1248     		ldr	r0, .L21+4
 273 0024 FFF7FEFF 		bl	HAL_SPI_Receive
 274              	.LVL22:
 683:Core/Src/main.c ****         if (res != HAL_OK)
 275              		.loc 1 683 9 is_stmt 1 view .LVU54
 276              		.loc 1 683 12 is_stmt 0 view .LVU55
 277 0028 B0B9     		cbnz	r0, .L20
 278              	.LVL23:
 279              	.L17:
 684:Core/Src/main.c ****         {
 685:Core/Src/main.c ****             /* set cs high */
 686:Core/Src/main.c ****             HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 687:Core/Src/main.c ****            
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 18


 688:Core/Src/main.c ****             return 1;
 689:Core/Src/main.c ****         }
 690:Core/Src/main.c ****     }
 691:Core/Src/main.c ****     
 692:Core/Src/main.c ****     /* set cs high */
 693:Core/Src/main.c ****     HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 280              		.loc 1 693 5 is_stmt 1 view .LVU56
 281 002a 0122     		movs	r2, #1
 282 002c 1021     		movs	r1, #16
 283 002e 0E48     		ldr	r0, .L21
 284 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL24:
 694:Core/Src/main.c ****     
 695:Core/Src/main.c ****     return 0;
 286              		.loc 1 695 5 view .LVU57
 287              		.loc 1 695 12 is_stmt 0 view .LVU58
 288 0034 0020     		movs	r0, #0
 289              	.L14:
 696:Core/Src/main.c ****                                      }
 290              		.loc 1 696 38 view .LVU59
 291 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 292              	.LVL25:
 293              	.L19:
 668:Core/Src/main.c ****         if (res != HAL_OK)
 294              		.loc 1 668 9 is_stmt 1 view .LVU60
 668:Core/Src/main.c ****         if (res != HAL_OK)
 295              		.loc 1 668 15 is_stmt 0 view .LVU61
 296 0038 4FF47A73 		mov	r3, #1000
 297 003c 2246     		mov	r2, r4
 298 003e 3146     		mov	r1, r6
 299 0040 0A48     		ldr	r0, .L21+4
 300 0042 FFF7FEFF 		bl	HAL_SPI_Transmit
 301              	.LVL26:
 669:Core/Src/main.c ****         {
 302              		.loc 1 669 9 is_stmt 1 view .LVU62
 669:Core/Src/main.c ****         {
 303              		.loc 1 669 12 is_stmt 0 view .LVU63
 304 0046 0028     		cmp	r0, #0
 305 0048 E6D0     		beq	.L15
 672:Core/Src/main.c ****            
 306              		.loc 1 672 13 is_stmt 1 view .LVU64
 307 004a 0122     		movs	r2, #1
 308 004c 1021     		movs	r1, #16
 309 004e 0648     		ldr	r0, .L21
 310              	.LVL27:
 672:Core/Src/main.c ****            
 311              		.loc 1 672 13 is_stmt 0 view .LVU65
 312 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 313              	.LVL28:
 674:Core/Src/main.c ****         }
 314              		.loc 1 674 13 is_stmt 1 view .LVU66
 674:Core/Src/main.c ****         }
 315              		.loc 1 674 20 is_stmt 0 view .LVU67
 316 0054 0120     		movs	r0, #1
 317 0056 EEE7     		b	.L14
 318              	.LVL29:
 319              	.L20:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 19


 686:Core/Src/main.c ****            
 320              		.loc 1 686 13 is_stmt 1 view .LVU68
 321 0058 0122     		movs	r2, #1
 322 005a 1021     		movs	r1, #16
 323 005c 0248     		ldr	r0, .L21
 324              	.LVL30:
 686:Core/Src/main.c ****            
 325              		.loc 1 686 13 is_stmt 0 view .LVU69
 326 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 327              	.LVL31:
 688:Core/Src/main.c ****         }
 328              		.loc 1 688 13 is_stmt 1 view .LVU70
 688:Core/Src/main.c ****         }
 329              		.loc 1 688 20 is_stmt 0 view .LVU71
 330 0062 0120     		movs	r0, #1
 331 0064 E7E7     		b	.L14
 332              	.L22:
 333 0066 00BF     		.align	2
 334              	.L21:
 335 0068 00000240 		.word	1073872896
 336 006c 00000000 		.word	hspi1
 337              		.cfi_endproc
 338              	.LFE146:
 340              		.section	.text.lsm6dsm_platform_read,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	lsm6dsm_platform_read:
 347              	.LVL32:
 348              	.LFB143:
 629:Core/Src/main.c **** 	  reg |= 0x80;
 349              		.loc 1 629 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 629:Core/Src/main.c **** 	  reg |= 0x80;
 353              		.loc 1 629 1 is_stmt 0 view .LVU73
 354 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 355              		.cfi_def_cfa_offset 20
 356              		.cfi_offset 4, -20
 357              		.cfi_offset 5, -16
 358              		.cfi_offset 6, -12
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 83B0     		sub	sp, sp, #12
 362              		.cfi_def_cfa_offset 32
 363 0004 0446     		mov	r4, r0
 364 0006 1546     		mov	r5, r2
 365 0008 1E46     		mov	r6, r3
 366 000a 8DF80710 		strb	r1, [sp, #7]
 630:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 367              		.loc 1 630 4 is_stmt 1 view .LVU74
 630:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 368              		.loc 1 630 8 is_stmt 0 view .LVU75
 369 000e CBB2     		uxtb	r3, r1
 370              	.LVL33:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 20


 630:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 371              		.loc 1 630 8 view .LVU76
 372 0010 63F07F03 		orn	r3, r3, #127
 373 0014 8DF80730 		strb	r3, [sp, #7]
 631:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 374              		.loc 1 631 4 is_stmt 1 view .LVU77
 375 0018 0E4F     		ldr	r7, .L25
 376 001a 0022     		movs	r2, #0
 377              	.LVL34:
 631:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 378              		.loc 1 631 4 is_stmt 0 view .LVU78
 379 001c 0821     		movs	r1, #8
 380              	.LVL35:
 631:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 381              		.loc 1 631 4 view .LVU79
 382 001e 3846     		mov	r0, r7
 383              	.LVL36:
 631:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 384              		.loc 1 631 4 view .LVU80
 385 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL37:
 632:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 387              		.loc 1 632 4 is_stmt 1 view .LVU81
 388 0024 4FF47A73 		mov	r3, #1000
 389 0028 0122     		movs	r2, #1
 390 002a 0DF10701 		add	r1, sp, #7
 391 002e 2046     		mov	r0, r4
 392 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 393              	.LVL38:
 633:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 394              		.loc 1 633 4 view .LVU82
 395 0034 4FF47A73 		mov	r3, #1000
 396 0038 3246     		mov	r2, r6
 397 003a 2946     		mov	r1, r5
 398 003c 2046     		mov	r0, r4
 399 003e FFF7FEFF 		bl	HAL_SPI_Receive
 400              	.LVL39:
 634:Core/Src/main.c ****   return 0;
 401              		.loc 1 634 4 view .LVU83
 402 0042 0122     		movs	r2, #1
 403 0044 0821     		movs	r1, #8
 404 0046 3846     		mov	r0, r7
 405 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL40:
 635:Core/Src/main.c **** }
 407              		.loc 1 635 3 view .LVU84
 636:Core/Src/main.c **** 
 408              		.loc 1 636 1 is_stmt 0 view .LVU85
 409 004c 0020     		movs	r0, #0
 410 004e 03B0     		add	sp, sp, #12
 411              		.cfi_def_cfa_offset 20
 412              		@ sp needed
 413 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 414              	.LVL41:
 415              	.L26:
 636:Core/Src/main.c **** 
 416              		.loc 1 636 1 view .LVU86
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 21


 417 0052 00BF     		.align	2
 418              	.L25:
 419 0054 00000240 		.word	1073872896
 420              		.cfi_endproc
 421              	.LFE143:
 423              		.section	.text.MX_GPIO_Init,"ax",%progbits
 424              		.align	1
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	MX_GPIO_Init:
 430              	.LFB140:
 527:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 431              		.loc 1 527 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 40
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 436              		.cfi_def_cfa_offset 24
 437              		.cfi_offset 4, -24
 438              		.cfi_offset 5, -20
 439              		.cfi_offset 6, -16
 440              		.cfi_offset 7, -12
 441              		.cfi_offset 8, -8
 442              		.cfi_offset 14, -4
 443 0004 8AB0     		sub	sp, sp, #40
 444              		.cfi_def_cfa_offset 64
 528:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 445              		.loc 1 528 3 view .LVU88
 528:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 446              		.loc 1 528 20 is_stmt 0 view .LVU89
 447 0006 0024     		movs	r4, #0
 448 0008 0594     		str	r4, [sp, #20]
 449 000a 0694     		str	r4, [sp, #24]
 450 000c 0794     		str	r4, [sp, #28]
 451 000e 0894     		str	r4, [sp, #32]
 452 0010 0994     		str	r4, [sp, #36]
 533:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 453              		.loc 1 533 3 is_stmt 1 view .LVU90
 454              	.LBB4:
 533:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 455              		.loc 1 533 3 view .LVU91
 456 0012 0094     		str	r4, [sp]
 533:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 457              		.loc 1 533 3 view .LVU92
 458 0014 3D4B     		ldr	r3, .L29
 459 0016 1A6B     		ldr	r2, [r3, #48]
 460 0018 42F08002 		orr	r2, r2, #128
 461 001c 1A63     		str	r2, [r3, #48]
 533:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 462              		.loc 1 533 3 view .LVU93
 463 001e 1A6B     		ldr	r2, [r3, #48]
 464 0020 02F08002 		and	r2, r2, #128
 465 0024 0092     		str	r2, [sp]
 533:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 466              		.loc 1 533 3 view .LVU94
 467 0026 009A     		ldr	r2, [sp]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 22


 468              	.LBE4:
 533:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 469              		.loc 1 533 3 view .LVU95
 534:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 470              		.loc 1 534 3 view .LVU96
 471              	.LBB5:
 534:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 472              		.loc 1 534 3 view .LVU97
 473 0028 0194     		str	r4, [sp, #4]
 534:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 474              		.loc 1 534 3 view .LVU98
 475 002a 1A6B     		ldr	r2, [r3, #48]
 476 002c 42F00402 		orr	r2, r2, #4
 477 0030 1A63     		str	r2, [r3, #48]
 534:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 478              		.loc 1 534 3 view .LVU99
 479 0032 1A6B     		ldr	r2, [r3, #48]
 480 0034 02F00402 		and	r2, r2, #4
 481 0038 0192     		str	r2, [sp, #4]
 534:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 482              		.loc 1 534 3 view .LVU100
 483 003a 019A     		ldr	r2, [sp, #4]
 484              	.LBE5:
 534:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 485              		.loc 1 534 3 view .LVU101
 535:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 486              		.loc 1 535 3 view .LVU102
 487              	.LBB6:
 535:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 488              		.loc 1 535 3 view .LVU103
 489 003c 0294     		str	r4, [sp, #8]
 535:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 490              		.loc 1 535 3 view .LVU104
 491 003e 1A6B     		ldr	r2, [r3, #48]
 492 0040 42F00102 		orr	r2, r2, #1
 493 0044 1A63     		str	r2, [r3, #48]
 535:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 494              		.loc 1 535 3 view .LVU105
 495 0046 1A6B     		ldr	r2, [r3, #48]
 496 0048 02F00102 		and	r2, r2, #1
 497 004c 0292     		str	r2, [sp, #8]
 535:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 498              		.loc 1 535 3 view .LVU106
 499 004e 029A     		ldr	r2, [sp, #8]
 500              	.LBE6:
 535:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 501              		.loc 1 535 3 view .LVU107
 536:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 502              		.loc 1 536 3 view .LVU108
 503              	.LBB7:
 536:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 504              		.loc 1 536 3 view .LVU109
 505 0050 0394     		str	r4, [sp, #12]
 536:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 506              		.loc 1 536 3 view .LVU110
 507 0052 1A6B     		ldr	r2, [r3, #48]
 508 0054 42F00802 		orr	r2, r2, #8
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 23


 509 0058 1A63     		str	r2, [r3, #48]
 536:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 510              		.loc 1 536 3 view .LVU111
 511 005a 1A6B     		ldr	r2, [r3, #48]
 512 005c 02F00802 		and	r2, r2, #8
 513 0060 0392     		str	r2, [sp, #12]
 536:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 514              		.loc 1 536 3 view .LVU112
 515 0062 039A     		ldr	r2, [sp, #12]
 516              	.LBE7:
 536:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 517              		.loc 1 536 3 view .LVU113
 537:Core/Src/main.c **** 
 518              		.loc 1 537 3 view .LVU114
 519              	.LBB8:
 537:Core/Src/main.c **** 
 520              		.loc 1 537 3 view .LVU115
 521 0064 0494     		str	r4, [sp, #16]
 537:Core/Src/main.c **** 
 522              		.loc 1 537 3 view .LVU116
 523 0066 1A6B     		ldr	r2, [r3, #48]
 524 0068 42F00202 		orr	r2, r2, #2
 525 006c 1A63     		str	r2, [r3, #48]
 537:Core/Src/main.c **** 
 526              		.loc 1 537 3 view .LVU117
 527 006e 1B6B     		ldr	r3, [r3, #48]
 528 0070 03F00203 		and	r3, r3, #2
 529 0074 0493     		str	r3, [sp, #16]
 537:Core/Src/main.c **** 
 530              		.loc 1 537 3 view .LVU118
 531 0076 049B     		ldr	r3, [sp, #16]
 532              	.LBE8:
 537:Core/Src/main.c **** 
 533              		.loc 1 537 3 view .LVU119
 540:Core/Src/main.c **** 
 534              		.loc 1 540 3 view .LVU120
 535 0078 254D     		ldr	r5, .L29+4
 536 007a 2246     		mov	r2, r4
 537 007c 8721     		movs	r1, #135
 538 007e 2846     		mov	r0, r5
 539 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 540              	.LVL42:
 543:Core/Src/main.c **** 
 541              		.loc 1 543 3 view .LVU121
 542 0084 234E     		ldr	r6, .L29+8
 543 0086 2246     		mov	r2, r4
 544 0088 1C21     		movs	r1, #28
 545 008a 3046     		mov	r0, r6
 546 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 547              	.LVL43:
 546:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 548              		.loc 1 546 3 view .LVU122
 546:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 549              		.loc 1 546 23 is_stmt 0 view .LVU123
 550 0090 8723     		movs	r3, #135
 551 0092 0593     		str	r3, [sp, #20]
 547:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 24


 552              		.loc 1 547 3 is_stmt 1 view .LVU124
 547:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 553              		.loc 1 547 24 is_stmt 0 view .LVU125
 554 0094 0127     		movs	r7, #1
 555 0096 0697     		str	r7, [sp, #24]
 548:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 556              		.loc 1 548 3 is_stmt 1 view .LVU126
 548:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 557              		.loc 1 548 24 is_stmt 0 view .LVU127
 558 0098 0794     		str	r4, [sp, #28]
 549:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 559              		.loc 1 549 3 is_stmt 1 view .LVU128
 549:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 560              		.loc 1 549 25 is_stmt 0 view .LVU129
 561 009a 0894     		str	r4, [sp, #32]
 550:Core/Src/main.c **** 
 562              		.loc 1 550 3 is_stmt 1 view .LVU130
 563 009c 05A9     		add	r1, sp, #20
 564 009e 2846     		mov	r0, r5
 565 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL44:
 553:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 567              		.loc 1 553 3 view .LVU131
 553:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 568              		.loc 1 553 23 is_stmt 0 view .LVU132
 569 00a4 4823     		movs	r3, #72
 570 00a6 0593     		str	r3, [sp, #20]
 554:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 571              		.loc 1 554 3 is_stmt 1 view .LVU133
 554:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 554 24 is_stmt 0 view .LVU134
 573 00a8 4FF00208 		mov	r8, #2
 574 00ac CDF81880 		str	r8, [sp, #24]
 555:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 575              		.loc 1 555 3 is_stmt 1 view .LVU135
 555:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 576              		.loc 1 555 24 is_stmt 0 view .LVU136
 577 00b0 0794     		str	r4, [sp, #28]
 556:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 578              		.loc 1 556 3 is_stmt 1 view .LVU137
 556:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 579              		.loc 1 556 25 is_stmt 0 view .LVU138
 580 00b2 0894     		str	r4, [sp, #32]
 557:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 581              		.loc 1 557 3 is_stmt 1 view .LVU139
 557:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 582              		.loc 1 557 29 is_stmt 0 view .LVU140
 583 00b4 0F23     		movs	r3, #15
 584 00b6 0993     		str	r3, [sp, #36]
 558:Core/Src/main.c **** 
 585              		.loc 1 558 3 is_stmt 1 view .LVU141
 586 00b8 05A9     		add	r1, sp, #20
 587 00ba 2846     		mov	r0, r5
 588 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 589              	.LVL45:
 561:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 590              		.loc 1 561 3 view .LVU142
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 25


 561:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 591              		.loc 1 561 23 is_stmt 0 view .LVU143
 592 00c0 CDF81480 		str	r8, [sp, #20]
 562:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 593              		.loc 1 562 3 is_stmt 1 view .LVU144
 562:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 594              		.loc 1 562 24 is_stmt 0 view .LVU145
 595 00c4 0694     		str	r4, [sp, #24]
 563:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 596              		.loc 1 563 3 is_stmt 1 view .LVU146
 563:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 597              		.loc 1 563 24 is_stmt 0 view .LVU147
 598 00c6 0794     		str	r4, [sp, #28]
 564:Core/Src/main.c **** 
 599              		.loc 1 564 3 is_stmt 1 view .LVU148
 600 00c8 05A9     		add	r1, sp, #20
 601 00ca 3046     		mov	r0, r6
 602 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 603              	.LVL46:
 567:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 604              		.loc 1 567 3 view .LVU149
 567:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 605              		.loc 1 567 23 is_stmt 0 view .LVU150
 606 00d0 1C23     		movs	r3, #28
 607 00d2 0593     		str	r3, [sp, #20]
 568:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 608              		.loc 1 568 3 is_stmt 1 view .LVU151
 568:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 609              		.loc 1 568 24 is_stmt 0 view .LVU152
 610 00d4 0697     		str	r7, [sp, #24]
 569:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 611              		.loc 1 569 3 is_stmt 1 view .LVU153
 569:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 612              		.loc 1 569 24 is_stmt 0 view .LVU154
 613 00d6 0794     		str	r4, [sp, #28]
 570:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 614              		.loc 1 570 3 is_stmt 1 view .LVU155
 570:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 615              		.loc 1 570 25 is_stmt 0 view .LVU156
 616 00d8 0894     		str	r4, [sp, #32]
 571:Core/Src/main.c **** 
 617              		.loc 1 571 3 is_stmt 1 view .LVU157
 618 00da 05A9     		add	r1, sp, #20
 619 00dc 3046     		mov	r0, r6
 620 00de FFF7FEFF 		bl	HAL_GPIO_Init
 621              	.LVL47:
 574:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 622              		.loc 1 574 3 view .LVU158
 574:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 623              		.loc 1 574 23 is_stmt 0 view .LVU159
 624 00e2 1023     		movs	r3, #16
 625 00e4 0593     		str	r3, [sp, #20]
 575:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 626              		.loc 1 575 3 is_stmt 1 view .LVU160
 575:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 627              		.loc 1 575 24 is_stmt 0 view .LVU161
 628 00e6 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 26


 576:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 629              		.loc 1 576 3 is_stmt 1 view .LVU162
 576:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 630              		.loc 1 576 24 is_stmt 0 view .LVU163
 631 00e8 0794     		str	r4, [sp, #28]
 577:Core/Src/main.c **** 
 632              		.loc 1 577 3 is_stmt 1 view .LVU164
 633 00ea 05A9     		add	r1, sp, #20
 634 00ec 2846     		mov	r0, r5
 635 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 636              	.LVL48:
 580:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 637              		.loc 1 580 3 view .LVU165
 580:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 638              		.loc 1 580 23 is_stmt 0 view .LVU166
 639 00f2 2023     		movs	r3, #32
 640 00f4 0593     		str	r3, [sp, #20]
 581:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 641              		.loc 1 581 3 is_stmt 1 view .LVU167
 581:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 642              		.loc 1 581 24 is_stmt 0 view .LVU168
 643 00f6 4FF48813 		mov	r3, #1114112
 644 00fa 0693     		str	r3, [sp, #24]
 582:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 645              		.loc 1 582 3 is_stmt 1 view .LVU169
 582:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 646              		.loc 1 582 24 is_stmt 0 view .LVU170
 647 00fc 0794     		str	r4, [sp, #28]
 583:Core/Src/main.c **** 
 648              		.loc 1 583 3 is_stmt 1 view .LVU171
 649 00fe 05A9     		add	r1, sp, #20
 650 0100 2846     		mov	r0, r5
 651 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 652              	.LVL49:
 587:Core/Src/main.c **** 
 653              		.loc 1 587 1 is_stmt 0 view .LVU172
 654 0106 0AB0     		add	sp, sp, #40
 655              		.cfi_def_cfa_offset 24
 656              		@ sp needed
 657 0108 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 658              	.L30:
 659              		.align	2
 660              	.L29:
 661 010c 00380240 		.word	1073887232
 662 0110 00080240 		.word	1073874944
 663 0114 00000240 		.word	1073872896
 664              		.cfi_endproc
 665              	.LFE140:
 667              		.section	.text._write,"ax",%progbits
 668              		.align	1
 669              		.global	_write
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	_write:
 675              	.LVL50:
 676              	.LFB141:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 27


 591:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 677              		.loc 1 591 40 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 591:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 681              		.loc 1 591 40 is_stmt 0 view .LVU174
 682 0000 10B5     		push	{r4, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 4, -8
 685              		.cfi_offset 14, -4
 686 0002 1446     		mov	r4, r2
 592:Core/Src/main.c **** 	return len;
 687              		.loc 1 592 2 is_stmt 1 view .LVU175
 688 0004 6FF07F43 		mvn	r3, #-16777216
 689 0008 92B2     		uxth	r2, r2
 690              	.LVL51:
 592:Core/Src/main.c **** 	return len;
 691              		.loc 1 592 2 is_stmt 0 view .LVU176
 692 000a 0248     		ldr	r0, .L33
 693              	.LVL52:
 592:Core/Src/main.c **** 	return len;
 694              		.loc 1 592 2 view .LVU177
 695 000c FFF7FEFF 		bl	HAL_UART_Transmit
 696              	.LVL53:
 593:Core/Src/main.c **** }
 697              		.loc 1 593 2 is_stmt 1 view .LVU178
 594:Core/Src/main.c **** 
 698              		.loc 1 594 1 is_stmt 0 view .LVU179
 699 0010 2046     		mov	r0, r4
 700 0012 10BD     		pop	{r4, pc}
 701              	.LVL54:
 702              	.L34:
 594:Core/Src/main.c **** 
 703              		.loc 1 594 1 view .LVU180
 704              		.align	2
 705              	.L33:
 706 0014 00000000 		.word	huart1
 707              		.cfi_endproc
 708              	.LFE141:
 710              		.section	.text.Error_Handler,"ax",%progbits
 711              		.align	1
 712              		.global	Error_Handler
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	Error_Handler:
 718              	.LFB147:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c **** 
 699:Core/Src/main.c **** /* USER CODE END 4 */
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** /**
 702:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 703:Core/Src/main.c ****   * @retval None
 704:Core/Src/main.c ****   */
 705:Core/Src/main.c **** void Error_Handler(void)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 28


 706:Core/Src/main.c **** {
 719              		.loc 1 706 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ Volatile: function does not return.
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 707:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 708:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 709:Core/Src/main.c ****   __disable_irq();
 725              		.loc 1 709 3 view .LVU182
 726              	.LBB9:
 727              	.LBI9:
 728              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 29


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 30


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 31


 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 32


 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 33


 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 34


 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 35


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 36


 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 37


 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 38


 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 39


 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 40


 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 41


 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 42


 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 43


 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 44


 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 45


 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 729              		.loc 2 960 27 view .LVU183
 730              	.LBB10:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 731              		.loc 2 962 3 view .LVU184
 732              		.syntax unified
 733              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 734 0000 72B6     		cpsid i
 735              	@ 0 "" 2
 736              		.thumb
 737              		.syntax unified
 738              	.L36:
 739              	.LBE10:
 740              	.LBE9:
 710:Core/Src/main.c ****   while (1)
 741              		.loc 1 710 3 view .LVU185
 711:Core/Src/main.c ****   {
 712:Core/Src/main.c ****   }
 742              		.loc 1 712 3 view .LVU186
 710:Core/Src/main.c ****   while (1)
 743              		.loc 1 710 9 view .LVU187
 744 0002 FEE7     		b	.L36
 745              		.cfi_endproc
 746              	.LFE147:
 748              		.section	.text.MX_SPI1_Init,"ax",%progbits
 749              		.align	1
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	MX_SPI1_Init:
 755              	.LFB138:
 456:Core/Src/main.c **** 
 756              		.loc 1 456 1 view -0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760 0000 08B5     		push	{r3, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 3, -8
 763              		.cfi_offset 14, -4
 466:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 764              		.loc 1 466 3 view .LVU189
 466:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 765              		.loc 1 466 18 is_stmt 0 view .LVU190
 766 0002 0D48     		ldr	r0, .L41
 767 0004 0D4B     		ldr	r3, .L41+4
 768 0006 0360     		str	r3, [r0]
 467:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 769              		.loc 1 467 3 is_stmt 1 view .LVU191
 467:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 770              		.loc 1 467 19 is_stmt 0 view .LVU192
 771 0008 4FF48273 		mov	r3, #260
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 46


 772 000c 4360     		str	r3, [r0, #4]
 468:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 773              		.loc 1 468 3 is_stmt 1 view .LVU193
 468:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 774              		.loc 1 468 24 is_stmt 0 view .LVU194
 775 000e 0023     		movs	r3, #0
 776 0010 8360     		str	r3, [r0, #8]
 469:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 777              		.loc 1 469 3 is_stmt 1 view .LVU195
 469:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 778              		.loc 1 469 23 is_stmt 0 view .LVU196
 779 0012 C360     		str	r3, [r0, #12]
 470:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 780              		.loc 1 470 3 is_stmt 1 view .LVU197
 470:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 781              		.loc 1 470 26 is_stmt 0 view .LVU198
 782 0014 0361     		str	r3, [r0, #16]
 471:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 783              		.loc 1 471 3 is_stmt 1 view .LVU199
 471:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 784              		.loc 1 471 23 is_stmt 0 view .LVU200
 785 0016 4361     		str	r3, [r0, #20]
 472:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 786              		.loc 1 472 3 is_stmt 1 view .LVU201
 472:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 787              		.loc 1 472 18 is_stmt 0 view .LVU202
 788 0018 4FF48022 		mov	r2, #262144
 789 001c 8261     		str	r2, [r0, #24]
 473:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 790              		.loc 1 473 3 is_stmt 1 view .LVU203
 473:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 791              		.loc 1 473 32 is_stmt 0 view .LVU204
 792 001e C361     		str	r3, [r0, #28]
 474:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 793              		.loc 1 474 3 is_stmt 1 view .LVU205
 474:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 794              		.loc 1 474 23 is_stmt 0 view .LVU206
 795 0020 0362     		str	r3, [r0, #32]
 475:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 796              		.loc 1 475 3 is_stmt 1 view .LVU207
 475:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 797              		.loc 1 475 21 is_stmt 0 view .LVU208
 798 0022 4362     		str	r3, [r0, #36]
 476:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 799              		.loc 1 476 3 is_stmt 1 view .LVU209
 476:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 800              		.loc 1 476 29 is_stmt 0 view .LVU210
 801 0024 8362     		str	r3, [r0, #40]
 477:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 802              		.loc 1 477 3 is_stmt 1 view .LVU211
 477:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 803              		.loc 1 477 28 is_stmt 0 view .LVU212
 804 0026 0A23     		movs	r3, #10
 805 0028 C362     		str	r3, [r0, #44]
 478:Core/Src/main.c ****   {
 806              		.loc 1 478 3 is_stmt 1 view .LVU213
 478:Core/Src/main.c ****   {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 47


 807              		.loc 1 478 7 is_stmt 0 view .LVU214
 808 002a FFF7FEFF 		bl	HAL_SPI_Init
 809              	.LVL55:
 478:Core/Src/main.c ****   {
 810              		.loc 1 478 6 discriminator 1 view .LVU215
 811 002e 00B9     		cbnz	r0, .L40
 486:Core/Src/main.c **** 
 812              		.loc 1 486 1 view .LVU216
 813 0030 08BD     		pop	{r3, pc}
 814              	.L40:
 480:Core/Src/main.c ****   }
 815              		.loc 1 480 5 is_stmt 1 view .LVU217
 816 0032 FFF7FEFF 		bl	Error_Handler
 817              	.LVL56:
 818              	.L42:
 819 0036 00BF     		.align	2
 820              	.L41:
 821 0038 00000000 		.word	hspi1
 822 003c 00300140 		.word	1073819648
 823              		.cfi_endproc
 824              	.LFE138:
 826              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	MX_USART1_UART_Init:
 833              	.LFB139:
 494:Core/Src/main.c **** 
 834              		.loc 1 494 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838 0000 08B5     		push	{r3, lr}
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 3, -8
 841              		.cfi_offset 14, -4
 503:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 842              		.loc 1 503 3 view .LVU219
 503:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 843              		.loc 1 503 19 is_stmt 0 view .LVU220
 844 0002 0A48     		ldr	r0, .L47
 845 0004 0A4B     		ldr	r3, .L47+4
 846 0006 0360     		str	r3, [r0]
 504:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 847              		.loc 1 504 3 is_stmt 1 view .LVU221
 504:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 848              		.loc 1 504 24 is_stmt 0 view .LVU222
 849 0008 4FF4E133 		mov	r3, #115200
 850 000c 4360     		str	r3, [r0, #4]
 505:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 851              		.loc 1 505 3 is_stmt 1 view .LVU223
 505:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 852              		.loc 1 505 26 is_stmt 0 view .LVU224
 853 000e 0023     		movs	r3, #0
 854 0010 8360     		str	r3, [r0, #8]
 506:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 48


 855              		.loc 1 506 3 is_stmt 1 view .LVU225
 506:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 856              		.loc 1 506 24 is_stmt 0 view .LVU226
 857 0012 C360     		str	r3, [r0, #12]
 507:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 858              		.loc 1 507 3 is_stmt 1 view .LVU227
 507:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 859              		.loc 1 507 22 is_stmt 0 view .LVU228
 860 0014 0361     		str	r3, [r0, #16]
 508:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 861              		.loc 1 508 3 is_stmt 1 view .LVU229
 508:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 862              		.loc 1 508 20 is_stmt 0 view .LVU230
 863 0016 0C22     		movs	r2, #12
 864 0018 4261     		str	r2, [r0, #20]
 509:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 865              		.loc 1 509 3 is_stmt 1 view .LVU231
 509:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 866              		.loc 1 509 25 is_stmt 0 view .LVU232
 867 001a 8361     		str	r3, [r0, #24]
 510:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 868              		.loc 1 510 3 is_stmt 1 view .LVU233
 510:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 869              		.loc 1 510 28 is_stmt 0 view .LVU234
 870 001c C361     		str	r3, [r0, #28]
 511:Core/Src/main.c ****   {
 871              		.loc 1 511 3 is_stmt 1 view .LVU235
 511:Core/Src/main.c ****   {
 872              		.loc 1 511 7 is_stmt 0 view .LVU236
 873 001e FFF7FEFF 		bl	HAL_UART_Init
 874              	.LVL57:
 511:Core/Src/main.c ****   {
 875              		.loc 1 511 6 discriminator 1 view .LVU237
 876 0022 00B9     		cbnz	r0, .L46
 519:Core/Src/main.c **** 
 877              		.loc 1 519 1 view .LVU238
 878 0024 08BD     		pop	{r3, pc}
 879              	.L46:
 513:Core/Src/main.c ****   }
 880              		.loc 1 513 5 is_stmt 1 view .LVU239
 881 0026 FFF7FEFF 		bl	Error_Handler
 882              	.LVL58:
 883              	.L48:
 884 002a 00BF     		.align	2
 885              	.L47:
 886 002c 00000000 		.word	huart1
 887 0030 00100140 		.word	1073811456
 888              		.cfi_endproc
 889              	.LFE139:
 891              		.section	.rodata.MX_I2C1_Init.str1.4,"aMS",%progbits,1
 892              		.align	2
 893              	.LC0:
 894 0000 54656D70 		.ascii	"Temperature not ready\015\012\000"
 894      65726174 
 894      75726520 
 894      6E6F7420 
 894      72656164 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 49


 895              		.section	.text.MX_I2C1_Init,"ax",%progbits
 896              		.align	1
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 901              	MX_I2C1_Init:
 902              	.LFB136:
 390:Core/Src/main.c **** 
 903              		.loc 1 390 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 00B5     		push	{lr}
 908              		.cfi_def_cfa_offset 4
 909              		.cfi_offset 14, -4
 910 0002 85B0     		sub	sp, sp, #20
 911              		.cfi_def_cfa_offset 24
 399:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 912              		.loc 1 399 3 view .LVU241
 399:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 913              		.loc 1 399 18 is_stmt 0 view .LVU242
 914 0004 1948     		ldr	r0, .L55
 915 0006 1A4B     		ldr	r3, .L55+4
 916 0008 0360     		str	r3, [r0]
 400:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 917              		.loc 1 400 3 is_stmt 1 view .LVU243
 400:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 918              		.loc 1 400 25 is_stmt 0 view .LVU244
 919 000a 1A4B     		ldr	r3, .L55+8
 920 000c 4360     		str	r3, [r0, #4]
 401:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 921              		.loc 1 401 3 is_stmt 1 view .LVU245
 401:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 922              		.loc 1 401 24 is_stmt 0 view .LVU246
 923 000e 0023     		movs	r3, #0
 924 0010 8360     		str	r3, [r0, #8]
 402:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 925              		.loc 1 402 3 is_stmt 1 view .LVU247
 402:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 926              		.loc 1 402 26 is_stmt 0 view .LVU248
 927 0012 8222     		movs	r2, #130
 928 0014 C260     		str	r2, [r0, #12]
 403:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 929              		.loc 1 403 3 is_stmt 1 view .LVU249
 403:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 930              		.loc 1 403 29 is_stmt 0 view .LVU250
 931 0016 4FF48042 		mov	r2, #16384
 932 001a 0261     		str	r2, [r0, #16]
 404:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 933              		.loc 1 404 3 is_stmt 1 view .LVU251
 404:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 934              		.loc 1 404 30 is_stmt 0 view .LVU252
 935 001c 4361     		str	r3, [r0, #20]
 405:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 936              		.loc 1 405 3 is_stmt 1 view .LVU253
 405:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 937              		.loc 1 405 26 is_stmt 0 view .LVU254
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 50


 938 001e 8361     		str	r3, [r0, #24]
 406:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 939              		.loc 1 406 3 is_stmt 1 view .LVU255
 406:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 940              		.loc 1 406 30 is_stmt 0 view .LVU256
 941 0020 C361     		str	r3, [r0, #28]
 407:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 942              		.loc 1 407 3 is_stmt 1 view .LVU257
 407:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 943              		.loc 1 407 28 is_stmt 0 view .LVU258
 944 0022 0362     		str	r3, [r0, #32]
 408:Core/Src/main.c ****   {
 945              		.loc 1 408 3 is_stmt 1 view .LVU259
 408:Core/Src/main.c ****   {
 946              		.loc 1 408 7 is_stmt 0 view .LVU260
 947 0024 FFF7FEFF 		bl	HAL_I2C_Init
 948              	.LVL59:
 408:Core/Src/main.c ****   {
 949              		.loc 1 408 6 discriminator 1 view .LVU261
 950 0028 88B9     		cbnz	r0, .L54
 413:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 951              		.loc 1 413 5 is_stmt 1 view .LVU262
 413:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 952              		.loc 1 413 9 is_stmt 0 view .LVU263
 953 002a 4FF47A73 		mov	r3, #1000
 954 002e 0222     		movs	r2, #2
 955 0030 8221     		movs	r1, #130
 956 0032 0E48     		ldr	r0, .L55
 957 0034 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 958              	.LVL60:
 413:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 959              		.loc 1 413 8 discriminator 1 view .LVU264
 960 0038 58B1     		cbz	r0, .L51
 414:Core/Src/main.c ****     } else {
 961              		.loc 1 414 7 is_stmt 1 view .LVU265
 962 003a 4FF47A73 		mov	r3, #1000
 963 003e 2022     		movs	r2, #32
 964 0040 0D49     		ldr	r1, .L55+12
 965 0042 0E48     		ldr	r0, .L55+16
 966 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 967              	.LVL61:
 968              	.L49:
 420:Core/Src/main.c **** 
 969              		.loc 1 420 1 is_stmt 0 view .LVU266
 970 0048 05B0     		add	sp, sp, #20
 971              		.cfi_remember_state
 972              		.cfi_def_cfa_offset 4
 973              		@ sp needed
 974 004a 5DF804FB 		ldr	pc, [sp], #4
 975              	.L54:
 976              		.cfi_restore_state
 410:Core/Src/main.c ****   }
 977              		.loc 1 410 5 is_stmt 1 view .LVU267
 978 004e FFF7FEFF 		bl	Error_Handler
 979              	.LVL62:
 980              	.L51:
 416:Core/Src/main.c ****     }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 51


 981              		.loc 1 416 7 view .LVU268
 982 0052 4FF47A73 		mov	r3, #1000
 983 0056 0293     		str	r3, [sp, #8]
 984 0058 0123     		movs	r3, #1
 985 005a 0193     		str	r3, [sp, #4]
 986 005c 0022     		movs	r2, #0
 987 005e 0092     		str	r2, [sp]
 988 0060 0422     		movs	r2, #4
 989 0062 8221     		movs	r1, #130
 990 0064 0148     		ldr	r0, .L55
 991 0066 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 992              	.LVL63:
 420:Core/Src/main.c **** 
 993              		.loc 1 420 1 is_stmt 0 view .LVU269
 994 006a EDE7     		b	.L49
 995              	.L56:
 996              		.align	2
 997              	.L55:
 998 006c 00000000 		.word	hi2c1
 999 0070 00540040 		.word	1073763328
 1000 0074 A0860100 		.word	100000
 1001 0078 00000000 		.word	.LC0
 1002 007c 00000000 		.word	huart1
 1003              		.cfi_endproc
 1004              	.LFE136:
 1006              		.section	.text.SystemClock_Config,"ax",%progbits
 1007              		.align	1
 1008              		.global	SystemClock_Config
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1013              	SystemClock_Config:
 1014              	.LFB135:
 343:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1015              		.loc 1 343 1 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 80
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019 0000 00B5     		push	{lr}
 1020              		.cfi_def_cfa_offset 4
 1021              		.cfi_offset 14, -4
 1022 0002 95B0     		sub	sp, sp, #84
 1023              		.cfi_def_cfa_offset 88
 344:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1024              		.loc 1 344 3 view .LVU271
 344:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1025              		.loc 1 344 22 is_stmt 0 view .LVU272
 1026 0004 3022     		movs	r2, #48
 1027 0006 0021     		movs	r1, #0
 1028 0008 08A8     		add	r0, sp, #32
 1029 000a FFF7FEFF 		bl	memset
 1030              	.LVL64:
 345:Core/Src/main.c **** 
 1031              		.loc 1 345 3 is_stmt 1 view .LVU273
 345:Core/Src/main.c **** 
 1032              		.loc 1 345 22 is_stmt 0 view .LVU274
 1033 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 52


 1034 0010 0393     		str	r3, [sp, #12]
 1035 0012 0493     		str	r3, [sp, #16]
 1036 0014 0593     		str	r3, [sp, #20]
 1037 0016 0693     		str	r3, [sp, #24]
 1038 0018 0793     		str	r3, [sp, #28]
 349:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1039              		.loc 1 349 3 is_stmt 1 view .LVU275
 1040              	.LBB11:
 349:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1041              		.loc 1 349 3 view .LVU276
 1042 001a 0193     		str	r3, [sp, #4]
 349:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1043              		.loc 1 349 3 view .LVU277
 1044 001c 1C4A     		ldr	r2, .L63
 1045 001e 116C     		ldr	r1, [r2, #64]
 1046 0020 41F08051 		orr	r1, r1, #268435456
 1047 0024 1164     		str	r1, [r2, #64]
 349:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1048              		.loc 1 349 3 view .LVU278
 1049 0026 126C     		ldr	r2, [r2, #64]
 1050 0028 02F08052 		and	r2, r2, #268435456
 1051 002c 0192     		str	r2, [sp, #4]
 349:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1052              		.loc 1 349 3 view .LVU279
 1053 002e 019A     		ldr	r2, [sp, #4]
 1054              	.LBE11:
 349:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1055              		.loc 1 349 3 view .LVU280
 350:Core/Src/main.c **** 
 1056              		.loc 1 350 3 view .LVU281
 1057              	.LBB12:
 350:Core/Src/main.c **** 
 1058              		.loc 1 350 3 view .LVU282
 1059 0030 0293     		str	r3, [sp, #8]
 350:Core/Src/main.c **** 
 1060              		.loc 1 350 3 view .LVU283
 1061 0032 184A     		ldr	r2, .L63+4
 1062 0034 1168     		ldr	r1, [r2]
 1063 0036 41F48041 		orr	r1, r1, #16384
 1064 003a 1160     		str	r1, [r2]
 350:Core/Src/main.c **** 
 1065              		.loc 1 350 3 view .LVU284
 1066 003c 1268     		ldr	r2, [r2]
 1067 003e 02F48042 		and	r2, r2, #16384
 1068 0042 0292     		str	r2, [sp, #8]
 350:Core/Src/main.c **** 
 1069              		.loc 1 350 3 view .LVU285
 1070 0044 029A     		ldr	r2, [sp, #8]
 1071              	.LBE12:
 350:Core/Src/main.c **** 
 1072              		.loc 1 350 3 view .LVU286
 355:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1073              		.loc 1 355 3 view .LVU287
 355:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1074              		.loc 1 355 36 is_stmt 0 view .LVU288
 1075 0046 0222     		movs	r2, #2
 1076 0048 0892     		str	r2, [sp, #32]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 53


 356:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1077              		.loc 1 356 3 is_stmt 1 view .LVU289
 356:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1078              		.loc 1 356 30 is_stmt 0 view .LVU290
 1079 004a 0121     		movs	r1, #1
 1080 004c 0B91     		str	r1, [sp, #44]
 357:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1081              		.loc 1 357 3 is_stmt 1 view .LVU291
 357:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1082              		.loc 1 357 41 is_stmt 0 view .LVU292
 1083 004e 1021     		movs	r1, #16
 1084 0050 0C91     		str	r1, [sp, #48]
 358:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1085              		.loc 1 358 3 is_stmt 1 view .LVU293
 358:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1086              		.loc 1 358 34 is_stmt 0 view .LVU294
 1087 0052 0E92     		str	r2, [sp, #56]
 359:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1088              		.loc 1 359 3 is_stmt 1 view .LVU295
 359:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1089              		.loc 1 359 35 is_stmt 0 view .LVU296
 1090 0054 0F93     		str	r3, [sp, #60]
 360:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1091              		.loc 1 360 3 is_stmt 1 view .LVU297
 360:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1092              		.loc 1 360 30 is_stmt 0 view .LVU298
 1093 0056 1091     		str	r1, [sp, #64]
 361:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1094              		.loc 1 361 3 is_stmt 1 view .LVU299
 361:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1095              		.loc 1 361 30 is_stmt 0 view .LVU300
 1096 0058 C023     		movs	r3, #192
 1097 005a 1193     		str	r3, [sp, #68]
 362:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1098              		.loc 1 362 3 is_stmt 1 view .LVU301
 362:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1099              		.loc 1 362 30 is_stmt 0 view .LVU302
 1100 005c 1292     		str	r2, [sp, #72]
 363:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1101              		.loc 1 363 3 is_stmt 1 view .LVU303
 363:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1102              		.loc 1 363 30 is_stmt 0 view .LVU304
 1103 005e 0423     		movs	r3, #4
 1104 0060 1393     		str	r3, [sp, #76]
 364:Core/Src/main.c ****   {
 1105              		.loc 1 364 3 is_stmt 1 view .LVU305
 364:Core/Src/main.c ****   {
 1106              		.loc 1 364 7 is_stmt 0 view .LVU306
 1107 0062 08A8     		add	r0, sp, #32
 1108 0064 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1109              	.LVL65:
 364:Core/Src/main.c ****   {
 1110              		.loc 1 364 6 discriminator 1 view .LVU307
 1111 0068 68B9     		cbnz	r0, .L61
 371:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1112              		.loc 1 371 3 is_stmt 1 view .LVU308
 371:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 54


 1113              		.loc 1 371 31 is_stmt 0 view .LVU309
 1114 006a 0F23     		movs	r3, #15
 1115 006c 0393     		str	r3, [sp, #12]
 373:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1116              		.loc 1 373 3 is_stmt 1 view .LVU310
 373:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1117              		.loc 1 373 34 is_stmt 0 view .LVU311
 1118 006e 0021     		movs	r1, #0
 1119 0070 0491     		str	r1, [sp, #16]
 374:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1120              		.loc 1 374 3 is_stmt 1 view .LVU312
 374:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1121              		.loc 1 374 35 is_stmt 0 view .LVU313
 1122 0072 0591     		str	r1, [sp, #20]
 375:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1123              		.loc 1 375 3 is_stmt 1 view .LVU314
 375:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1124              		.loc 1 375 36 is_stmt 0 view .LVU315
 1125 0074 0691     		str	r1, [sp, #24]
 376:Core/Src/main.c **** 
 1126              		.loc 1 376 3 is_stmt 1 view .LVU316
 376:Core/Src/main.c **** 
 1127              		.loc 1 376 36 is_stmt 0 view .LVU317
 1128 0076 0791     		str	r1, [sp, #28]
 378:Core/Src/main.c ****   {
 1129              		.loc 1 378 3 is_stmt 1 view .LVU318
 378:Core/Src/main.c ****   {
 1130              		.loc 1 378 7 is_stmt 0 view .LVU319
 1131 0078 03A8     		add	r0, sp, #12
 1132 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1133              	.LVL66:
 378:Core/Src/main.c ****   {
 1134              		.loc 1 378 6 discriminator 1 view .LVU320
 1135 007e 20B9     		cbnz	r0, .L62
 382:Core/Src/main.c **** 
 1136              		.loc 1 382 1 view .LVU321
 1137 0080 15B0     		add	sp, sp, #84
 1138              		.cfi_remember_state
 1139              		.cfi_def_cfa_offset 4
 1140              		@ sp needed
 1141 0082 5DF804FB 		ldr	pc, [sp], #4
 1142              	.L61:
 1143              		.cfi_restore_state
 366:Core/Src/main.c ****   }
 1144              		.loc 1 366 5 is_stmt 1 view .LVU322
 1145 0086 FFF7FEFF 		bl	Error_Handler
 1146              	.LVL67:
 1147              	.L62:
 380:Core/Src/main.c ****   }
 1148              		.loc 1 380 5 view .LVU323
 1149 008a FFF7FEFF 		bl	Error_Handler
 1150              	.LVL68:
 1151              	.L64:
 1152 008e 00BF     		.align	2
 1153              	.L63:
 1154 0090 00380240 		.word	1073887232
 1155 0094 00700040 		.word	1073770496
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 55


 1156              		.cfi_endproc
 1157              	.LFE135:
 1159              		.global	__aeabi_f2d
 1160              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1161              		.align	2
 1162              	.LC1:
 1163 0000 25342E32 		.ascii	"%4.2f,%4.2f,%4.2f,\000"
 1163      662C2534 
 1163      2E32662C 
 1163      25342E32 
 1163      662C00
 1164 0013 00       		.align	2
 1165              	.LC2:
 1166 0014 252E3266 		.ascii	"%.2f,25.25\015\012\000"
 1166      2C32352E 
 1166      32350D0A 
 1166      00
 1167              		.section	.text.main,"ax",%progbits
 1168              		.align	1
 1169              		.global	main
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1174              	main:
 1175              	.LFB134:
  97:Core/Src/main.c **** 
 1176              		.loc 1 97 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 56
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180 0000 70B5     		push	{r4, r5, r6, lr}
 1181              		.cfi_def_cfa_offset 16
 1182              		.cfi_offset 4, -16
 1183              		.cfi_offset 5, -12
 1184              		.cfi_offset 6, -8
 1185              		.cfi_offset 14, -4
 1186 0002 2DED088B 		vpush.64	{d8, d9, d10, d11}
 1187              		.cfi_def_cfa_offset 48
 1188              		.cfi_offset 80, -48
 1189              		.cfi_offset 81, -44
 1190              		.cfi_offset 82, -40
 1191              		.cfi_offset 83, -36
 1192              		.cfi_offset 84, -32
 1193              		.cfi_offset 85, -28
 1194              		.cfi_offset 86, -24
 1195              		.cfi_offset 87, -20
 1196 0006 92B0     		sub	sp, sp, #72
 1197              		.cfi_def_cfa_offset 120
 106:Core/Src/main.c **** 
 1198              		.loc 1 106 3 view .LVU325
 1199 0008 FFF7FEFF 		bl	HAL_Init
 1200              	.LVL69:
 113:Core/Src/main.c **** 
 1201              		.loc 1 113 3 view .LVU326
 1202 000c FFF7FEFF 		bl	SystemClock_Config
 1203              	.LVL70:
 120:Core/Src/main.c ****   MX_SDIO_SD_Init();
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 56


 1204              		.loc 1 120 3 view .LVU327
 1205 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1206              	.LVL71:
 121:Core/Src/main.c ****   MX_SPI1_Init();
 1207              		.loc 1 121 3 view .LVU328
 1208 0014 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1209              	.LVL72:
 122:Core/Src/main.c ****   MX_USART1_UART_Init();
 1210              		.loc 1 122 3 view .LVU329
 1211 0018 FFF7FEFF 		bl	MX_SPI1_Init
 1212              	.LVL73:
 123:Core/Src/main.c ****   MX_I2C1_Init();
 1213              		.loc 1 123 3 view .LVU330
 1214 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 1215              	.LVL74:
 124:Core/Src/main.c ****   MX_FATFS_Init();
 1216              		.loc 1 124 3 view .LVU331
 1217 0020 FFF7FEFF 		bl	MX_I2C1_Init
 1218              	.LVL75:
 125:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1219              		.loc 1 125 3 view .LVU332
 1220 0024 FFF7FEFF 		bl	MX_FATFS_Init
 1221              	.LVL76:
 131:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 1222              		.loc 1 131 3 view .LVU333
 132:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1223              		.loc 1 132 3 view .LVU334
 132:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1224              		.loc 1 132 21 is_stmt 0 view .LVU335
 1225 0028 CC4B     		ldr	r3, .L80
 1226 002a 0E93     		str	r3, [sp, #56]
 133:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1227              		.loc 1 133 3 is_stmt 1 view .LVU336
 133:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1228              		.loc 1 133 20 is_stmt 0 view .LVU337
 1229 002c CC4B     		ldr	r3, .L80+4
 1230 002e 0F93     		str	r3, [sp, #60]
 134:Core/Src/main.c **** 
 1231              		.loc 1 134 3 is_stmt 1 view .LVU338
 134:Core/Src/main.c **** 
 1232              		.loc 1 134 18 is_stmt 0 view .LVU339
 1233 0030 CC4B     		ldr	r3, .L80+8
 1234 0032 1193     		str	r3, [sp, #68]
 136:Core/Src/main.c ****   radio_ctx.write_reg = llcc68_platform_write_read;
 1235              		.loc 1 136 3 is_stmt 1 view .LVU340
 137:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_write_read;
 1236              		.loc 1 137 3 view .LVU341
 137:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_write_read;
 1237              		.loc 1 137 23 is_stmt 0 view .LVU342
 1238 0034 CC4A     		ldr	r2, .L80+12
 1239 0036 0992     		str	r2, [sp, #36]
 138:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 1240              		.loc 1 138 3 is_stmt 1 view .LVU343
 138:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 1241              		.loc 1 138 22 is_stmt 0 view .LVU344
 1242 0038 0A92     		str	r2, [sp, #40]
 139:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 57


 1243              		.loc 1 139 3 is_stmt 1 view .LVU345
 139:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 1244              		.loc 1 139 19 is_stmt 0 view .LVU346
 1245 003a CC4A     		ldr	r2, .L80+16
 1246 003c 0B92     		str	r2, [sp, #44]
 140:Core/Src/main.c **** 
 1247              		.loc 1 140 3 is_stmt 1 view .LVU347
 140:Core/Src/main.c **** 
 1248              		.loc 1 140 20 is_stmt 0 view .LVU348
 1249 003e 0D93     		str	r3, [sp, #52]
 143:Core/Src/main.c **** 
 1250              		.loc 1 143 3 is_stmt 1 view .LVU349
 1251 0040 6420     		movs	r0, #100
 1252 0042 FFF7FEFF 		bl	platform_delay
 1253              	.LVL77:
 148:Core/Src/main.c ****   //set auto increment to read several register at same time
 1254              		.loc 1 148 3 view .LVU350
 1255 0046 0121     		movs	r1, #1
 1256 0048 0EA8     		add	r0, sp, #56
 1257 004a FFF7FEFF 		bl	lsm6dsm_spi_mode_set
 1258              	.LVL78:
 150:Core/Src/main.c **** 
 1259              		.loc 1 150 3 view .LVU351
 1260 004e 0121     		movs	r1, #1
 1261 0050 0EA8     		add	r0, sp, #56
 1262 0052 FFF7FEFF 		bl	lsm6dsm_auto_increment_set
 1263              	.LVL79:
 153:Core/Src/main.c ****   
 1264              		.loc 1 153 3 view .LVU352
 1265 0056 C64C     		ldr	r4, .L80+20
 1266 0058 2146     		mov	r1, r4
 1267 005a 0EA8     		add	r0, sp, #56
 1268 005c FFF7FEFF 		bl	lsm6dsm_device_id_get
 1269              	.LVL80:
 155:Core/Src/main.c ****     while (1) {
 1270              		.loc 1 155 3 view .LVU353
 155:Core/Src/main.c ****     while (1) {
 1271              		.loc 1 155 14 is_stmt 0 view .LVU354
 1272 0060 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 155:Core/Src/main.c ****     while (1) {
 1273              		.loc 1 155 6 view .LVU355
 1274 0062 6A2B     		cmp	r3, #106
 1275 0064 00D0     		beq	.L66
 1276              	.L67:
 156:Core/Src/main.c ****       /* manage here device not found */
 1277              		.loc 1 156 5 is_stmt 1 view .LVU356
 158:Core/Src/main.c **** 
 1278              		.loc 1 158 5 view .LVU357
 156:Core/Src/main.c ****       /* manage here device not found */
 1279              		.loc 1 156 11 view .LVU358
 1280 0066 FEE7     		b	.L67
 1281              	.L66:
 164:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 1282              		.loc 1 164 3 view .LVU359
 165:Core/Src/main.c ****   } while (rst);
 1283              		.loc 1 165 5 view .LVU360
 1284 0068 C24C     		ldr	r4, .L80+24
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 58


 1285 006a 2146     		mov	r1, r4
 1286 006c 0EA8     		add	r0, sp, #56
 1287 006e FFF7FEFF 		bl	lsm6dsm_reset_get
 1288              	.LVL81:
 166:Core/Src/main.c **** 
 1289              		.loc 1 166 12 discriminator 1 view .LVU361
 1290 0072 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1291 0074 002B     		cmp	r3, #0
 1292 0076 F7D1     		bne	.L66
 169:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 1293              		.loc 1 169 3 view .LVU362
 1294 0078 0121     		movs	r1, #1
 1295 007a 0EA8     		add	r0, sp, #56
 1296 007c FFF7FEFF 		bl	lsm6dsm_block_data_update_set
 1297              	.LVL82:
 171:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_6k66Hz);
 1298              		.loc 1 171 3 view .LVU363
 1299 0080 0A21     		movs	r1, #10
 1300 0082 0EA8     		add	r0, sp, #56
 1301 0084 FFF7FEFF 		bl	lsm6dsm_xl_data_rate_set
 1302              	.LVL83:
 172:Core/Src/main.c ****   /* Set full scale */
 1303              		.loc 1 172 3 view .LVU364
 1304 0088 0A21     		movs	r1, #10
 1305 008a 0EA8     		add	r0, sp, #56
 1306 008c FFF7FEFF 		bl	lsm6dsm_gy_data_rate_set
 1307              	.LVL84:
 174:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 1308              		.loc 1 174 3 view .LVU365
 1309 0090 0021     		movs	r1, #0
 1310 0092 0EA8     		add	r0, sp, #56
 1311 0094 FFF7FEFF 		bl	lsm6dsm_xl_full_scale_set
 1312              	.LVL85:
 175:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 1313              		.loc 1 175 3 view .LVU366
 1314 0098 0621     		movs	r1, #6
 1315 009a 0EA8     		add	r0, sp, #56
 1316 009c FFF7FEFF 		bl	lsm6dsm_gy_full_scale_set
 1317              	.LVL86:
 179:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 1318              		.loc 1 179 3 view .LVU367
 1319 00a0 0121     		movs	r1, #1
 1320 00a2 0EA8     		add	r0, sp, #56
 1321 00a4 FFF7FEFF 		bl	lsm6dsm_xl_filter_analog_set
 1322              	.LVL87:
 183:Core/Src/main.c ****                                LSM6DSM_XL_LOW_LAT_LP_ODR_DIV_400);
 1323              		.loc 1 183 3 view .LVU368
 1324 00a8 0321     		movs	r1, #3
 1325 00aa 0EA8     		add	r0, sp, #56
 1326 00ac FFF7FEFF 		bl	lsm6dsm_xl_lp2_bandwidth_set
 1327              	.LVL88:
 189:Core/Src/main.c ****   // update the offset bias of acceleration
 1328              		.loc 1 189 3 view .LVU369
 1329 00b0 0B21     		movs	r1, #11
 1330 00b2 0EA8     		add	r0, sp, #56
 1331 00b4 FFF7FEFF 		bl	lsm6dsm_gy_band_pass_set
 1332              	.LVL89:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 59


 192:Core/Src/main.c ****   for (int i = 0; i < 10; i++) {
 1333              		.loc 1 192 3 view .LVU370
 192:Core/Src/main.c ****   for (int i = 0; i < 10; i++) {
 1334              		.loc 1 192 11 is_stmt 0 view .LVU371
 1335 00b8 0025     		movs	r5, #0
 1336 00ba ADF81C50 		strh	r5, [sp, #28]	@ movhi
 1337 00be ADF81E50 		strh	r5, [sp, #30]	@ movhi
 1338 00c2 ADF82050 		strh	r5, [sp, #32]	@ movhi
 193:Core/Src/main.c ****     lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1339              		.loc 1 193 3 is_stmt 1 view .LVU372
 1340              	.LBB13:
 193:Core/Src/main.c ****     lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1341              		.loc 1 193 8 view .LVU373
 1342              	.LVL90:
 193:Core/Src/main.c ****     lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1343              		.loc 1 193 3 is_stmt 0 view .LVU374
 1344 00c6 3EE0     		b	.L68
 1345              	.LVL91:
 1346              	.L69:
 194:Core/Src/main.c ****     acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 1347              		.loc 1 194 5 is_stmt 1 view .LVU375
 1348 00c8 AB4C     		ldr	r4, .L80+28
 1349 00ca 2146     		mov	r1, r4
 1350 00cc 0EA8     		add	r0, sp, #56
 1351 00ce FFF7FEFF 		bl	lsm6dsm_acceleration_raw_get
 1352              	.LVL92:
 195:Core/Src/main.c ****     acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1353              		.loc 1 195 5 view .LVU376
 195:Core/Src/main.c ****     acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1354              		.loc 1 195 20 is_stmt 0 view .LVU377
 1355 00d2 B4F90000 		ldrsh	r0, [r4]
 1356 00d6 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1357              	.LVL93:
 195:Core/Src/main.c ****     acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1358              		.loc 1 195 13 discriminator 1 view .LVU378
 1359 00da BDF91C30 		ldrsh	r3, [sp, #28]
 1360 00de 07EE903A 		vmov	s15, r3	@ int
 195:Core/Src/main.c ****     acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1361              		.loc 1 195 17 discriminator 1 view .LVU379
 1362 00e2 F8EEE77A 		vcvt.f32.s32	s15, s15
 1363 00e6 77EE807A 		vadd.f32	s15, s15, s0
 1364 00ea FDEEE77A 		vcvt.s32.f32	s15, s15
 1365 00ee 17EE903A 		vmov	r3, s15	@ int
 1366 00f2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 196:Core/Src/main.c ****     acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1367              		.loc 1 196 5 is_stmt 1 view .LVU380
 196:Core/Src/main.c ****     acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1368              		.loc 1 196 20 is_stmt 0 view .LVU381
 1369 00f6 B4F90200 		ldrsh	r0, [r4, #2]
 1370 00fa FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1371              	.LVL94:
 196:Core/Src/main.c ****     acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1372              		.loc 1 196 13 discriminator 1 view .LVU382
 1373 00fe BDF91E30 		ldrsh	r3, [sp, #30]
 1374 0102 07EE903A 		vmov	s15, r3	@ int
 196:Core/Src/main.c ****     acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1375              		.loc 1 196 17 discriminator 1 view .LVU383
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 60


 1376 0106 F8EEE77A 		vcvt.f32.s32	s15, s15
 1377 010a 77EE807A 		vadd.f32	s15, s15, s0
 1378 010e FDEEE77A 		vcvt.s32.f32	s15, s15
 1379 0112 17EE903A 		vmov	r3, s15	@ int
 1380 0116 ADF81E30 		strh	r3, [sp, #30]	@ movhi
 197:Core/Src/main.c ****     platform_delay(100);
 1381              		.loc 1 197 5 is_stmt 1 view .LVU384
 197:Core/Src/main.c ****     platform_delay(100);
 1382              		.loc 1 197 20 is_stmt 0 view .LVU385
 1383 011a B4F90400 		ldrsh	r0, [r4, #4]
 1384 011e FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1385              	.LVL95:
 197:Core/Src/main.c ****     platform_delay(100);
 1386              		.loc 1 197 13 discriminator 1 view .LVU386
 1387 0122 BDF92030 		ldrsh	r3, [sp, #32]
 1388 0126 07EE903A 		vmov	s15, r3	@ int
 197:Core/Src/main.c ****     platform_delay(100);
 1389              		.loc 1 197 17 discriminator 1 view .LVU387
 1390 012a F8EEE77A 		vcvt.f32.s32	s15, s15
 1391 012e 77EE807A 		vadd.f32	s15, s15, s0
 1392 0132 FDEEE77A 		vcvt.s32.f32	s15, s15
 1393 0136 17EE903A 		vmov	r3, s15	@ int
 1394 013a ADF82030 		strh	r3, [sp, #32]	@ movhi
 198:Core/Src/main.c ****   } 
 1395              		.loc 1 198 5 is_stmt 1 view .LVU388
 1396 013e 6420     		movs	r0, #100
 1397 0140 FFF7FEFF 		bl	platform_delay
 1398              	.LVL96:
 193:Core/Src/main.c ****     lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1399              		.loc 1 193 28 discriminator 3 view .LVU389
 1400 0144 0135     		adds	r5, r5, #1
 1401              	.LVL97:
 1402              	.L68:
 193:Core/Src/main.c ****     lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1403              		.loc 1 193 21 discriminator 1 view .LVU390
 1404 0146 092D     		cmp	r5, #9
 1405 0148 BEDD     		ble	.L69
 1406              	.LBE13:
 200:Core/Src/main.c ****   acc_bias[1] /= 10;
 1407              		.loc 1 200 3 view .LVU391
 200:Core/Src/main.c ****   acc_bias[1] /= 10;
 1408              		.loc 1 200 11 is_stmt 0 view .LVU392
 1409 014a BDF91C20 		ldrsh	r2, [sp, #28]
 200:Core/Src/main.c ****   acc_bias[1] /= 10;
 1410              		.loc 1 200 15 view .LVU393
 1411 014e 0A23     		movs	r3, #10
 1412 0150 92FBF3F2 		sdiv	r2, r2, r3
 1413 0154 0AEE102A 		vmov	s20, r2	@ int
 1414 0158 ADF81C20 		strh	r2, [sp, #28]	@ movhi
 201:Core/Src/main.c ****   acc_bias[2] /= 10;
 1415              		.loc 1 201 3 is_stmt 1 view .LVU394
 201:Core/Src/main.c ****   acc_bias[2] /= 10;
 1416              		.loc 1 201 11 is_stmt 0 view .LVU395
 1417 015c BDF91E20 		ldrsh	r2, [sp, #30]
 201:Core/Src/main.c ****   acc_bias[2] /= 10;
 1418              		.loc 1 201 15 view .LVU396
 1419 0160 92FBF3F2 		sdiv	r2, r2, r3
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 61


 1420 0164 0AEE902A 		vmov	s21, r2	@ int
 1421 0168 ADF81E20 		strh	r2, [sp, #30]	@ movhi
 202:Core/Src/main.c **** 
 1422              		.loc 1 202 3 is_stmt 1 view .LVU397
 202:Core/Src/main.c **** 
 1423              		.loc 1 202 11 is_stmt 0 view .LVU398
 1424 016c BDF92020 		ldrsh	r2, [sp, #32]
 202:Core/Src/main.c **** 
 1425              		.loc 1 202 15 view .LVU399
 1426 0170 92FBF3F3 		sdiv	r3, r2, r3
 1427 0174 0BEE103A 		vmov	s22, r3	@ int
 1428 0178 ADF82030 		strh	r3, [sp, #32]	@ movhi
 207:Core/Src/main.c ****   int i = 0;
 1429              		.loc 1 207 3 is_stmt 1 view .LVU400
 207:Core/Src/main.c ****   int i = 0;
 1430              		.loc 1 207 11 is_stmt 0 view .LVU401
 1431 017c 0024     		movs	r4, #0
 1432 017e ADF81440 		strh	r4, [sp, #20]	@ movhi
 1433 0182 ADF81640 		strh	r4, [sp, #22]	@ movhi
 1434 0186 ADF81840 		strh	r4, [sp, #24]	@ movhi
 208:Core/Src/main.c ****   do {
 1435              		.loc 1 208 3 is_stmt 1 view .LVU402
 1436              	.LVL98:
 208:Core/Src/main.c ****   do {
 1437              		.loc 1 208 3 is_stmt 0 view .LVU403
 1438 018a 01E0     		b	.L71
 1439              	.LVL99:
 1440              	.L70:
 223:Core/Src/main.c ****   gyro_bias[0] /= (i+1);
 1441              		.loc 1 223 14 is_stmt 1 view .LVU404
 1442 018c 092C     		cmp	r4, #9
 1443 018e 4BDC     		bgt	.L77
 1444              	.LVL100:
 1445              	.L71:
 209:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 1446              		.loc 1 209 3 view .LVU405
 1447              	.LBB14:
 210:Core/Src/main.c **** 	    /* Read output only if new value is available */
 1448              		.loc 1 210 5 view .LVU406
 212:Core/Src/main.c ****       if (reg.status_reg.gda) {
 1449              		.loc 1 212 6 view .LVU407
 1450 0190 04A9     		add	r1, sp, #16
 1451 0192 0EA8     		add	r0, sp, #56
 1452 0194 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1453              	.LVL101:
 213:Core/Src/main.c ****         /* Read angular rate field data */
 1454              		.loc 1 213 7 view .LVU408
 213:Core/Src/main.c ****         /* Read angular rate field data */
 1455              		.loc 1 213 11 is_stmt 0 view .LVU409
 1456 0198 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 213:Core/Src/main.c ****         /* Read angular rate field data */
 1457              		.loc 1 213 10 view .LVU410
 1458 019c 13F0020F 		tst	r3, #2
 1459 01a0 F4D0     		beq	.L70
 1460              	.LBB15:
 215:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1461              		.loc 1 215 9 is_stmt 1 view .LVU411
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 62


 1462 01a2 764D     		ldr	r5, .L80+32
 1463 01a4 0023     		movs	r3, #0
 1464 01a6 2B60     		str	r3, [r5]
 1465 01a8 AB80     		strh	r3, [r5, #4]	@ movhi
 216:Core/Src/main.c ****         gyro_bias[0] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 1466              		.loc 1 216 9 view .LVU412
 1467 01aa 2946     		mov	r1, r5
 1468 01ac 0EA8     		add	r0, sp, #56
 1469 01ae FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1470              	.LVL102:
 217:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1471              		.loc 1 217 9 view .LVU413
 217:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1472              		.loc 1 217 25 is_stmt 0 view .LVU414
 1473 01b2 B5F90000 		ldrsh	r0, [r5]
 1474 01b6 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1475              	.LVL103:
 217:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1476              		.loc 1 217 18 discriminator 1 view .LVU415
 1477 01ba BDF91430 		ldrsh	r3, [sp, #20]
 1478 01be 07EE903A 		vmov	s15, r3	@ int
 217:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1479              		.loc 1 217 22 discriminator 1 view .LVU416
 1480 01c2 F8EEE77A 		vcvt.f32.s32	s15, s15
 1481 01c6 77EE807A 		vadd.f32	s15, s15, s0
 1482 01ca FDEEE77A 		vcvt.s32.f32	s15, s15
 1483 01ce 17EE903A 		vmov	r3, s15	@ int
 1484 01d2 ADF81430 		strh	r3, [sp, #20]	@ movhi
 218:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1485              		.loc 1 218 9 is_stmt 1 view .LVU417
 218:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1486              		.loc 1 218 25 is_stmt 0 view .LVU418
 1487 01d6 B5F90200 		ldrsh	r0, [r5, #2]
 1488 01da FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1489              	.LVL104:
 218:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1490              		.loc 1 218 18 discriminator 1 view .LVU419
 1491 01de BDF91630 		ldrsh	r3, [sp, #22]
 1492 01e2 07EE903A 		vmov	s15, r3	@ int
 218:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1493              		.loc 1 218 22 discriminator 1 view .LVU420
 1494 01e6 F8EEE77A 		vcvt.f32.s32	s15, s15
 1495 01ea 77EE807A 		vadd.f32	s15, s15, s0
 1496 01ee FDEEE77A 		vcvt.s32.f32	s15, s15
 1497 01f2 17EE903A 		vmov	r3, s15	@ int
 1498 01f6 ADF81630 		strh	r3, [sp, #22]	@ movhi
 219:Core/Src/main.c ****         platform_delay(100);
 1499              		.loc 1 219 9 is_stmt 1 view .LVU421
 219:Core/Src/main.c ****         platform_delay(100);
 1500              		.loc 1 219 25 is_stmt 0 view .LVU422
 1501 01fa B5F90400 		ldrsh	r0, [r5, #4]
 1502 01fe FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1503              	.LVL105:
 219:Core/Src/main.c ****         platform_delay(100);
 1504              		.loc 1 219 18 discriminator 1 view .LVU423
 1505 0202 BDF91830 		ldrsh	r3, [sp, #24]
 1506 0206 07EE903A 		vmov	s15, r3	@ int
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 63


 219:Core/Src/main.c ****         platform_delay(100);
 1507              		.loc 1 219 22 discriminator 1 view .LVU424
 1508 020a F8EEE77A 		vcvt.f32.s32	s15, s15
 1509 020e 77EE807A 		vadd.f32	s15, s15, s0
 1510 0212 FDEEE77A 		vcvt.s32.f32	s15, s15
 1511 0216 17EE903A 		vmov	r3, s15	@ int
 1512 021a ADF81830 		strh	r3, [sp, #24]	@ movhi
 220:Core/Src/main.c ****         i++;
 1513              		.loc 1 220 9 is_stmt 1 view .LVU425
 1514 021e 6420     		movs	r0, #100
 1515 0220 FFF7FEFF 		bl	platform_delay
 1516              	.LVL106:
 221:Core/Src/main.c ****       }
 1517              		.loc 1 221 9 view .LVU426
 221:Core/Src/main.c ****       }
 1518              		.loc 1 221 10 is_stmt 0 view .LVU427
 1519 0224 0134     		adds	r4, r4, #1
 1520              	.LVL107:
 221:Core/Src/main.c ****       }
 1521              		.loc 1 221 10 view .LVU428
 1522 0226 B1E7     		b	.L70
 1523              	.L77:
 221:Core/Src/main.c ****       }
 1524              		.loc 1 221 10 view .LVU429
 1525              	.LBE15:
 1526              	.LBE14:
 224:Core/Src/main.c ****   gyro_bias[1] /= (i+1);
 1527              		.loc 1 224 3 is_stmt 1 view .LVU430
 224:Core/Src/main.c ****   gyro_bias[1] /= (i+1);
 1528              		.loc 1 224 12 is_stmt 0 view .LVU431
 1529 0228 BDF91430 		ldrsh	r3, [sp, #20]
 224:Core/Src/main.c ****   gyro_bias[1] /= (i+1);
 1530              		.loc 1 224 21 view .LVU432
 1531 022c 0134     		adds	r4, r4, #1
 1532              	.LVL108:
 224:Core/Src/main.c ****   gyro_bias[1] /= (i+1);
 1533              		.loc 1 224 16 view .LVU433
 1534 022e 93FBF4F3 		sdiv	r3, r3, r4
 1535 0232 1BB2     		sxth	r3, r3
 1536 0234 09EE903A 		vmov	s19, r3	@ int
 1537 0238 ADF81430 		strh	r3, [sp, #20]	@ movhi
 225:Core/Src/main.c ****   gyro_bias[2] /= (i+1);
 1538              		.loc 1 225 3 is_stmt 1 view .LVU434
 225:Core/Src/main.c ****   gyro_bias[2] /= (i+1);
 1539              		.loc 1 225 12 is_stmt 0 view .LVU435
 1540 023c BDF91630 		ldrsh	r3, [sp, #22]
 225:Core/Src/main.c ****   gyro_bias[2] /= (i+1);
 1541              		.loc 1 225 16 view .LVU436
 1542 0240 93FBF4F3 		sdiv	r3, r3, r4
 1543 0244 1BB2     		sxth	r3, r3
 1544 0246 09EE103A 		vmov	s18, r3	@ int
 1545 024a ADF81630 		strh	r3, [sp, #22]	@ movhi
 226:Core/Src/main.c **** 
 1546              		.loc 1 226 3 is_stmt 1 view .LVU437
 226:Core/Src/main.c **** 
 1547              		.loc 1 226 12 is_stmt 0 view .LVU438
 1548 024e BDF91830 		ldrsh	r3, [sp, #24]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 64


 226:Core/Src/main.c **** 
 1549              		.loc 1 226 16 view .LVU439
 1550 0252 93FBF4F3 		sdiv	r3, r3, r4
 1551 0256 1BB2     		sxth	r3, r3
 1552 0258 08EE903A 		vmov	s17, r3	@ int
 1553 025c ADF81830 		strh	r3, [sp, #24]	@ movhi
 1554 0260 97E0     		b	.L75
 1555              	.LVL109:
 1556              	.L78:
 1557              	.LBB16:
 1558              	.LBB17:
 275:Core/Src/main.c **** 	      lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1559              		.loc 1 275 8 is_stmt 1 view .LVU440
 1560 0262 454C     		ldr	r4, .L80+28
 1561 0264 0023     		movs	r3, #0
 1562 0266 2360     		str	r3, [r4]
 1563 0268 A380     		strh	r3, [r4, #4]	@ movhi
 276:Core/Src/main.c **** 	      acceleration_mg[0] =
 1564              		.loc 1 276 8 view .LVU441
 1565 026a 2146     		mov	r1, r4
 1566 026c 0EA8     		add	r0, sp, #56
 1567 026e FFF7FEFF 		bl	lsm6dsm_acceleration_raw_get
 1568              	.LVL110:
 277:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]) - acc_bias[0];
 1569              		.loc 1 277 8 view .LVU442
 278:Core/Src/main.c **** 	      acceleration_mg[1] =
 1570              		.loc 1 278 10 is_stmt 0 view .LVU443
 1571 0272 B4F90000 		ldrsh	r0, [r4]
 1572 0276 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1573              	.LVL111:
 278:Core/Src/main.c **** 	      acceleration_mg[1] =
 1574              		.loc 1 278 60 discriminator 1 view .LVU444
 1575 027a F8EECA7A 		vcvt.f32.s32	s15, s20
 1576 027e 30EE670A 		vsub.f32	s0, s0, s15
 277:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]) - acc_bias[0];
 1577              		.loc 1 277 27 view .LVU445
 1578 0282 3F4D     		ldr	r5, .L80+36
 1579 0284 85ED000A 		vstr.32	s0, [r5]
 279:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]) - acc_bias[1];
 1580              		.loc 1 279 8 is_stmt 1 view .LVU446
 280:Core/Src/main.c **** 	      acceleration_mg[2] =
 1581              		.loc 1 280 10 is_stmt 0 view .LVU447
 1582 0288 B4F90200 		ldrsh	r0, [r4, #2]
 1583 028c FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1584              	.LVL112:
 280:Core/Src/main.c **** 	      acceleration_mg[2] =
 1585              		.loc 1 280 60 discriminator 1 view .LVU448
 1586 0290 F8EEEA7A 		vcvt.f32.s32	s15, s21
 1587 0294 30EE670A 		vsub.f32	s0, s0, s15
 279:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]) - acc_bias[1];
 1588              		.loc 1 279 27 view .LVU449
 1589 0298 85ED010A 		vstr.32	s0, [r5, #4]
 281:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]) - acc_bias[2];
 1590              		.loc 1 281 8 is_stmt 1 view .LVU450
 282:Core/Src/main.c **** 	      // printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 1591              		.loc 1 282 10 is_stmt 0 view .LVU451
 1592 029c B4F90400 		ldrsh	r0, [r4, #4]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 65


 1593 02a0 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1594              	.LVL113:
 282:Core/Src/main.c **** 	      // printf("Acceleration [mg]:%4.2f\t%4.2f\t%4.2f\r\n",
 1595              		.loc 1 282 60 discriminator 1 view .LVU452
 1596 02a4 F8EECB7A 		vcvt.f32.s32	s15, s22
 1597 02a8 30EE678A 		vsub.f32	s16, s0, s15
 281:Core/Src/main.c **** 	        lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]) - acc_bias[2];
 1598              		.loc 1 281 27 view .LVU453
 1599 02ac 85ED028A 		vstr.32	s16, [r5, #8]
 285:Core/Src/main.c **** 	    }
 1600              		.loc 1 285 9 is_stmt 1 view .LVU454
 285:Core/Src/main.c **** 	    }
 1601              		.loc 1 285 73 is_stmt 0 view .LVU455
 1602 02b0 6E68     		ldr	r6, [r5, #4]	@ float
 285:Core/Src/main.c **** 	    }
 1603              		.loc 1 285 9 view .LVU456
 1604 02b2 2868     		ldr	r0, [r5]	@ float
 1605 02b4 FFF7FEFF 		bl	__aeabi_f2d
 1606              	.LVL114:
 1607 02b8 0446     		mov	r4, r0
 1608 02ba 0D46     		mov	r5, r1
 1609 02bc 18EE100A 		vmov	r0, s16
 1610 02c0 FFF7FEFF 		bl	__aeabi_f2d
 1611              	.LVL115:
 1612 02c4 CDE90201 		strd	r0, [sp, #8]
 1613 02c8 3046     		mov	r0, r6	@ float
 1614 02ca FFF7FEFF 		bl	__aeabi_f2d
 1615              	.LVL116:
 1616 02ce CDE90001 		strd	r0, [sp]
 1617 02d2 2246     		mov	r2, r4
 1618 02d4 2B46     		mov	r3, r5
 1619 02d6 2B48     		ldr	r0, .L80+40
 1620 02d8 FFF7FEFF 		bl	printf
 1621              	.LVL117:
 1622 02dc 63E0     		b	.L72
 1623              	.L79:
 1624              	.LBE17:
 1625              	.LBB18:
 290:Core/Src/main.c **** 	      lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1626              		.loc 1 290 8 is_stmt 1 view .LVU457
 1627 02de 274C     		ldr	r4, .L80+32
 1628 02e0 0023     		movs	r3, #0
 1629 02e2 2360     		str	r3, [r4]
 1630 02e4 A380     		strh	r3, [r4, #4]	@ movhi
 291:Core/Src/main.c **** 	      angular_rate_mdps[0] =
 1631              		.loc 1 291 8 view .LVU458
 1632 02e6 2146     		mov	r1, r4
 1633 02e8 0EA8     		add	r0, sp, #56
 1634 02ea FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1635              	.LVL118:
 292:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]) - gyro_bias[0];
 1636              		.loc 1 292 8 view .LVU459
 293:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 1637              		.loc 1 293 10 is_stmt 0 view .LVU460
 1638 02ee B4F90000 		ldrsh	r0, [r4]
 1639 02f2 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1640              	.LVL119:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 66


 293:Core/Src/main.c **** 	      angular_rate_mdps[1] =
 1641              		.loc 1 293 67 discriminator 1 view .LVU461
 1642 02f6 F8EEE97A 		vcvt.f32.s32	s15, s19
 1643 02fa 30EE670A 		vsub.f32	s0, s0, s15
 292:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]) - gyro_bias[0];
 1644              		.loc 1 292 29 view .LVU462
 1645 02fe 224D     		ldr	r5, .L80+44
 1646 0300 85ED000A 		vstr.32	s0, [r5]
 294:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]) - gyro_bias[1];
 1647              		.loc 1 294 8 is_stmt 1 view .LVU463
 295:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 1648              		.loc 1 295 10 is_stmt 0 view .LVU464
 1649 0304 B4F90200 		ldrsh	r0, [r4, #2]
 1650 0308 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1651              	.LVL120:
 295:Core/Src/main.c **** 	      angular_rate_mdps[2] =
 1652              		.loc 1 295 67 discriminator 1 view .LVU465
 1653 030c F8EEC97A 		vcvt.f32.s32	s15, s18
 1654 0310 30EE670A 		vsub.f32	s0, s0, s15
 294:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]) - gyro_bias[1];
 1655              		.loc 1 294 29 view .LVU466
 1656 0314 85ED010A 		vstr.32	s0, [r5, #4]
 296:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]) - gyro_bias[2];
 1657              		.loc 1 296 8 is_stmt 1 view .LVU467
 297:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 1658              		.loc 1 297 10 is_stmt 0 view .LVU468
 1659 0318 B4F90400 		ldrsh	r0, [r4, #4]
 1660 031c FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1661              	.LVL121:
 297:Core/Src/main.c **** 	      // printf("Angular rate [mdps]:%4.2f\t%4.2f\t%4.2f\r\n", angular_rate_mdps[0], angular_rate_
 1662              		.loc 1 297 67 discriminator 1 view .LVU469
 1663 0320 F8EEE87A 		vcvt.f32.s32	s15, s17
 1664 0324 30EE678A 		vsub.f32	s16, s0, s15
 296:Core/Src/main.c **** 	        lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]) - gyro_bias[2];
 1665              		.loc 1 296 29 view .LVU470
 1666 0328 85ED028A 		vstr.32	s16, [r5, #8]
 299:Core/Src/main.c **** 	    }
 1667              		.loc 1 299 8 is_stmt 1 view .LVU471
 299:Core/Src/main.c **** 	    }
 1668              		.loc 1 299 76 is_stmt 0 view .LVU472
 1669 032c 6E68     		ldr	r6, [r5, #4]	@ float
 299:Core/Src/main.c **** 	    }
 1670              		.loc 1 299 8 view .LVU473
 1671 032e 2868     		ldr	r0, [r5]	@ float
 1672 0330 FFF7FEFF 		bl	__aeabi_f2d
 1673              	.LVL122:
 1674 0334 0446     		mov	r4, r0
 1675 0336 0D46     		mov	r5, r1
 1676 0338 18EE100A 		vmov	r0, s16
 1677 033c FFF7FEFF 		bl	__aeabi_f2d
 1678              	.LVL123:
 1679 0340 CDE90201 		strd	r0, [sp, #8]
 1680 0344 3046     		mov	r0, r6	@ float
 1681 0346 FFF7FEFF 		bl	__aeabi_f2d
 1682              	.LVL124:
 1683 034a CDE90001 		strd	r0, [sp]
 1684 034e 2246     		mov	r2, r4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 67


 1685 0350 2B46     		mov	r3, r5
 1686 0352 0C48     		ldr	r0, .L80+40
 1687 0354 FFF7FEFF 		bl	printf
 1688              	.LVL125:
 1689 0358 2AE0     		b	.L73
 1690              	.L81:
 1691 035a 00BF     		.align	2
 1692              	.L80:
 1693 035c 00000000 		.word	lsm6dsm_platform_write
 1694 0360 00000000 		.word	lsm6dsm_platform_read
 1695 0364 00000000 		.word	hspi1
 1696 0368 00000000 		.word	llcc68_platform_write_read
 1697 036c 00000000 		.word	llcc68_platform_reset
 1698 0370 00000000 		.word	whoamI
 1699 0374 00000000 		.word	rst
 1700 0378 00000000 		.word	data_raw_acceleration
 1701 037c 00000000 		.word	data_raw_angular_rate
 1702 0380 00000000 		.word	acceleration_mg
 1703 0384 00000000 		.word	.LC1
 1704 0388 00000000 		.word	angular_rate_mdps
 1705              	.L74:
 1706              	.LBE18:
 333:Core/Src/main.c ****   }
 1707              		.loc 1 333 7 is_stmt 1 view .LVU474
 1708 038c 6420     		movs	r0, #100
 1709 038e FFF7FEFF 		bl	platform_delay
 1710              	.LVL126:
 1711              	.LBE16:
 251:Core/Src/main.c ****   {
 1712              		.loc 1 251 9 view .LVU475
 1713              	.L75:
 251:Core/Src/main.c ****   {
 1714              		.loc 1 251 3 view .LVU476
 1715              	.LBB20:
 269:Core/Src/main.c **** 	    /* Read output only if new value is available */
 1716              		.loc 1 269 6 view .LVU477
 271:Core/Src/main.c **** 
 1717              		.loc 1 271 6 view .LVU478
 1718 0392 04A9     		add	r1, sp, #16
 1719 0394 0EA8     		add	r0, sp, #56
 1720 0396 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1721              	.LVL127:
 273:Core/Src/main.c **** 	      /* Read acceleration field data */
 1722              		.loc 1 273 6 view .LVU479
 273:Core/Src/main.c **** 	      /* Read acceleration field data */
 1723              		.loc 1 273 10 is_stmt 0 view .LVU480
 1724 039a 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 273:Core/Src/main.c **** 	      /* Read acceleration field data */
 1725              		.loc 1 273 9 view .LVU481
 1726 039e 13F0010F 		tst	r3, #1
 1727 03a2 7FF45EAF 		bne	.L78
 1728              	.L72:
 288:Core/Src/main.c **** 	      /* Read angular rate field data */
 1729              		.loc 1 288 6 is_stmt 1 view .LVU482
 288:Core/Src/main.c **** 	      /* Read angular rate field data */
 1730              		.loc 1 288 10 is_stmt 0 view .LVU483
 1731 03a6 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 68


 288:Core/Src/main.c **** 	      /* Read angular rate field data */
 1732              		.loc 1 288 9 view .LVU484
 1733 03aa 13F0020F 		tst	r3, #2
 1734 03ae 96D1     		bne	.L79
 1735              	.L73:
 301:Core/Src/main.c **** 	      /* Read temperature data */
 1736              		.loc 1 301 6 is_stmt 1 view .LVU485
 301:Core/Src/main.c **** 	      /* Read temperature data */
 1737              		.loc 1 301 10 is_stmt 0 view .LVU486
 1738 03b0 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 301:Core/Src/main.c **** 	      /* Read temperature data */
 1739              		.loc 1 301 9 view .LVU487
 1740 03b4 13F0040F 		tst	r3, #4
 1741 03b8 E8D0     		beq	.L74
 1742              	.LBB19:
 303:Core/Src/main.c **** 	      lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 1743              		.loc 1 303 8 is_stmt 1 view .LVU488
 1744 03ba 0C4C     		ldr	r4, .L82
 1745 03bc 0023     		movs	r3, #0
 1746 03be 2380     		strh	r3, [r4]	@ movhi
 304:Core/Src/main.c **** 	      temperature_degC = lsm6dsm_from_lsb_to_celsius(
 1747              		.loc 1 304 8 view .LVU489
 1748 03c0 2146     		mov	r1, r4
 1749 03c2 0EA8     		add	r0, sp, #56
 1750 03c4 FFF7FEFF 		bl	lsm6dsm_temperature_raw_get
 1751              	.LVL128:
 305:Core/Src/main.c **** 	                           data_raw_temperature);
 1752              		.loc 1 305 8 view .LVU490
 305:Core/Src/main.c **** 	                           data_raw_temperature);
 1753              		.loc 1 305 27 is_stmt 0 view .LVU491
 1754 03c8 B4F90000 		ldrsh	r0, [r4]
 1755 03cc FFF7FEFF 		bl	lsm6dsm_from_lsb_to_celsius
 1756              	.LVL129:
 1757 03d0 10EE100A 		vmov	r0, s0
 305:Core/Src/main.c **** 	                           data_raw_temperature);
 1758              		.loc 1 305 25 discriminator 1 view .LVU492
 1759 03d4 064B     		ldr	r3, .L82+4
 1760 03d6 83ED000A 		vstr.32	s0, [r3]
 309:Core/Src/main.c **** 	    }
 1761              		.loc 1 309 9 is_stmt 1 view .LVU493
 1762 03da FFF7FEFF 		bl	__aeabi_f2d
 1763              	.LVL130:
 1764 03de 0246     		mov	r2, r0
 1765 03e0 0B46     		mov	r3, r1
 1766 03e2 0448     		ldr	r0, .L82+8
 1767 03e4 FFF7FEFF 		bl	printf
 1768              	.LVL131:
 1769 03e8 D0E7     		b	.L74
 1770              	.L83:
 1771 03ea 00BF     		.align	2
 1772              	.L82:
 1773 03ec 00000000 		.word	data_raw_temperature
 1774 03f0 00000000 		.word	temperature_degC
 1775 03f4 14000000 		.word	.LC2
 1776              	.LBE19:
 1777              	.LBE20:
 1778              		.cfi_endproc
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 69


 1779              	.LFE134:
 1781              		.section	.bss.rst,"aw",%nobits
 1784              	rst:
 1785 0000 00       		.space	1
 1786              		.section	.bss.whoamI,"aw",%nobits
 1789              	whoamI:
 1790 0000 00       		.space	1
 1791              		.section	.bss.temperature_degC,"aw",%nobits
 1792              		.align	2
 1795              	temperature_degC:
 1796 0000 00000000 		.space	4
 1797              		.section	.bss.angular_rate_mdps,"aw",%nobits
 1798              		.align	2
 1801              	angular_rate_mdps:
 1802 0000 00000000 		.space	12
 1802      00000000 
 1802      00000000 
 1803              		.section	.bss.acceleration_mg,"aw",%nobits
 1804              		.align	2
 1807              	acceleration_mg:
 1808 0000 00000000 		.space	12
 1808      00000000 
 1808      00000000 
 1809              		.section	.bss.data_raw_temperature,"aw",%nobits
 1810              		.align	1
 1813              	data_raw_temperature:
 1814 0000 0000     		.space	2
 1815              		.section	.bss.data_raw_angular_rate,"aw",%nobits
 1816              		.align	2
 1819              	data_raw_angular_rate:
 1820 0000 00000000 		.space	6
 1820      0000
 1821              		.section	.bss.data_raw_acceleration,"aw",%nobits
 1822              		.align	2
 1825              	data_raw_acceleration:
 1826 0000 00000000 		.space	6
 1826      0000
 1827              		.global	temp
 1828              		.section	.bss.temp,"aw",%nobits
 1829              		.align	1
 1832              	temp:
 1833 0000 0000     		.space	2
 1834              		.global	huart1
 1835              		.section	.bss.huart1,"aw",%nobits
 1836              		.align	2
 1839              	huart1:
 1840 0000 00000000 		.space	72
 1840      00000000 
 1840      00000000 
 1840      00000000 
 1840      00000000 
 1841              		.global	hspi1
 1842              		.section	.bss.hspi1,"aw",%nobits
 1843              		.align	2
 1846              	hspi1:
 1847 0000 00000000 		.space	88
 1847      00000000 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 70


 1847      00000000 
 1847      00000000 
 1847      00000000 
 1848              		.global	hsd
 1849              		.section	.bss.hsd,"aw",%nobits
 1850              		.align	2
 1853              	hsd:
 1854 0000 00000000 		.space	132
 1854      00000000 
 1854      00000000 
 1854      00000000 
 1854      00000000 
 1855              		.global	hi2c1
 1856              		.section	.bss.hi2c1,"aw",%nobits
 1857              		.align	2
 1860              	hi2c1:
 1861 0000 00000000 		.space	84
 1861      00000000 
 1861      00000000 
 1861      00000000 
 1861      00000000 
 1862              		.text
 1863              	.Letext0:
 1864              		.file 3 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/ma
 1865              		.file 4 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/sy
 1866              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1867              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1868              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1869              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1870              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1871              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1872              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1873              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1874              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1875              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1876              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1877              		.file 16 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/m
 1878              		.file 17 "Drivers/LSM6DSM/Inc/lsm6dsm_reg.h"
 1879              		.file 18 "Drivers/LLCC68/Inc/llcc68_hal.h"
 1880              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1881              		.file 20 "<built-in>"
 1882              		.file 21 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 71


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:21     .text.MX_SDIO_SD_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:26     .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:62     .text.MX_SDIO_SD_Init:00000018 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1853   .bss.hsd:00000000 hsd
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:68     .text.llcc68_platform_reset:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:73     .text.llcc68_platform_reset:00000000 llcc68_platform_reset
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:115    .text.llcc68_platform_reset:00000028 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:120    .text.platform_delay:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:125    .text.platform_delay:00000000 platform_delay
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:146    .text.lsm6dsm_platform_write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:151    .text.lsm6dsm_platform_write:00000000 lsm6dsm_platform_write
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:217    .text.lsm6dsm_platform_write:00000048 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:222    .text.llcc68_platform_write_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:227    .text.llcc68_platform_write_read:00000000 llcc68_platform_write_read
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:335    .text.llcc68_platform_write_read:00000068 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1846   .bss.hspi1:00000000 hspi1
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:341    .text.lsm6dsm_platform_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:346    .text.lsm6dsm_platform_read:00000000 lsm6dsm_platform_read
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:419    .text.lsm6dsm_platform_read:00000054 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:424    .text.MX_GPIO_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:429    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:661    .text.MX_GPIO_Init:0000010c $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:668    .text._write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:674    .text._write:00000000 _write
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:706    .text._write:00000014 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1839   .bss.huart1:00000000 huart1
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:711    .text.Error_Handler:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:717    .text.Error_Handler:00000000 Error_Handler
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:749    .text.MX_SPI1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:754    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:821    .text.MX_SPI1_Init:00000038 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:827    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:832    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:886    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:892    .rodata.MX_I2C1_Init.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:896    .text.MX_I2C1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:901    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:998    .text.MX_I2C1_Init:0000006c $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1860   .bss.hi2c1:00000000 hi2c1
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1007   .text.SystemClock_Config:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1013   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1154   .text.SystemClock_Config:00000090 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1161   .rodata.main.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1168   .text.main:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1174   .text.main:00000000 main
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1693   .text.main:0000035c $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1789   .bss.whoamI:00000000 whoamI
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1784   .bss.rst:00000000 rst
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1825   .bss.data_raw_acceleration:00000000 data_raw_acceleration
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1819   .bss.data_raw_angular_rate:00000000 data_raw_angular_rate
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1807   .bss.acceleration_mg:00000000 acceleration_mg
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1801   .bss.angular_rate_mdps:00000000 angular_rate_mdps
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1708   .text.main:0000038c $t
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1773   .text.main:000003ec $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1813   .bss.data_raw_temperature:00000000 data_raw_temperature
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s 			page 72


C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1795   .bss.temperature_degC:00000000 temperature_degC
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1785   .bss.rst:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1790   .bss.whoamI:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1792   .bss.temperature_degC:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1798   .bss.angular_rate_mdps:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1804   .bss.acceleration_mg:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1810   .bss.data_raw_temperature:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1816   .bss.data_raw_angular_rate:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1822   .bss.data_raw_acceleration:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1832   .bss.temp:00000000 temp
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1829   .bss.temp:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1836   .bss.huart1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1843   .bss.hspi1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1850   .bss.hsd:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\cclxL2T1.s:1857   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
HAL_SPI_Transmit
HAL_SPI_Receive
HAL_GPIO_Init
HAL_UART_Transmit
HAL_SPI_Init
HAL_UART_Init
HAL_I2C_Init
HAL_I2C_IsDeviceReady
HAL_I2C_Mem_Write
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_FATFS_Init
lsm6dsm_spi_mode_set
lsm6dsm_auto_increment_set
lsm6dsm_device_id_get
lsm6dsm_reset_get
lsm6dsm_block_data_update_set
lsm6dsm_xl_data_rate_set
lsm6dsm_gy_data_rate_set
lsm6dsm_xl_full_scale_set
lsm6dsm_gy_full_scale_set
lsm6dsm_xl_filter_analog_set
lsm6dsm_xl_lp2_bandwidth_set
lsm6dsm_gy_band_pass_set
lsm6dsm_acceleration_raw_get
lsm6dsm_from_fs2g_to_mg
lsm6dsm_status_reg_get
lsm6dsm_angular_rate_raw_get
lsm6dsm_from_fs2000dps_to_mdps
printf
lsm6dsm_temperature_raw_get
lsm6dsm_from_lsb_to_celsius
