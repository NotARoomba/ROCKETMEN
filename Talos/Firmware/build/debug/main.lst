ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_SDIO_SD_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <lsm6dsm_reg.h>
  26:Core/Src/main.c **** #include <stm32f405xx.h>
  27:Core/Src/main.c **** #include <llcc68_hal.h>
  28:Core/Src/main.c **** #include <llcc68.h>
  29:Core/Src/main.c **** #include <bmp5.h>
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** SD_HandleTypeDef hsd;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** UART_HandleTypeDef huart1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  64:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  65:Core/Src/main.c **** static void MX_I2C1_Init(void);
  66:Core/Src/main.c **** static void MX_SPI1_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** // function prototype
  69:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
  70:Core/Src/main.c ****                               uint16_t len);
  71:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
  72:Core/Src/main.c ****                              uint16_t len);
  73:Core/Src/main.c **** static void platform_delay(uint32_t ms);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t *command, uint16_t command_le
  76:Core/Src/main.c ****                                           uint8_t *data, uint16_t data_length);
  77:Core/Src/main.c ****                                           static int32_t llcc68_platform_read(void *handle, const u
  78:Core/Src/main.c ****                                           uint8_t *data, uint16_t data_length);
  79:Core/Src/main.c ****                                           static int32_t llcc68_platform_write(void *handle, const 
  80:Core/Src/main.c ****                                           const uint8_t *data, uint16_t data_length);
  81:Core/Src/main.c **** static int32_t llcc68_platform_reset(void *handle);
  82:Core/Src/main.c **** static int32_t bmp5_read(uint8_t reg_addr, uint8_t *read_data, uint32_t len, void *intf_ptr);
  83:Core/Src/main.c **** static int32_t bmp5_write(uint8_t reg_addr,
  84:Core/Src/main.c ****   const uint8_t * reg_data, uint32_t len, void *intf_ptr);
  85:Core/Src/main.c ****   void bmp5_error_codes_print_result(const char api_name[], int8_t rslt);
  86:Core/Src/main.c ****   static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_de
  87:Core/Src/main.c **** /* USER CODE END PFP */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 3


  89:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  90:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  91:Core/Src/main.c ****   int16_t temp;
  92:Core/Src/main.c **** //variable initialization
  93:Core/Src/main.c **** static int16_t data_raw_acceleration[3];
  94:Core/Src/main.c **** static int16_t data_raw_angular_rate[3];
  95:Core/Src/main.c **** static int16_t data_raw_temperature;
  96:Core/Src/main.c **** static float acceleration_mg[3];
  97:Core/Src/main.c **** static float angular_rate_mdps[3];
  98:Core/Src/main.c **** static float temperature_degC;
  99:Core/Src/main.c **** static uint8_t whoamI, rst;
 100:Core/Src/main.c **** float filtered_acc[3] = {0};
 101:Core/Src/main.c **** float filtered_gyro[3] = {0};
 102:Core/Src/main.c **** const float alpha = 0.1f; 
 103:Core/Src/main.c **** /* USER CODE END 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief  The application entry point.
 107:Core/Src/main.c ****   * @retval int
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** int main(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END 1 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Core/Src/main.c ****   HAL_Init();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END Init */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Configure the system clock */
 126:Core/Src/main.c ****   SystemClock_Config();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE END SysInit */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Initialize all configured peripherals */
 133:Core/Src/main.c ****   MX_GPIO_Init();
 134:Core/Src/main.c ****   MX_SDIO_SD_Init();
 135:Core/Src/main.c ****   MX_USART1_UART_Init();
 136:Core/Src/main.c ****   MX_I2C1_Init();
 137:Core/Src/main.c ****   MX_FATFS_Init();
 138:Core/Src/main.c ****   MX_SPI1_Init();
 139:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   //  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****    // variable initialization for sensor access
 144:Core/Src/main.c ****   stmdev_ctx_t dev_ctx;
 145:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 4


 146:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 147:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   llcc68_ctx_t radio_ctx;
 150:Core/Src/main.c ****   radio_ctx.write_reg = llcc68_platform_write;
 151:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_read;
 152:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 153:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 154:Core/Src/main.c ****   radio_ctx.gpio = CS_WIRELESS_GPIO_Port;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   // int8_t rslt;
 157:Core/Src/main.c ****   // struct bmp5_dev bmp5_ctx;
 158:Core/Src/main.c ****   // bmp5_ctx.intf = BMP5_SPI_INTF;
 159:Core/Src/main.c ****   // bmp5_ctx.intf_ptr = &hspi1;
 160:Core/Src/main.c ****   // bmp5_ctx.read = (bmp5_read_fptr_t) &bmp5_read;
 161:Core/Src/main.c ****   // bmp5_ctx.write = (bmp5_write_fptr_t) &bmp5_write;
 162:Core/Src/main.c ****   // bmp5_ctx.delay_us = (bmp5_delay_us_fptr_t) &platform_delay;
 163:Core/Src/main.c ****   // struct bmp5_osr_odr_press_config osr_odr_press_cfg = { 0 };
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* Wait sensor boot time */
 166:Core/Src/main.c ****   platform_delay(1000);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   // PRESSURE SENSOR CONFIGURATION
 169:Core/Src/main.c ****   // bmp5_read(BMP5_REG_CHIP_ID, &whoamI, 1, &hspi1);
 170:Core/Src/main.c ****   // printf("Pressure sensor who am I: %d\n", whoamI);
 171:Core/Src/main.c ****   // rslt = bmp5_init(&bmp5_ctx);
 172:Core/Src/main.c ****   // bmp5_error_codes_print_result("bmp5_init", rslt);
 173:Core/Src/main.c ****   // if (rslt == BMP5_OK) {
 174:Core/Src/main.c ****   //   rslt = bmp5_set_config(&osr_odr_press_cfg, &bmp5_ctx);
 175:Core/Src/main.c ****   //   bmp5_error_codes_print_result("set_config", rslt);
 176:Core/Src/main.c ****   // }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   // IMU CONFIGURATION
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   //set SPI as 3 wire communication
 181:Core/Src/main.c ****   lsm6dsm_spi_mode_set(&dev_ctx,LSM6DSM_SPI_3_WIRE);
 182:Core/Src/main.c ****   //set auto increment to read several register at same time
 183:Core/Src/main.c ****   lsm6dsm_auto_increment_set(&dev_ctx, 1);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* Check device ID */
 186:Core/Src/main.c ****   lsm6dsm_device_id_get(&dev_ctx, &whoamI);
 187:Core/Src/main.c ****   
 188:Core/Src/main.c ****   if (whoamI != LSM6DSM_ID)
 189:Core/Src/main.c ****     while (1) {
 190:Core/Src/main.c ****       /* manage here device not found */
 191:Core/Src/main.c ****     }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* Restore default configuration */
 194:Core/Src/main.c ****   // you should not call this function because it will give uncorrect output register value
 195:Core/Src/main.c ****   //lsm6dsm_reset_set(&dev_ctx, PROPERTY_ENABLE);
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   do {
 198:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 199:Core/Src/main.c ****   } while (rst);
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /*  Enable Block Data Update */
 202:Core/Src/main.c ****   lsm6dsm_block_data_update_set(&dev_ctx, PROPERTY_ENABLE);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 5


 203:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 204:Core/Src/main.c ****   lsm6dsm_xl_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_6k66Hz);
 205:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_6k66Hz);
 206:Core/Src/main.c ****   /* Set full scale */
 207:Core/Src/main.c ****   lsm6dsm_xl_full_scale_set(&dev_ctx, LSM6DSM_2g);
 208:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 209:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 210:Core/Src/main.c ****    * Accelerometer - analog filter
 211:Core/Src/main.c ****    */
 212:Core/Src/main.c ****   lsm6dsm_xl_filter_analog_set(&dev_ctx, LSM6DSM_XL_ANA_BW_400Hz);
 213:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 214:Core/Src/main.c ****   //lsm6dsm_xl_lp1_bandwidth_set(&dev_ctx, LSM6DSM_XL_LP1_ODR_DIV_4);
 215:Core/Src/main.c ****   /* Accelerometer - LPF1 + LPF2 path */
 216:Core/Src/main.c ****   lsm6dsm_xl_lp2_bandwidth_set(&dev_ctx,
 217:Core/Src/main.c ****                                LSM6DSM_XL_LOW_LAT_LP_ODR_DIV_400);
 218:Core/Src/main.c ****   /* Accelerometer - High Pass / Slope path */
 219:Core/Src/main.c ****   //lsm6dsm_xl_reference_mode_set(&dev_ctx, PROPERTY_DISABLE);
 220:Core/Src/main.c ****   //lsm6dsm_xl_hp_bandwidth_set(&dev_ctx, LSM6DSM_XL_HP_ODR_DIV_100);
 221:Core/Src/main.c ****   /* Gyroscope - filtering chain */
 222:Core/Src/main.c ****   lsm6dsm_gy_band_pass_set(&dev_ctx, LSM6DSM_HP_DISABLE_LP1_AGGRESSIVE);
 223:Core/Src/main.c ****   // update the offset bias of acceleration
 224:Core/Src/main.c ****   platform_delay(2000);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   const int SAMPLE_SIZE = 1000;
 227:Core/Src/main.c ****   //create a while loop that gets 5 sample of acceleration and calculate the average, then set the 
 228:Core/Src/main.c ****   int16_t acc_bias[3] = {0, 0, 0};
 229:Core/Src/main.c ****   int i = 0;
 230:Core/Src/main.c ****   do {
 231:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 232:Core/Src/main.c ****       /* Read output only if new value is available */
 233:Core/Src/main.c ****       lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 234:Core/Src/main.c ****       if (reg.status_reg.xlda) {
 235:Core/Src/main.c ****         /* Read acceleration field data */
 236:Core/Src/main.c ****         memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 237:Core/Src/main.c ****         lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 238:Core/Src/main.c ****         acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 239:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 240:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 241:Core/Src/main.c ****         // platform_delay(100);
 242:Core/Src/main.c ****         i++;
 243:Core/Src/main.c ****       }
 244:Core/Src/main.c ****   } while (i < SAMPLE_SIZE);
 245:Core/Src/main.c ****   acc_bias[0] /= SAMPLE_SIZE;
 246:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 247:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 248:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 249:Core/Src/main.c ****   //   lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 250:Core/Src/main.c ****   //   acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 251:Core/Src/main.c ****   //   acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 252:Core/Src/main.c ****   //   acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 253:Core/Src/main.c ****   //   platform_delay(100);
 254:Core/Src/main.c ****   // } 
 255:Core/Src/main.c ****   // acc_bias[0] /= 10;
 256:Core/Src/main.c ****   // acc_bias[1] /= 10;
 257:Core/Src/main.c ****   // acc_bias[2] /= 10;
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   // lsm6dsm_xl_usr_offset_set(&dev_ctx, (uint8_t*)acc_bias);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   // do the same for gyro
 262:Core/Src/main.c ****   int16_t gyro_bias[3] = {0, 0, 0};
 263:Core/Src/main.c ****   i = 0;
 264:Core/Src/main.c ****   do {
 265:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 266:Core/Src/main.c **** 	    /* Read output only if new value is available */
 267:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 268:Core/Src/main.c ****       if (reg.status_reg.gda) {
 269:Core/Src/main.c ****         /* Read angular rate field data */
 270:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 271:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 272:Core/Src/main.c ****         gyro_bias[0] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 273:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 274:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 275:Core/Src/main.c ****         // platform_delay(100);
 276:Core/Src/main.c ****         i++;
 277:Core/Src/main.c ****       }
 278:Core/Src/main.c ****   } while (i < SAMPLE_SIZE);
 279:Core/Src/main.c ****   gyro_bias[0] /= SAMPLE_SIZE;
 280:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 281:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   gyro_bias[0] = 0;
 284:Core/Src/main.c ****   gyro_bias[1] = 0;
 285:Core/Src/main.c ****   gyro_bias[2] = 0;
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   // LORA MODULE CONFIGURATION
 288:Core/Src/main.c ****   // llcc68_reset(&radio_ctx);
 289:Core/Src/main.c ****   // platform_delay(100);
 290:Core/Src/main.c ****   //   llcc68_set_standby(&radio_ctx, LLCC68_STANDBY_CFG_RC);
 291:Core/Src/main.c ****   //   llcc68_set_pkt_type(&radio_ctx, LLCC68_PKT_TYPE_LORA);
 292:Core/Src/main.c ****   //   llcc68_set_rf_freq(&radio_ctx, 433000000);
 293:Core/Src/main.c ****   // //   // // 17dBm
 294:Core/Src/main.c ****   // //   // // {0x03, 0x05, 0x00, 0x01}
 295:Core/Src/main.c ****   //   const llcc68_pa_cfg_params_t pa_cfg = {0x03,
 296:Core/Src/main.c ****   //     0x05,
 297:Core/Src/main.c ****   //    0x00,
 298:Core/Src/main.c ****   //     0x01
 299:Core/Src/main.c ****   //   };
 300:Core/Src/main.c ****   //   const llcc68_pkt_params_lora_t pkt_params = {14, LLCC68_LORA_PKT_EXPLICIT, 14, true, false};
 301:Core/Src/main.c ****   //   const llcc68_mod_params_lora_t mod_params = {LLCC68_LORA_SF11, LLCC68_LORA_BW_250, LLCC68_LO
 302:Core/Src/main.c ****   //   llcc68_set_pa_cfg(&radio_ctx, &pa_cfg);
 303:Core/Src/main.c ****   //   // //The output power is defined as power in dBm in a range of - 9 (0xF7) to +22 (0x16) dBm 
 304:Core/Src/main.c ****   //   llcc68_set_tx_params(&radio_ctx, 0x16, LLCC68_RAMP_200_US);
 305:Core/Src/main.c ****   //   // llcc68_set_lora_mod_params(&radio_ctx, &mod_params);
 306:Core/Src/main.c ****   //   // llcc68_set_lora_pkt_params(&radio_ctx, &pkt_params);
 307:Core/Src/main.c ****   //    platform_delay(100);
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END 2 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* Infinite loop */
 312:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 313:Core/Src/main.c ****   while (1)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t*)"Hello World!\r\n", 14, 1000);
 316:Core/Src/main.c ****     // TEMPERATURE SENSOR INIT
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     // if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) == HAL_OK) {
 319:Core/Src/main.c ****     //   if (HAL_I2C_Master_Transmit(&hi2c1, 0x41 << 1, (uint8_t*)0xBC, 2, 1000) == HAL_OK) {
 320:Core/Src/main.c ****     //     uint8_t tempData[3];
 321:Core/Src/main.c ****     //     if (HAL_I2C_Master_Receive(&hi2c1, 0x41 << 1, &tempData, 3, 1000) == HAL_OK) {
 322:Core/Src/main.c ****     //       temp = (int16_t)((tempData[1] << 8) | tempData[0]);
 323:Core/Src/main.c ****     //       float tempFloat = ((float)temp/256.0f)+25.0f;
 324:Core/Src/main.c ****     //       printf("Temperature: %.3f\r\n", tempFloat);
 325:Core/Src/main.c ****     //     }
 326:Core/Src/main.c ****     //   }
 327:Core/Src/main.c ****     // }
 328:Core/Src/main.c ****     /* USER CODE END WHILE */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 331:Core/Src/main.c ****      lsm6dsm_reg_t reg;
 332:Core/Src/main.c **** 	    /* Read output only if new value is available */
 333:Core/Src/main.c **** 	    lsm6dsm_status_reg_get(&dev_ctx, &reg.status_reg);
 334:Core/Src/main.c **** 	    if (reg.status_reg.xlda) {
 335:Core/Src/main.c ****         memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 336:Core/Src/main.c ****         lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 337:Core/Src/main.c ****         for (int j = 0; j < 3; j++) {
 338:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 339:Core/Src/main.c ****             filtered_acc[j] = alpha * raw + (1.0f - alpha) * filtered_acc[j];
 340:Core/Src/main.c ****         }
 341:Core/Src/main.c ****         // printf("ACCEL:%4.2f,%4.2f,%4.2f\r\n", filtered_acc[0], filtered_acc[1], filtered_acc[2])
 342:Core/Src/main.c ****     }
 343:Core/Src/main.c ****     
 344:Core/Src/main.c ****     if (reg.status_reg.gda) {
 345:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 346:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 347:Core/Src/main.c ****         for (int j = 0; j < 3; j++) {
 348:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 349:Core/Src/main.c ****             filtered_gyro[j] = alpha * raw + (1.0f - alpha) * filtered_gyro[j];
 350:Core/Src/main.c ****         }
 351:Core/Src/main.c ****         // printf("GYRO:%4.2f,%4.2f,%4.2f\r\n", filtered_gyro[0], filtered_gyro[1], filtered_gyro[2
 352:Core/Src/main.c ****     }
 353:Core/Src/main.c **** 	    if (reg.status_reg.tda) {
 354:Core/Src/main.c **** 	      /* Read temperature data */
 355:Core/Src/main.c **** 	      memset(&data_raw_temperature, 0x00, sizeof(int16_t));
 356:Core/Src/main.c **** 	      lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 357:Core/Src/main.c **** 	      temperature_degC = lsm6dsm_from_lsb_to_celsius(
 358:Core/Src/main.c **** 	                           data_raw_temperature);
 359:Core/Src/main.c **** 	      // printf("Temperature [degC]:%6.2f\r\n",
 360:Core/Src/main.c **** 	      //         temperature_degC);
 361:Core/Src/main.c ****         // printf("TEMP:%.2f,101.325\r\n", temperature_degC);
 362:Core/Src/main.c **** 	    }
 363:Core/Src/main.c ****       printf("%4.2f,%4.2f,%4.2f,%4.2f,%4.2f,%4.2f,%.2f,101.325\r\n", filtered_acc[0], filtered_acc[
 364:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 365:Core/Src/main.c ****       // acceleration_mg[1] = 0;
 366:Core/Src/main.c ****       // acceleration_mg[2] = 0;
 367:Core/Src/main.c ****       // angular_rate_mdps[0] = 0;
 368:Core/Src/main.c ****       // angular_rate_mdps[1] = 0;
 369:Core/Src/main.c ****       // angular_rate_mdps[2] = 0;
 370:Core/Src/main.c ****       // temperature_degC = 0;
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****       // uint8_t int_status;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 8


 374:Core/Src/main.c ****       // struct bmp5_sensor_data bmp5_data;
 375:Core/Src/main.c ****       //   rslt = bmp5_get_interrupt_status(&int_status, &bmp5_ctx);
 376:Core/Src/main.c ****       //   bmp5_error_codes_print_result("bmp5_get_interrupt_status", rslt);
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****       //   if (int_status & BMP5_INT_ASSERTED_DRDY)
 379:Core/Src/main.c ****       //   {
 380:Core/Src/main.c ****       //       rslt = bmp5_get_sensor_data(&bmp5_data, &osr_odr_press_cfg, &bmp5_ctx);
 381:Core/Src/main.c ****       //       bmp5_error_codes_print_result("bmp5_get_sensor_data", rslt);
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****       //       if (rslt == BMP5_OK)
 384:Core/Src/main.c ****       //       {
 385:Core/Src/main.c ****       //           printf("%f\r\n", bmp5_data.pressure);
 386:Core/Src/main.c ****       //       }
 387:Core/Src/main.c ****       //   }
 388:Core/Src/main.c ****     //   llcc68_set_buffer_base_address(&radio_ctx, 0x00, 0x00);
 389:Core/Src/main.c ****     // llcc68_write_buffer(&radio_ctx, 0x00, (uint8_t*)"Hello World!\r\n", 14);
 390:Core/Src/main.c ****     // llcc68_set_lora_mod_params(&radio_ctx, &mod_params);
 391:Core/Src/main.c ****     // llcc68_set_lora_pkt_params(&radio_ctx, &pkt_params);
 392:Core/Src/main.c ****     // llcc68_set_dio_irq_params(&radio_ctx, LLCC68_IRQ_TX_DONE | LLCC68_IRQ_RX_DONE, LLCC68_IRQ_TX
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C0, (uint8_t)0x12, 1);
 395:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C1, (uint8_t)0x23, 1);
 396:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C2, (uint8_t)0x34, 1);
 397:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C3, (uint8_t)0x45, 1);
 398:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C4, (uint8_t)0x56, 1);
 399:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C5, (uint8_t)0x67, 1);
 400:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C6, (uint8_t)0x78, 1);
 401:Core/Src/main.c ****     // llcc68_write_register(&radio_ctx, 0x06C7, (uint8_t)0x89, 1);
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****     // llcc68_set_tx(&radio_ctx, 100);
 404:Core/Src/main.c ****     // platform_delay(100);
 405:Core/Src/main.c ****     // //  llcc68_set_standby(&radio_ctx, LLCC68_STANDBY_CFG_RC);
 406:Core/Src/main.c ****     //   llcc68_chip_status_t chip_status;
 407:Core/Src/main.c ****     //   llcc68_get_status(&radio_ctx, &chip_status);
 408:Core/Src/main.c ****     //   printf("Chip Mode: %d, Chip Status: %d\r\n", chip_status.chip_mode, chip_status.cmd_status
 409:Core/Src/main.c ****     //  // print if busy or not with busy gpio pin
 410:Core/Src/main.c ****     //  HAL_GPIO_ReadPin(BUSY_GPIO_Port, BUSY_Pin) == GPIO_PIN_SET ? printf("Busy\r\n") : printf("N
 411:Core/Src/main.c ****     //   platform_delay(100);
 412:Core/Src/main.c ****   }
 413:Core/Src/main.c ****   /* USER CODE END 3 */
 414:Core/Src/main.c **** }
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** /**
 417:Core/Src/main.c ****   * @brief System Clock Configuration
 418:Core/Src/main.c ****   * @retval None
 419:Core/Src/main.c ****   */
 420:Core/Src/main.c **** void SystemClock_Config(void)
 421:Core/Src/main.c **** {
 422:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 423:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 428:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 9


 431:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 432:Core/Src/main.c ****   */
 433:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 434:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 435:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 436:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 437:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 438:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 439:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 128;
 440:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 441:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 6;
 442:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 443:Core/Src/main.c ****   {
 444:Core/Src/main.c ****     Error_Handler();
 445:Core/Src/main.c ****   }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 448:Core/Src/main.c ****   */
 449:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 450:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 451:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 452:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 453:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 454:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 457:Core/Src/main.c ****   {
 458:Core/Src/main.c ****     Error_Handler();
 459:Core/Src/main.c ****   }
 460:Core/Src/main.c **** }
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** /**
 463:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 464:Core/Src/main.c ****   * @param None
 465:Core/Src/main.c ****   * @retval None
 466:Core/Src/main.c ****   */
 467:Core/Src/main.c **** static void MX_I2C1_Init(void)
 468:Core/Src/main.c **** {
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 477:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 478:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 479:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 480:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 481:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 482:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 483:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 484:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 485:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 486:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 487:Core/Src/main.c ****   {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 10


 488:Core/Src/main.c ****     Error_Handler();
 489:Core/Src/main.c ****   }
 490:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 491:Core/Src/main.c ****     if (HAL_I2C_IsDeviceReady(&hi2c1, 0x41 << 1, 2, 1000) != HAL_OK) {
 492:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 493:Core/Src/main.c ****     } else {
 494:Core/Src/main.c ****       HAL_I2C_Mem_Write(&hi2c1, 0x41 << 1, 0x04, 1, (uint8_t*)0x00, 1, 1000);
 495:Core/Src/main.c ****     }
 496:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** }
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** /**
 501:Core/Src/main.c ****   * @brief SDIO Initialization Function
 502:Core/Src/main.c ****   * @param None
 503:Core/Src/main.c ****   * @retval None
 504:Core/Src/main.c ****   */
 505:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 506:Core/Src/main.c **** {
  28              		.loc 1 506 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 515:Core/Src/main.c ****   hsd.Instance = SDIO;
  33              		.loc 1 515 3 view .LVU1
  34              		.loc 1 515 16 is_stmt 0 view .LVU2
  35 0000 054B     		ldr	r3, .L2
  36 0002 064A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 516:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  38              		.loc 1 516 3 is_stmt 1 view .LVU3
  39              		.loc 1 516 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 517:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 517 3 is_stmt 1 view .LVU5
  43              		.loc 1 517 24 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 518:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 518 3 is_stmt 1 view .LVU7
  46              		.loc 1 518 27 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 519:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  48              		.loc 1 519 3 is_stmt 1 view .LVU9
  49              		.loc 1 519 20 is_stmt 0 view .LVU10
  50 000e 1A61     		str	r2, [r3, #16]
 520:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  51              		.loc 1 520 3 is_stmt 1 view .LVU11
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 11


  52              		.loc 1 520 32 is_stmt 0 view .LVU12
  53 0010 5A61     		str	r2, [r3, #20]
 521:Core/Src/main.c ****   hsd.Init.ClockDiv = 0;
  54              		.loc 1 521 3 is_stmt 1 view .LVU13
  55              		.loc 1 521 21 is_stmt 0 view .LVU14
  56 0012 9A61     		str	r2, [r3, #24]
 522:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
  57              		.loc 1 526 1 view .LVU15
  58 0014 7047     		bx	lr
  59              	.L3:
  60 0016 00BF     		.align	2
  61              	.L2:
  62 0018 00000000 		.word	hsd
  63 001c 002C0140 		.word	1073818624
  64              		.cfi_endproc
  65              	.LFE137:
  67              		.section	.text.llcc68_platform_reset,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	llcc68_platform_reset:
  74              	.LVL0:
  75              	.LFB145:
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_SPI1_Init(void)
 534:Core/Src/main.c **** {
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 543:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 544:Core/Src/main.c ****   hspi1.Instance = SPI1;
 545:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 546:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 547:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 548:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 549:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 550:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 551:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 552:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 553:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 554:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 555:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 12


 556:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 557:Core/Src/main.c ****   {
 558:Core/Src/main.c ****     Error_Handler();
 559:Core/Src/main.c ****   }
 560:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** }
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /**
 567:Core/Src/main.c ****   * @brief USART1 Initialization Function
 568:Core/Src/main.c ****   * @param None
 569:Core/Src/main.c ****   * @retval None
 570:Core/Src/main.c ****   */
 571:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 572:Core/Src/main.c **** {
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 581:Core/Src/main.c ****   huart1.Instance = USART1;
 582:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 583:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 584:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 585:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 586:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 587:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 588:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 589:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 590:Core/Src/main.c ****   {
 591:Core/Src/main.c ****     Error_Handler();
 592:Core/Src/main.c ****   }
 593:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 596:Core/Src/main.c **** 
 597:Core/Src/main.c **** }
 598:Core/Src/main.c **** 
 599:Core/Src/main.c **** /**
 600:Core/Src/main.c ****   * @brief GPIO Initialization Function
 601:Core/Src/main.c ****   * @param None
 602:Core/Src/main.c ****   * @retval None
 603:Core/Src/main.c ****   */
 604:Core/Src/main.c **** static void MX_GPIO_Init(void)
 605:Core/Src/main.c **** {
 606:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 607:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 608:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 611:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 612:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 13


 613:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 614:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 615:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 618:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin, GPIO_PIN_RESET);
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 621:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin, GPIO_PIN_RESET);
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /*Configure GPIO pins : PARACHUTE_Pin MOTOR_X_Pin MOTOR_Y_Pin RF_RESET_Pin */
 624:Core/Src/main.c ****   GPIO_InitStruct.Pin = PARACHUTE_Pin|MOTOR_X_Pin|MOTOR_Y_Pin|RF_RESET_Pin;
 625:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 626:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 627:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 628:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /*Configure GPIO pins : IMU_INT_Pin PRESSURE_INT_Pin */
 631:Core/Src/main.c ****   GPIO_InitStruct.Pin = IMU_INT_Pin|PRESSURE_INT_Pin;
 632:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 633:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 634:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 635:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 636:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****   /*Configure GPIO pin : SD_CD_Pin */
 639:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CD_Pin;
 640:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 641:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 642:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /*Configure GPIO pins : CS_PRESSURE_Pin CS_GYRO_Pin CS_WIRELESS_Pin */
 645:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_PRESSURE_Pin|CS_GYRO_Pin|CS_WIRELESS_Pin;
 646:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 647:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 648:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 649:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /*Configure GPIO pin : BUSY_Pin */
 652:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUSY_Pin;
 653:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 654:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 655:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****   /*Configure GPIO pin : ANTENNA_IRQ_Pin */
 658:Core/Src/main.c ****   GPIO_InitStruct.Pin = ANTENNA_IRQ_Pin;
 659:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 660:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 661:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 664:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 665:Core/Src/main.c **** }
 666:Core/Src/main.c **** 
 667:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** int _write(int fd, char* ptr, int len) {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 14


 670:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 671:Core/Src/main.c **** 	return len;
 672:Core/Src/main.c **** }
 673:Core/Src/main.c **** 
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 676:Core/Src/main.c **** {
 677:Core/Src/main.c ****   if(GPIO_Pin == ANTENNA_IRQ_Pin) {
 678:Core/Src/main.c ****     printf("IRQ HANDLEDDD FORM THE ANTENAAAAAAA");
 679:Core/Src/main.c ****   } else {
 680:Core/Src/main.c ****       __NOP();
 681:Core/Src/main.c ****   }
 682:Core/Src/main.c **** }
 683:Core/Src/main.c **** 
 684:Core/Src/main.c **** 
 685:Core/Src/main.c **** /*
 686:Core/Src/main.c ****  * @brief  Write generic device register (platform dependent)
 687:Core/Src/main.c ****  *
 688:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 689:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 690:Core/Src/main.c ****  * @param  reg       register to write
 691:Core/Src/main.c ****  * @param  bufp      pointer to data to write in register reg
 692:Core/Src/main.c ****  * @param  len       number of consecutive register to write
 693:Core/Src/main.c ****  *
 694:Core/Src/main.c ****  */
 695:Core/Src/main.c **** static int32_t lsm6dsm_platform_write(void *handle, uint8_t reg, const uint8_t *bufp,
 696:Core/Src/main.c ****                               uint16_t len)
 697:Core/Src/main.c **** {
 698:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 699:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 700:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
 701:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 702:Core/Src/main.c ****   return 0;
 703:Core/Src/main.c **** }
 704:Core/Src/main.c **** 
 705:Core/Src/main.c **** /*
 706:Core/Src/main.c ****  * @brief  Read generic device register (platform dependent)
 707:Core/Src/main.c ****  *
 708:Core/Src/main.c ****  * @param  handle    customizable argument. In this examples is used in
 709:Core/Src/main.c ****  *                   order to select the correct sensor bus handler.
 710:Core/Src/main.c ****  * @param  reg       register to read
 711:Core/Src/main.c ****  * @param  bufp      pointer to buffer that store the data read
 712:Core/Src/main.c ****  * @param  len       number of consecutive register to read
 713:Core/Src/main.c ****  *
 714:Core/Src/main.c ****  */
 715:Core/Src/main.c **** static int32_t lsm6dsm_platform_read(void *handle, uint8_t reg, uint8_t *bufp,
 716:Core/Src/main.c ****                              uint16_t len)
 717:Core/Src/main.c **** {
 718:Core/Src/main.c **** 	  reg |= 0x80;
 719:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 720:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 721:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 722:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 723:Core/Src/main.c ****   return 0;
 724:Core/Src/main.c **** }
 725:Core/Src/main.c **** 
 726:Core/Src/main.c **** static int32_t llcc68_platform_reset(void *handle) {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 15


  76              		.loc 1 726 52 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 726 52 is_stmt 0 view .LVU17
  81 0000 10B5     		push	{r4, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
 727:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_RESET);
  85              		.loc 1 727 3 is_stmt 1 view .LVU18
  86 0002 094C     		ldr	r4, .L6
  87 0004 0022     		movs	r2, #0
  88 0006 8021     		movs	r1, #128
  89 0008 2046     		mov	r0, r4
  90              	.LVL1:
  91              		.loc 1 727 3 is_stmt 0 view .LVU19
  92 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL2:
 728:Core/Src/main.c ****   HAL_Delay(1);
  94              		.loc 1 728 3 is_stmt 1 view .LVU20
  95 000e 0120     		movs	r0, #1
  96 0010 FFF7FEFF 		bl	HAL_Delay
  97              	.LVL3:
 729:Core/Src/main.c ****   HAL_GPIO_WritePin(RF_RESET_GPIO_Port, RF_RESET_Pin, GPIO_PIN_SET);
  98              		.loc 1 729 3 view .LVU21
  99 0014 0122     		movs	r2, #1
 100 0016 8021     		movs	r1, #128
 101 0018 2046     		mov	r0, r4
 102 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL4:
 730:Core/Src/main.c ****   HAL_Delay(1);
 104              		.loc 1 730 3 view .LVU22
 105 001e 0120     		movs	r0, #1
 106 0020 FFF7FEFF 		bl	HAL_Delay
 107              	.LVL5:
 731:Core/Src/main.c ****   return 0;
 108              		.loc 1 731 3 view .LVU23
 732:Core/Src/main.c **** }
 109              		.loc 1 732 1 is_stmt 0 view .LVU24
 110 0024 0020     		movs	r0, #0
 111 0026 10BD     		pop	{r4, pc}
 112              	.L7:
 113              		.align	2
 114              	.L6:
 115 0028 00080240 		.word	1073874944
 116              		.cfi_endproc
 117              	.LFE145:
 119              		.section	.text.platform_delay,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	platform_delay:
 126              	.LVL6:
 127              	.LFB150:
 733:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 16


 734:Core/Src/main.c **** static int32_t bmp5_read(uint8_t reg_addr, uint8_t * reg_data, uint32_t len, void *intf_ptr) {
 735:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_RESET);
 736:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, &reg_addr, 1, 1000);
 737:Core/Src/main.c **** 	  HAL_SPI_Receive(&hspi1, reg_data, len, 1000);
 738:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_SET);
 739:Core/Src/main.c ****   return 0;
 740:Core/Src/main.c **** }
 741:Core/Src/main.c **** 
 742:Core/Src/main.c **** static int32_t bmp5_write(uint8_t reg_addr,
 743:Core/Src/main.c ****   const uint8_t * reg_data, uint32_t len, void *intf_ptr) {
 744:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_RESET);
 745:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, &reg_addr, 1, 1000);
 746:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi1, (uint8_t*) reg_data, len, 1000);
 747:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_PRESSURE_GPIO_Port, CS_PRESSURE_Pin, GPIO_PIN_SET);
 748:Core/Src/main.c ****   return 0;
 749:Core/Src/main.c **** }
 750:Core/Src/main.c **** 
 751:Core/Src/main.c **** /*!
 752:Core/Src/main.c ****  *  @brief Prints the execution status of the APIs.
 753:Core/Src/main.c ****  */
 754:Core/Src/main.c **** void bmp5_error_codes_print_result(const char api_name[], int8_t rslt)
 755:Core/Src/main.c **** {
 756:Core/Src/main.c ****     if (rslt != BMP5_OK)
 757:Core/Src/main.c ****     {
 758:Core/Src/main.c ****         printf("%s\t", api_name);
 759:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 760:Core/Src/main.c ****         {
 761:Core/Src/main.c ****             printf("Error [%d] : Null pointer\r\n", rslt);
 762:Core/Src/main.c ****         }
 763:Core/Src/main.c ****         else if (rslt == BMP5_E_COM_FAIL)
 764:Core/Src/main.c ****         {
 765:Core/Src/main.c ****             printf("Error [%d] : Communication failure\r\n", rslt);
 766:Core/Src/main.c ****         }
 767:Core/Src/main.c ****         else if (rslt == BMP5_E_DEV_NOT_FOUND)
 768:Core/Src/main.c ****         {
 769:Core/Src/main.c ****             printf("Error [%d] : Device not found\r\n", rslt);
 770:Core/Src/main.c ****         }
 771:Core/Src/main.c ****         else if (rslt == BMP5_E_INVALID_CHIP_ID)
 772:Core/Src/main.c ****         {
 773:Core/Src/main.c ****             printf("Error [%d] : Invalid chip id\r\n", rslt);
 774:Core/Src/main.c ****         }
 775:Core/Src/main.c ****         else if (rslt == BMP5_E_POWER_UP)
 776:Core/Src/main.c ****         {
 777:Core/Src/main.c ****             printf("Error [%d] : Power up error\r\n", rslt);
 778:Core/Src/main.c ****         }
 779:Core/Src/main.c ****         else if (rslt == BMP5_E_POR_SOFTRESET)
 780:Core/Src/main.c ****         {
 781:Core/Src/main.c ****             printf("Error [%d] : Power-on reset/softreset failure\r\n", rslt);
 782:Core/Src/main.c ****         }
 783:Core/Src/main.c ****         else if (rslt == BMP5_E_INVALID_POWERMODE)
 784:Core/Src/main.c ****         {
 785:Core/Src/main.c ****             printf("Error [%d] : Invalid powermode\r\n", rslt);
 786:Core/Src/main.c ****         }
 787:Core/Src/main.c ****         else
 788:Core/Src/main.c ****         {
 789:Core/Src/main.c ****             /* For more error codes refer "*_defs.h" */
 790:Core/Src/main.c ****             printf("Error [%d] : Unknown error code\r\n", rslt);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 17


 791:Core/Src/main.c ****         }
 792:Core/Src/main.c ****     }
 793:Core/Src/main.c **** }
 794:Core/Src/main.c **** static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_dev 
 795:Core/Src/main.c **** {
 796:Core/Src/main.c ****     int8_t rslt;
 797:Core/Src/main.c ****     struct bmp5_iir_config set_iir_cfg;
 798:Core/Src/main.c ****     struct bmp5_int_source_select int_source_select;
 799:Core/Src/main.c **** 
 800:Core/Src/main.c ****     rslt = bmp5_set_power_mode(BMP5_POWERMODE_STANDBY, dev);
 801:Core/Src/main.c ****     bmp5_error_codes_print_result("bmp5_set_power_mode1", rslt);
 802:Core/Src/main.c **** 
 803:Core/Src/main.c ****     if (rslt == BMP5_OK)
 804:Core/Src/main.c ****     {
 805:Core/Src/main.c ****         /* Get default odr */
 806:Core/Src/main.c ****         rslt = bmp5_get_osr_odr_press_config(osr_odr_press_cfg, dev);
 807:Core/Src/main.c ****         bmp5_error_codes_print_result("bmp5_get_osr_odr_press_config", rslt);
 808:Core/Src/main.c **** 
 809:Core/Src/main.c ****         if (rslt == BMP5_OK)
 810:Core/Src/main.c ****         {
 811:Core/Src/main.c ****             /* Set ODR as 50Hz */
 812:Core/Src/main.c ****             osr_odr_press_cfg->odr = BMP5_ODR_50_HZ;
 813:Core/Src/main.c **** 
 814:Core/Src/main.c ****             /* Enable pressure */
 815:Core/Src/main.c ****             osr_odr_press_cfg->press_en = BMP5_ENABLE;
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****             /* Set Over-sampling rate with respect to odr */
 818:Core/Src/main.c ****             osr_odr_press_cfg->osr_t = BMP5_OVERSAMPLING_64X;
 819:Core/Src/main.c ****             osr_odr_press_cfg->osr_p = BMP5_OVERSAMPLING_4X;
 820:Core/Src/main.c **** 
 821:Core/Src/main.c ****             rslt = bmp5_set_osr_odr_press_config(osr_odr_press_cfg, dev);
 822:Core/Src/main.c ****             bmp5_error_codes_print_result("bmp5_set_osr_odr_press_config", rslt);
 823:Core/Src/main.c ****         }
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****         if (rslt == BMP5_OK)
 826:Core/Src/main.c ****         {
 827:Core/Src/main.c ****             set_iir_cfg.set_iir_t = BMP5_IIR_FILTER_COEFF_1;
 828:Core/Src/main.c ****             set_iir_cfg.set_iir_p = BMP5_IIR_FILTER_COEFF_1;
 829:Core/Src/main.c ****             set_iir_cfg.shdw_set_iir_t = BMP5_ENABLE;
 830:Core/Src/main.c ****             set_iir_cfg.shdw_set_iir_p = BMP5_ENABLE;
 831:Core/Src/main.c **** 
 832:Core/Src/main.c ****             rslt = bmp5_set_iir_config(&set_iir_cfg, dev);
 833:Core/Src/main.c ****             bmp5_error_codes_print_result("bmp5_set_iir_config", rslt);
 834:Core/Src/main.c ****         }
 835:Core/Src/main.c **** 
 836:Core/Src/main.c ****         if (rslt == BMP5_OK)
 837:Core/Src/main.c ****         {
 838:Core/Src/main.c ****             rslt = bmp5_configure_interrupt(BMP5_PULSED, BMP5_ACTIVE_HIGH, BMP5_INTR_PUSH_PULL, BMP
 839:Core/Src/main.c ****             bmp5_error_codes_print_result("bmp5_configure_interrupt", rslt);
 840:Core/Src/main.c **** 
 841:Core/Src/main.c ****             if (rslt == BMP5_OK)
 842:Core/Src/main.c ****             {
 843:Core/Src/main.c ****                 /* Note : Select INT_SOURCE after configuring interrupt */
 844:Core/Src/main.c ****                 int_source_select.drdy_en = BMP5_ENABLE;
 845:Core/Src/main.c ****                 rslt = bmp5_int_source_select(&int_source_select, dev);
 846:Core/Src/main.c ****                 bmp5_error_codes_print_result("bmp5_int_source_select", rslt);
 847:Core/Src/main.c ****             }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 18


 848:Core/Src/main.c ****         }
 849:Core/Src/main.c **** 
 850:Core/Src/main.c ****         /* Set powermode as normal */
 851:Core/Src/main.c ****         rslt = bmp5_set_power_mode(BMP5_POWERMODE_NORMAL, dev);
 852:Core/Src/main.c ****         bmp5_error_codes_print_result("bmp5_set_power_mode", rslt);
 853:Core/Src/main.c ****     }
 854:Core/Src/main.c **** 
 855:Core/Src/main.c ****     return rslt;
 856:Core/Src/main.c **** }
 857:Core/Src/main.c **** 
 858:Core/Src/main.c **** 
 859:Core/Src/main.c **** /*
 860:Core/Src/main.c ****  * @brief  platform specific delay (platform dependent)
 861:Core/Src/main.c ****  *
 862:Core/Src/main.c ****  * @param  ms        delay in ms
 863:Core/Src/main.c ****  *
 864:Core/Src/main.c ****  */
 865:Core/Src/main.c **** static void platform_delay(uint32_t ms)
 866:Core/Src/main.c **** {
 128              		.loc 1 866 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		.loc 1 866 1 is_stmt 0 view .LVU26
 133 0000 08B5     		push	{r3, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 867:Core/Src/main.c ****   HAL_Delay(ms);
 137              		.loc 1 867 3 is_stmt 1 view .LVU27
 138 0002 FFF7FEFF 		bl	HAL_Delay
 139              	.LVL7:
 868:Core/Src/main.c **** }
 140              		.loc 1 868 1 is_stmt 0 view .LVU28
 141 0006 08BD     		pop	{r3, pc}
 142              		.cfi_endproc
 143              	.LFE150:
 145              		.section	.text.llcc68_platform_write,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	llcc68_platform_write:
 152              	.LVL8:
 153              	.LFB152:
 869:Core/Src/main.c **** 
 870:Core/Src/main.c **** static int32_t llcc68_platform_read(void *handle, const uint8_t* command, const uint16_t command_le
 871:Core/Src/main.c ****                                      uint8_t* data, const uint16_t data_length ) {
 872:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 873:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 874:Core/Src/main.c **** 	  HAL_SPI_Receive(&hspi1, data, data_length, 1000);
 875:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 876:Core/Src/main.c ****   return 0;
 877:Core/Src/main.c **** }
 878:Core/Src/main.c **** 
 879:Core/Src/main.c **** static int32_t llcc68_platform_write(void *handle, const uint8_t* command, const uint16_t command_l
 880:Core/Src/main.c ****                                      const uint8_t* data, const uint16_t data_length ) {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 19


 154              		.loc 1 880 88 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 4, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		.loc 1 880 88 is_stmt 0 view .LVU30
 159 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 160              		.cfi_def_cfa_offset 24
 161              		.cfi_offset 4, -24
 162              		.cfi_offset 5, -20
 163              		.cfi_offset 6, -16
 164              		.cfi_offset 7, -12
 165              		.cfi_offset 8, -8
 166              		.cfi_offset 14, -4
 167 0004 0D46     		mov	r5, r1
 168 0006 1646     		mov	r6, r2
 169 0008 1C46     		mov	r4, r3
 881:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 170              		.loc 1 881 3 is_stmt 1 view .LVU31
 171 000a 0F4F     		ldr	r7, .L12
 172 000c 0022     		movs	r2, #0
 173              	.LVL9:
 174              		.loc 1 881 3 is_stmt 0 view .LVU32
 175 000e 1021     		movs	r1, #16
 176              	.LVL10:
 177              		.loc 1 881 3 view .LVU33
 178 0010 3846     		mov	r0, r7
 179              	.LVL11:
 180              		.loc 1 881 3 view .LVU34
 181 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL12:
 882:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 183              		.loc 1 882 3 is_stmt 1 view .LVU35
 184 0016 DFF83480 		ldr	r8, .L12+4
 185 001a 4FF47A73 		mov	r3, #1000
 186 001e 3246     		mov	r2, r6
 187 0020 2946     		mov	r1, r5
 188 0022 4046     		mov	r0, r8
 189 0024 FFF7FEFF 		bl	HAL_SPI_Transmit
 190              	.LVL13:
 883:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, data, data_length, 1000);
 191              		.loc 1 883 3 view .LVU36
 192 0028 4FF47A73 		mov	r3, #1000
 193 002c BDF81820 		ldrh	r2, [sp, #24]
 194 0030 2146     		mov	r1, r4
 195 0032 4046     		mov	r0, r8
 196 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 197              	.LVL14:
 884:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 198              		.loc 1 884 3 view .LVU37
 199 0038 0122     		movs	r2, #1
 200 003a 1021     		movs	r1, #16
 201 003c 3846     		mov	r0, r7
 202 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 203              	.LVL15:
 885:Core/Src/main.c ****   return 0;
 204              		.loc 1 885 3 view .LVU38
 886:Core/Src/main.c **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 20


 205              		.loc 1 886 1 is_stmt 0 view .LVU39
 206 0042 0020     		movs	r0, #0
 207 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 208              	.LVL16:
 209              	.L13:
 210              		.loc 1 886 1 view .LVU40
 211              		.align	2
 212              	.L12:
 213 0048 00000240 		.word	1073872896
 214 004c 00000000 		.word	hspi1
 215              		.cfi_endproc
 216              	.LFE152:
 218              		.section	.text.lsm6dsm_platform_write,"ax",%progbits
 219              		.align	1
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	lsm6dsm_platform_write:
 225              	.LVL17:
 226              	.LFB143:
 697:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 227              		.loc 1 697 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 697:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 231              		.loc 1 697 1 is_stmt 0 view .LVU42
 232 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 233              		.cfi_def_cfa_offset 20
 234              		.cfi_offset 4, -20
 235              		.cfi_offset 5, -16
 236              		.cfi_offset 6, -12
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 83B0     		sub	sp, sp, #12
 240              		.cfi_def_cfa_offset 32
 241 0004 0446     		mov	r4, r0
 242 0006 1546     		mov	r5, r2
 243 0008 1E46     		mov	r6, r3
 244 000a 8DF80710 		strb	r1, [sp, #7]
 698:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 245              		.loc 1 698 4 is_stmt 1 view .LVU43
 246 000e 0E4F     		ldr	r7, .L16
 247 0010 0022     		movs	r2, #0
 248              	.LVL18:
 698:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 249              		.loc 1 698 4 is_stmt 0 view .LVU44
 250 0012 0821     		movs	r1, #8
 251              	.LVL19:
 698:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 252              		.loc 1 698 4 view .LVU45
 253 0014 3846     		mov	r0, r7
 254              	.LVL20:
 698:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 255              		.loc 1 698 4 view .LVU46
 256 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 257              	.LVL21:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 21


 699:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, (uint8_t*) bufp, len, 1000);
 258              		.loc 1 699 4 is_stmt 1 view .LVU47
 259 001a 4FF47A73 		mov	r3, #1000
 260 001e 0122     		movs	r2, #1
 261 0020 0DF10701 		add	r1, sp, #7
 262 0024 2046     		mov	r0, r4
 263 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 264              	.LVL22:
 700:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 265              		.loc 1 700 4 view .LVU48
 266 002a 4FF47A73 		mov	r3, #1000
 267 002e 3246     		mov	r2, r6
 268 0030 2946     		mov	r1, r5
 269 0032 2046     		mov	r0, r4
 270 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 271              	.LVL23:
 701:Core/Src/main.c ****   return 0;
 272              		.loc 1 701 4 view .LVU49
 273 0038 0122     		movs	r2, #1
 274 003a 0821     		movs	r1, #8
 275 003c 3846     		mov	r0, r7
 276 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 277              	.LVL24:
 702:Core/Src/main.c **** }
 278              		.loc 1 702 3 view .LVU50
 703:Core/Src/main.c **** 
 279              		.loc 1 703 1 is_stmt 0 view .LVU51
 280 0042 0020     		movs	r0, #0
 281 0044 03B0     		add	sp, sp, #12
 282              		.cfi_def_cfa_offset 20
 283              		@ sp needed
 284 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 285              	.LVL25:
 286              	.L17:
 703:Core/Src/main.c **** 
 287              		.loc 1 703 1 view .LVU52
 288              		.align	2
 289              	.L16:
 290 0048 00000240 		.word	1073872896
 291              		.cfi_endproc
 292              	.LFE143:
 294              		.section	.text.llcc68_platform_read,"ax",%progbits
 295              		.align	1
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	llcc68_platform_read:
 301              	.LVL26:
 302              	.LFB151:
 871:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 303              		.loc 1 871 82 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 4, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 871:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 307              		.loc 1 871 82 is_stmt 0 view .LVU54
 308 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 22


 309              		.cfi_def_cfa_offset 24
 310              		.cfi_offset 4, -24
 311              		.cfi_offset 5, -20
 312              		.cfi_offset 6, -16
 313              		.cfi_offset 7, -12
 314              		.cfi_offset 8, -8
 315              		.cfi_offset 14, -4
 316 0004 0D46     		mov	r5, r1
 317 0006 1646     		mov	r6, r2
 318 0008 1C46     		mov	r4, r3
 872:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 319              		.loc 1 872 3 is_stmt 1 view .LVU55
 320 000a 0F4F     		ldr	r7, .L20
 321 000c 0022     		movs	r2, #0
 322              	.LVL27:
 872:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 323              		.loc 1 872 3 is_stmt 0 view .LVU56
 324 000e 1021     		movs	r1, #16
 325              	.LVL28:
 872:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 326              		.loc 1 872 3 view .LVU57
 327 0010 3846     		mov	r0, r7
 328              	.LVL29:
 872:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 329              		.loc 1 872 3 view .LVU58
 330 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL30:
 873:Core/Src/main.c **** 	  HAL_SPI_Receive(&hspi1, data, data_length, 1000);
 332              		.loc 1 873 3 is_stmt 1 view .LVU59
 333 0016 DFF83480 		ldr	r8, .L20+4
 334 001a 4FF47A73 		mov	r3, #1000
 335 001e 3246     		mov	r2, r6
 336 0020 2946     		mov	r1, r5
 337 0022 4046     		mov	r0, r8
 338 0024 FFF7FEFF 		bl	HAL_SPI_Transmit
 339              	.LVL31:
 874:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 340              		.loc 1 874 4 view .LVU60
 341 0028 4FF47A73 		mov	r3, #1000
 342 002c BDF81820 		ldrh	r2, [sp, #24]
 343 0030 2146     		mov	r1, r4
 344 0032 4046     		mov	r0, r8
 345 0034 FFF7FEFF 		bl	HAL_SPI_Receive
 346              	.LVL32:
 875:Core/Src/main.c ****   return 0;
 347              		.loc 1 875 4 view .LVU61
 348 0038 0122     		movs	r2, #1
 349 003a 1021     		movs	r1, #16
 350 003c 3846     		mov	r0, r7
 351 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 352              	.LVL33:
 876:Core/Src/main.c **** }
 353              		.loc 1 876 3 view .LVU62
 877:Core/Src/main.c **** 
 354              		.loc 1 877 1 is_stmt 0 view .LVU63
 355 0042 0020     		movs	r0, #0
 356 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 23


 357              	.LVL34:
 358              	.L21:
 877:Core/Src/main.c **** 
 359              		.loc 1 877 1 view .LVU64
 360              		.align	2
 361              	.L20:
 362 0048 00000240 		.word	1073872896
 363 004c 00000000 		.word	hspi1
 364              		.cfi_endproc
 365              	.LFE151:
 367              		.section	.text.lsm6dsm_platform_read,"ax",%progbits
 368              		.align	1
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	lsm6dsm_platform_read:
 374              	.LVL35:
 375              	.LFB144:
 717:Core/Src/main.c **** 	  reg |= 0x80;
 376              		.loc 1 717 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 717:Core/Src/main.c **** 	  reg |= 0x80;
 380              		.loc 1 717 1 is_stmt 0 view .LVU66
 381 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 382              		.cfi_def_cfa_offset 20
 383              		.cfi_offset 4, -20
 384              		.cfi_offset 5, -16
 385              		.cfi_offset 6, -12
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 83B0     		sub	sp, sp, #12
 389              		.cfi_def_cfa_offset 32
 390 0004 0446     		mov	r4, r0
 391 0006 1546     		mov	r5, r2
 392 0008 1E46     		mov	r6, r3
 393 000a 8DF80710 		strb	r1, [sp, #7]
 718:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 394              		.loc 1 718 4 is_stmt 1 view .LVU67
 718:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 395              		.loc 1 718 8 is_stmt 0 view .LVU68
 396 000e CBB2     		uxtb	r3, r1
 397              	.LVL36:
 718:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_RESET);
 398              		.loc 1 718 8 view .LVU69
 399 0010 63F07F03 		orn	r3, r3, #127
 400 0014 8DF80730 		strb	r3, [sp, #7]
 719:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 401              		.loc 1 719 4 is_stmt 1 view .LVU70
 402 0018 0E4F     		ldr	r7, .L24
 403 001a 0022     		movs	r2, #0
 404              	.LVL37:
 719:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 405              		.loc 1 719 4 is_stmt 0 view .LVU71
 406 001c 0821     		movs	r1, #8
 407              	.LVL38:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 24


 719:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 408              		.loc 1 719 4 view .LVU72
 409 001e 3846     		mov	r0, r7
 410              	.LVL39:
 719:Core/Src/main.c **** 	  HAL_SPI_Transmit(handle, &reg, 1, 1000);
 411              		.loc 1 719 4 view .LVU73
 412 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 413              	.LVL40:
 720:Core/Src/main.c **** 	  HAL_SPI_Receive(handle, bufp, len, 1000);
 414              		.loc 1 720 4 is_stmt 1 view .LVU74
 415 0024 4FF47A73 		mov	r3, #1000
 416 0028 0122     		movs	r2, #1
 417 002a 0DF10701 		add	r1, sp, #7
 418 002e 2046     		mov	r0, r4
 419 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 420              	.LVL41:
 721:Core/Src/main.c **** 	  HAL_GPIO_WritePin(CS_GYRO_GPIO_Port, CS_GYRO_Pin, GPIO_PIN_SET);
 421              		.loc 1 721 4 view .LVU75
 422 0034 4FF47A73 		mov	r3, #1000
 423 0038 3246     		mov	r2, r6
 424 003a 2946     		mov	r1, r5
 425 003c 2046     		mov	r0, r4
 426 003e FFF7FEFF 		bl	HAL_SPI_Receive
 427              	.LVL42:
 722:Core/Src/main.c ****   return 0;
 428              		.loc 1 722 4 view .LVU76
 429 0042 0122     		movs	r2, #1
 430 0044 0821     		movs	r1, #8
 431 0046 3846     		mov	r0, r7
 432 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 433              	.LVL43:
 723:Core/Src/main.c **** }
 434              		.loc 1 723 3 view .LVU77
 724:Core/Src/main.c **** 
 435              		.loc 1 724 1 is_stmt 0 view .LVU78
 436 004c 0020     		movs	r0, #0
 437 004e 03B0     		add	sp, sp, #12
 438              		.cfi_def_cfa_offset 20
 439              		@ sp needed
 440 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 441              	.LVL44:
 442              	.L25:
 724:Core/Src/main.c **** 
 443              		.loc 1 724 1 view .LVU79
 444 0052 00BF     		.align	2
 445              	.L24:
 446 0054 00000240 		.word	1073872896
 447              		.cfi_endproc
 448              	.LFE144:
 450              		.section	.text.MX_GPIO_Init,"ax",%progbits
 451              		.align	1
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	MX_GPIO_Init:
 457              	.LFB140:
 605:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 25


 458              		.loc 1 605 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 40
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 463              		.cfi_def_cfa_offset 24
 464              		.cfi_offset 4, -24
 465              		.cfi_offset 5, -20
 466              		.cfi_offset 6, -16
 467              		.cfi_offset 7, -12
 468              		.cfi_offset 8, -8
 469              		.cfi_offset 14, -4
 470 0004 8AB0     		sub	sp, sp, #40
 471              		.cfi_def_cfa_offset 64
 606:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 472              		.loc 1 606 3 view .LVU81
 606:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 473              		.loc 1 606 20 is_stmt 0 view .LVU82
 474 0006 0024     		movs	r4, #0
 475 0008 0594     		str	r4, [sp, #20]
 476 000a 0694     		str	r4, [sp, #24]
 477 000c 0794     		str	r4, [sp, #28]
 478 000e 0894     		str	r4, [sp, #32]
 479 0010 0994     		str	r4, [sp, #36]
 611:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 480              		.loc 1 611 3 is_stmt 1 view .LVU83
 481              	.LBB4:
 611:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 482              		.loc 1 611 3 view .LVU84
 483 0012 0094     		str	r4, [sp]
 611:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 484              		.loc 1 611 3 view .LVU85
 485 0014 3D4B     		ldr	r3, .L28
 486 0016 1A6B     		ldr	r2, [r3, #48]
 487 0018 42F08002 		orr	r2, r2, #128
 488 001c 1A63     		str	r2, [r3, #48]
 611:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 489              		.loc 1 611 3 view .LVU86
 490 001e 1A6B     		ldr	r2, [r3, #48]
 491 0020 02F08002 		and	r2, r2, #128
 492 0024 0092     		str	r2, [sp]
 611:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 493              		.loc 1 611 3 view .LVU87
 494 0026 009A     		ldr	r2, [sp]
 495              	.LBE4:
 611:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 496              		.loc 1 611 3 view .LVU88
 612:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 497              		.loc 1 612 3 view .LVU89
 498              	.LBB5:
 612:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 499              		.loc 1 612 3 view .LVU90
 500 0028 0194     		str	r4, [sp, #4]
 612:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 501              		.loc 1 612 3 view .LVU91
 502 002a 1A6B     		ldr	r2, [r3, #48]
 503 002c 42F00402 		orr	r2, r2, #4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 26


 504 0030 1A63     		str	r2, [r3, #48]
 612:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 505              		.loc 1 612 3 view .LVU92
 506 0032 1A6B     		ldr	r2, [r3, #48]
 507 0034 02F00402 		and	r2, r2, #4
 508 0038 0192     		str	r2, [sp, #4]
 612:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 509              		.loc 1 612 3 view .LVU93
 510 003a 019A     		ldr	r2, [sp, #4]
 511              	.LBE5:
 612:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 512              		.loc 1 612 3 view .LVU94
 613:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 513              		.loc 1 613 3 view .LVU95
 514              	.LBB6:
 613:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 515              		.loc 1 613 3 view .LVU96
 516 003c 0294     		str	r4, [sp, #8]
 613:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 517              		.loc 1 613 3 view .LVU97
 518 003e 1A6B     		ldr	r2, [r3, #48]
 519 0040 42F00102 		orr	r2, r2, #1
 520 0044 1A63     		str	r2, [r3, #48]
 613:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 521              		.loc 1 613 3 view .LVU98
 522 0046 1A6B     		ldr	r2, [r3, #48]
 523 0048 02F00102 		and	r2, r2, #1
 524 004c 0292     		str	r2, [sp, #8]
 613:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 525              		.loc 1 613 3 view .LVU99
 526 004e 029A     		ldr	r2, [sp, #8]
 527              	.LBE6:
 613:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 528              		.loc 1 613 3 view .LVU100
 614:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 529              		.loc 1 614 3 view .LVU101
 530              	.LBB7:
 614:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 531              		.loc 1 614 3 view .LVU102
 532 0050 0394     		str	r4, [sp, #12]
 614:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 533              		.loc 1 614 3 view .LVU103
 534 0052 1A6B     		ldr	r2, [r3, #48]
 535 0054 42F00802 		orr	r2, r2, #8
 536 0058 1A63     		str	r2, [r3, #48]
 614:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 537              		.loc 1 614 3 view .LVU104
 538 005a 1A6B     		ldr	r2, [r3, #48]
 539 005c 02F00802 		and	r2, r2, #8
 540 0060 0392     		str	r2, [sp, #12]
 614:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 541              		.loc 1 614 3 view .LVU105
 542 0062 039A     		ldr	r2, [sp, #12]
 543              	.LBE7:
 614:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 544              		.loc 1 614 3 view .LVU106
 615:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 27


 545              		.loc 1 615 3 view .LVU107
 546              	.LBB8:
 615:Core/Src/main.c **** 
 547              		.loc 1 615 3 view .LVU108
 548 0064 0494     		str	r4, [sp, #16]
 615:Core/Src/main.c **** 
 549              		.loc 1 615 3 view .LVU109
 550 0066 1A6B     		ldr	r2, [r3, #48]
 551 0068 42F00202 		orr	r2, r2, #2
 552 006c 1A63     		str	r2, [r3, #48]
 615:Core/Src/main.c **** 
 553              		.loc 1 615 3 view .LVU110
 554 006e 1B6B     		ldr	r3, [r3, #48]
 555 0070 03F00203 		and	r3, r3, #2
 556 0074 0493     		str	r3, [sp, #16]
 615:Core/Src/main.c **** 
 557              		.loc 1 615 3 view .LVU111
 558 0076 049B     		ldr	r3, [sp, #16]
 559              	.LBE8:
 615:Core/Src/main.c **** 
 560              		.loc 1 615 3 view .LVU112
 618:Core/Src/main.c **** 
 561              		.loc 1 618 3 view .LVU113
 562 0078 254D     		ldr	r5, .L28+4
 563 007a 2246     		mov	r2, r4
 564 007c 8721     		movs	r1, #135
 565 007e 2846     		mov	r0, r5
 566 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 567              	.LVL45:
 621:Core/Src/main.c **** 
 568              		.loc 1 621 3 view .LVU114
 569 0084 234E     		ldr	r6, .L28+8
 570 0086 2246     		mov	r2, r4
 571 0088 1C21     		movs	r1, #28
 572 008a 3046     		mov	r0, r6
 573 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 574              	.LVL46:
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 575              		.loc 1 624 3 view .LVU115
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 576              		.loc 1 624 23 is_stmt 0 view .LVU116
 577 0090 8723     		movs	r3, #135
 578 0092 0593     		str	r3, [sp, #20]
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 579              		.loc 1 625 3 is_stmt 1 view .LVU117
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 580              		.loc 1 625 24 is_stmt 0 view .LVU118
 581 0094 0127     		movs	r7, #1
 582 0096 0697     		str	r7, [sp, #24]
 626:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 583              		.loc 1 626 3 is_stmt 1 view .LVU119
 626:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 584              		.loc 1 626 24 is_stmt 0 view .LVU120
 585 0098 0794     		str	r4, [sp, #28]
 627:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 586              		.loc 1 627 3 is_stmt 1 view .LVU121
 627:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 28


 587              		.loc 1 627 25 is_stmt 0 view .LVU122
 588 009a 0894     		str	r4, [sp, #32]
 628:Core/Src/main.c **** 
 589              		.loc 1 628 3 is_stmt 1 view .LVU123
 590 009c 05A9     		add	r1, sp, #20
 591 009e 2846     		mov	r0, r5
 592 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 593              	.LVL47:
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 594              		.loc 1 631 3 view .LVU124
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 595              		.loc 1 631 23 is_stmt 0 view .LVU125
 596 00a4 4823     		movs	r3, #72
 597 00a6 0593     		str	r3, [sp, #20]
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 598              		.loc 1 632 3 is_stmt 1 view .LVU126
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 599              		.loc 1 632 24 is_stmt 0 view .LVU127
 600 00a8 4FF00208 		mov	r8, #2
 601 00ac CDF81880 		str	r8, [sp, #24]
 633:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 602              		.loc 1 633 3 is_stmt 1 view .LVU128
 633:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 603              		.loc 1 633 24 is_stmt 0 view .LVU129
 604 00b0 0794     		str	r4, [sp, #28]
 634:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 605              		.loc 1 634 3 is_stmt 1 view .LVU130
 634:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 606              		.loc 1 634 25 is_stmt 0 view .LVU131
 607 00b2 0894     		str	r4, [sp, #32]
 635:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 608              		.loc 1 635 3 is_stmt 1 view .LVU132
 635:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 609              		.loc 1 635 29 is_stmt 0 view .LVU133
 610 00b4 0F23     		movs	r3, #15
 611 00b6 0993     		str	r3, [sp, #36]
 636:Core/Src/main.c **** 
 612              		.loc 1 636 3 is_stmt 1 view .LVU134
 613 00b8 05A9     		add	r1, sp, #20
 614 00ba 2846     		mov	r0, r5
 615 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 616              	.LVL48:
 639:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 617              		.loc 1 639 3 view .LVU135
 639:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 618              		.loc 1 639 23 is_stmt 0 view .LVU136
 619 00c0 CDF81480 		str	r8, [sp, #20]
 640:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 620              		.loc 1 640 3 is_stmt 1 view .LVU137
 640:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 621              		.loc 1 640 24 is_stmt 0 view .LVU138
 622 00c4 0694     		str	r4, [sp, #24]
 641:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 623              		.loc 1 641 3 is_stmt 1 view .LVU139
 641:Core/Src/main.c ****   HAL_GPIO_Init(SD_CD_GPIO_Port, &GPIO_InitStruct);
 624              		.loc 1 641 24 is_stmt 0 view .LVU140
 625 00c6 0794     		str	r4, [sp, #28]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 29


 642:Core/Src/main.c **** 
 626              		.loc 1 642 3 is_stmt 1 view .LVU141
 627 00c8 05A9     		add	r1, sp, #20
 628 00ca 3046     		mov	r0, r6
 629 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 630              	.LVL49:
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 631              		.loc 1 645 3 view .LVU142
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 632              		.loc 1 645 23 is_stmt 0 view .LVU143
 633 00d0 1C23     		movs	r3, #28
 634 00d2 0593     		str	r3, [sp, #20]
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 635              		.loc 1 646 3 is_stmt 1 view .LVU144
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 636              		.loc 1 646 24 is_stmt 0 view .LVU145
 637 00d4 0697     		str	r7, [sp, #24]
 647:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 638              		.loc 1 647 3 is_stmt 1 view .LVU146
 647:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 639              		.loc 1 647 24 is_stmt 0 view .LVU147
 640 00d6 0794     		str	r4, [sp, #28]
 648:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 641              		.loc 1 648 3 is_stmt 1 view .LVU148
 648:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 642              		.loc 1 648 25 is_stmt 0 view .LVU149
 643 00d8 0894     		str	r4, [sp, #32]
 649:Core/Src/main.c **** 
 644              		.loc 1 649 3 is_stmt 1 view .LVU150
 645 00da 05A9     		add	r1, sp, #20
 646 00dc 3046     		mov	r0, r6
 647 00de FFF7FEFF 		bl	HAL_GPIO_Init
 648              	.LVL50:
 652:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 649              		.loc 1 652 3 view .LVU151
 652:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 650              		.loc 1 652 23 is_stmt 0 view .LVU152
 651 00e2 1023     		movs	r3, #16
 652 00e4 0593     		str	r3, [sp, #20]
 653:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 653              		.loc 1 653 3 is_stmt 1 view .LVU153
 653:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 654              		.loc 1 653 24 is_stmt 0 view .LVU154
 655 00e6 0694     		str	r4, [sp, #24]
 654:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 656              		.loc 1 654 3 is_stmt 1 view .LVU155
 654:Core/Src/main.c ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 657              		.loc 1 654 24 is_stmt 0 view .LVU156
 658 00e8 0794     		str	r4, [sp, #28]
 655:Core/Src/main.c **** 
 659              		.loc 1 655 3 is_stmt 1 view .LVU157
 660 00ea 05A9     		add	r1, sp, #20
 661 00ec 2846     		mov	r0, r5
 662 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 663              	.LVL51:
 658:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 664              		.loc 1 658 3 view .LVU158
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 30


 658:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 665              		.loc 1 658 23 is_stmt 0 view .LVU159
 666 00f2 2023     		movs	r3, #32
 667 00f4 0593     		str	r3, [sp, #20]
 659:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 668              		.loc 1 659 3 is_stmt 1 view .LVU160
 659:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 669              		.loc 1 659 24 is_stmt 0 view .LVU161
 670 00f6 4FF48813 		mov	r3, #1114112
 671 00fa 0693     		str	r3, [sp, #24]
 660:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 672              		.loc 1 660 3 is_stmt 1 view .LVU162
 660:Core/Src/main.c ****   HAL_GPIO_Init(ANTENNA_IRQ_GPIO_Port, &GPIO_InitStruct);
 673              		.loc 1 660 24 is_stmt 0 view .LVU163
 674 00fc 0794     		str	r4, [sp, #28]
 661:Core/Src/main.c **** 
 675              		.loc 1 661 3 is_stmt 1 view .LVU164
 676 00fe 05A9     		add	r1, sp, #20
 677 0100 2846     		mov	r0, r5
 678 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 679              	.LVL52:
 665:Core/Src/main.c **** 
 680              		.loc 1 665 1 is_stmt 0 view .LVU165
 681 0106 0AB0     		add	sp, sp, #40
 682              		.cfi_def_cfa_offset 24
 683              		@ sp needed
 684 0108 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 685              	.L29:
 686              		.align	2
 687              	.L28:
 688 010c 00380240 		.word	1073887232
 689 0110 00080240 		.word	1073874944
 690 0114 00000240 		.word	1073872896
 691              		.cfi_endproc
 692              	.LFE140:
 694              		.section	.text._write,"ax",%progbits
 695              		.align	1
 696              		.global	_write
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 701              	_write:
 702              	.LVL53:
 703              	.LFB141:
 669:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 704              		.loc 1 669 40 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 669:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) ptr, len, 0xffffff);
 708              		.loc 1 669 40 is_stmt 0 view .LVU167
 709 0000 10B5     		push	{r4, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 4, -8
 712              		.cfi_offset 14, -4
 713 0002 1446     		mov	r4, r2
 670:Core/Src/main.c **** 	return len;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 31


 714              		.loc 1 670 2 is_stmt 1 view .LVU168
 715 0004 6FF07F43 		mvn	r3, #-16777216
 716 0008 92B2     		uxth	r2, r2
 717              	.LVL54:
 670:Core/Src/main.c **** 	return len;
 718              		.loc 1 670 2 is_stmt 0 view .LVU169
 719 000a 0248     		ldr	r0, .L32
 720              	.LVL55:
 670:Core/Src/main.c **** 	return len;
 721              		.loc 1 670 2 view .LVU170
 722 000c FFF7FEFF 		bl	HAL_UART_Transmit
 723              	.LVL56:
 671:Core/Src/main.c **** }
 724              		.loc 1 671 2 is_stmt 1 view .LVU171
 672:Core/Src/main.c **** 
 725              		.loc 1 672 1 is_stmt 0 view .LVU172
 726 0010 2046     		mov	r0, r4
 727 0012 10BD     		pop	{r4, pc}
 728              	.LVL57:
 729              	.L33:
 672:Core/Src/main.c **** 
 730              		.loc 1 672 1 view .LVU173
 731              		.align	2
 732              	.L32:
 733 0014 00000000 		.word	huart1
 734              		.cfi_endproc
 735              	.LFE141:
 737              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 738              		.align	2
 739              	.LC0:
 740 0000 49525120 		.ascii	"IRQ HANDLEDDD FORM THE ANTENAAAAAAA\000"
 740      48414E44 
 740      4C454444 
 740      4420464F 
 740      524D2054 
 741              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 742              		.align	1
 743              		.global	HAL_GPIO_EXTI_Callback
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	HAL_GPIO_EXTI_Callback:
 749              	.LVL58:
 750              	.LFB142:
 676:Core/Src/main.c ****   if(GPIO_Pin == ANTENNA_IRQ_Pin) {
 751              		.loc 1 676 1 is_stmt 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 677:Core/Src/main.c ****     printf("IRQ HANDLEDDD FORM THE ANTENAAAAAAA");
 755              		.loc 1 677 3 view .LVU175
 677:Core/Src/main.c ****     printf("IRQ HANDLEDDD FORM THE ANTENAAAAAAA");
 756              		.loc 1 677 5 is_stmt 0 view .LVU176
 757 0000 2028     		cmp	r0, #32
 758 0002 01D0     		beq	.L41
 680:Core/Src/main.c ****   }
 759              		.loc 1 680 7 is_stmt 1 view .LVU177
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 32


 760              		.syntax unified
 761              	@ 680 "Core/Src/main.c" 1
 762 0004 00BF     		nop
 763              	@ 0 "" 2
 764              		.thumb
 765              		.syntax unified
 766 0006 7047     		bx	lr
 767              	.L41:
 676:Core/Src/main.c ****   if(GPIO_Pin == ANTENNA_IRQ_Pin) {
 768              		.loc 1 676 1 is_stmt 0 view .LVU178
 769 0008 08B5     		push	{r3, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 3, -8
 772              		.cfi_offset 14, -4
 773              	.LBB9:
 678:Core/Src/main.c ****   } else {
 774              		.loc 1 678 5 is_stmt 1 view .LVU179
 775 000a 0248     		ldr	r0, .L42
 776              	.LVL59:
 678:Core/Src/main.c ****   } else {
 777              		.loc 1 678 5 is_stmt 0 view .LVU180
 778 000c FFF7FEFF 		bl	printf
 779              	.LVL60:
 780              	.LBE9:
 682:Core/Src/main.c **** 
 781              		.loc 1 682 1 view .LVU181
 782 0010 08BD     		pop	{r3, pc}
 783              	.L43:
 784 0012 00BF     		.align	2
 785              	.L42:
 786 0014 00000000 		.word	.LC0
 787              		.cfi_endproc
 788              	.LFE142:
 790              		.section	.rodata.bmp5_error_codes_print_result.str1.4,"aMS",%progbits,1
 791              		.align	2
 792              	.LC1:
 793 0000 25730900 		.ascii	"%s\011\000"
 794              		.align	2
 795              	.LC2:
 796 0004 4572726F 		.ascii	"Error [%d] : Null pointer\015\012\000"
 796      72205B25 
 796      645D203A 
 796      204E756C 
 796      6C20706F 
 797              		.align	2
 798              	.LC3:
 799 0020 4572726F 		.ascii	"Error [%d] : Communication failure\015\012\000"
 799      72205B25 
 799      645D203A 
 799      20436F6D 
 799      6D756E69 
 800 0045 000000   		.align	2
 801              	.LC4:
 802 0048 4572726F 		.ascii	"Error [%d] : Device not found\015\012\000"
 802      72205B25 
 802      645D203A 
 802      20446576 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 33


 802      69636520 
 803              		.align	2
 804              	.LC5:
 805 0068 4572726F 		.ascii	"Error [%d] : Invalid chip id\015\012\000"
 805      72205B25 
 805      645D203A 
 805      20496E76 
 805      616C6964 
 806 0087 00       		.align	2
 807              	.LC6:
 808 0088 4572726F 		.ascii	"Error [%d] : Power up error\015\012\000"
 808      72205B25 
 808      645D203A 
 808      20506F77 
 808      65722075 
 809 00a6 0000     		.align	2
 810              	.LC7:
 811 00a8 4572726F 		.ascii	"Error [%d] : Power-on reset/softreset failure\015\012"
 811      72205B25 
 811      645D203A 
 811      20506F77 
 811      65722D6F 
 812 00d7 00       		.ascii	"\000"
 813              		.align	2
 814              	.LC8:
 815 00d8 4572726F 		.ascii	"Error [%d] : Invalid powermode\015\012\000"
 815      72205B25 
 815      645D203A 
 815      20496E76 
 815      616C6964 
 816 00f9 000000   		.align	2
 817              	.LC9:
 818 00fc 4572726F 		.ascii	"Error [%d] : Unknown error code\015\012\000"
 818      72205B25 
 818      645D203A 
 818      20556E6B 
 818      6E6F776E 
 819              		.section	.text.bmp5_error_codes_print_result,"ax",%progbits
 820              		.align	1
 821              		.global	bmp5_error_codes_print_result
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 826              	bmp5_error_codes_print_result:
 827              	.LVL61:
 828              	.LFB148:
 755:Core/Src/main.c ****     if (rslt != BMP5_OK)
 829              		.loc 1 755 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 756:Core/Src/main.c ****     {
 833              		.loc 1 756 5 view .LVU183
 756:Core/Src/main.c ****     {
 834              		.loc 1 756 8 is_stmt 0 view .LVU184
 835 0000 01B9     		cbnz	r1, .L59
 836 0002 7047     		bx	lr
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 34


 837              	.L59:
 755:Core/Src/main.c ****     if (rslt != BMP5_OK)
 838              		.loc 1 755 1 view .LVU185
 839 0004 10B5     		push	{r4, lr}
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 4, -8
 842              		.cfi_offset 14, -4
 843 0006 0C46     		mov	r4, r1
 844              	.LBB10:
 758:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 845              		.loc 1 758 9 is_stmt 1 view .LVU186
 846 0008 0146     		mov	r1, r0
 847              	.LVL62:
 758:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 848              		.loc 1 758 9 is_stmt 0 view .LVU187
 849 000a 1A48     		ldr	r0, .L60
 850              	.LVL63:
 758:Core/Src/main.c ****         if (rslt == BMP5_E_NULL_PTR)
 851              		.loc 1 758 9 view .LVU188
 852 000c FFF7FEFF 		bl	printf
 853              	.LVL64:
 759:Core/Src/main.c ****         {
 854              		.loc 1 759 9 is_stmt 1 view .LVU189
 855 0010 E31D     		adds	r3, r4, #7
 856 0012 062B     		cmp	r3, #6
 857 0014 28D8     		bhi	.L46
 858 0016 DFE803F0 		tbb	[pc, r3]
 859              	.L48:
 860 001a 22       		.byte	(.L54-.L48)/2
 861 001b 1D       		.byte	(.L53-.L48)/2
 862 001c 18       		.byte	(.L52-.L48)/2
 863 001d 13       		.byte	(.L51-.L48)/2
 864 001e 0E       		.byte	(.L50-.L48)/2
 865 001f 09       		.byte	(.L49-.L48)/2
 866 0020 04       		.byte	(.L47-.L48)/2
 867 0021 00       		.p2align 1
 868              	.L47:
 761:Core/Src/main.c ****         }
 869              		.loc 1 761 13 view .LVU190
 870 0022 2146     		mov	r1, r4
 871 0024 1448     		ldr	r0, .L60+4
 872 0026 FFF7FEFF 		bl	printf
 873              	.LVL65:
 874              	.L44:
 875              	.LBE10:
 793:Core/Src/main.c **** static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_dev 
 876              		.loc 1 793 1 is_stmt 0 view .LVU191
 877 002a 10BD     		pop	{r4, pc}
 878              	.L49:
 879              	.LBB11:
 765:Core/Src/main.c ****         }
 880              		.loc 1 765 13 is_stmt 1 view .LVU192
 881 002c 2146     		mov	r1, r4
 882 002e 1348     		ldr	r0, .L60+8
 883 0030 FFF7FEFF 		bl	printf
 884              	.LVL66:
 885 0034 F9E7     		b	.L44
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 35


 886              	.L50:
 769:Core/Src/main.c ****         }
 887              		.loc 1 769 13 view .LVU193
 888 0036 2146     		mov	r1, r4
 889 0038 1148     		ldr	r0, .L60+12
 890 003a FFF7FEFF 		bl	printf
 891              	.LVL67:
 892 003e F4E7     		b	.L44
 893              	.L51:
 773:Core/Src/main.c ****         }
 894              		.loc 1 773 13 view .LVU194
 895 0040 2146     		mov	r1, r4
 896 0042 1048     		ldr	r0, .L60+16
 897 0044 FFF7FEFF 		bl	printf
 898              	.LVL68:
 899 0048 EFE7     		b	.L44
 900              	.L52:
 777:Core/Src/main.c ****         }
 901              		.loc 1 777 13 view .LVU195
 902 004a 2146     		mov	r1, r4
 903 004c 0E48     		ldr	r0, .L60+20
 904 004e FFF7FEFF 		bl	printf
 905              	.LVL69:
 906 0052 EAE7     		b	.L44
 907              	.L53:
 781:Core/Src/main.c ****         }
 908              		.loc 1 781 13 view .LVU196
 909 0054 2146     		mov	r1, r4
 910 0056 0D48     		ldr	r0, .L60+24
 911 0058 FFF7FEFF 		bl	printf
 912              	.LVL70:
 913 005c E5E7     		b	.L44
 914              	.L54:
 785:Core/Src/main.c ****         }
 915              		.loc 1 785 13 view .LVU197
 916 005e 2146     		mov	r1, r4
 917 0060 0B48     		ldr	r0, .L60+28
 918 0062 FFF7FEFF 		bl	printf
 919              	.LVL71:
 920 0066 E0E7     		b	.L44
 921              	.L46:
 790:Core/Src/main.c ****         }
 922              		.loc 1 790 13 view .LVU198
 923 0068 2146     		mov	r1, r4
 924 006a 0A48     		ldr	r0, .L60+32
 925 006c FFF7FEFF 		bl	printf
 926              	.LVL72:
 927              	.LBE11:
 793:Core/Src/main.c **** static int8_t bmp5_set_config(struct bmp5_osr_odr_press_config *osr_odr_press_cfg, struct bmp5_dev 
 928              		.loc 1 793 1 is_stmt 0 view .LVU199
 929 0070 DBE7     		b	.L44
 930              	.L61:
 931 0072 00BF     		.align	2
 932              	.L60:
 933 0074 00000000 		.word	.LC1
 934 0078 04000000 		.word	.LC2
 935 007c 20000000 		.word	.LC3
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 36


 936 0080 48000000 		.word	.LC4
 937 0084 68000000 		.word	.LC5
 938 0088 88000000 		.word	.LC6
 939 008c A8000000 		.word	.LC7
 940 0090 D8000000 		.word	.LC8
 941 0094 FC000000 		.word	.LC9
 942              		.cfi_endproc
 943              	.LFE148:
 945              		.section	.text.Error_Handler,"ax",%progbits
 946              		.align	1
 947              		.global	Error_Handler
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 952              	Error_Handler:
 953              	.LFB154:
 887:Core/Src/main.c **** 
 888:Core/Src/main.c **** static int32_t llcc68_platform_write_read(void *handle, const uint8_t* command, const uint16_t comm
 889:Core/Src/main.c ****                                      uint8_t* data, const uint16_t data_length ) {
 890:Core/Src/main.c ****  uint8_t res;
 891:Core/Src/main.c ****     
 892:Core/Src/main.c ****     /* set cs low */
 893:Core/Src/main.c ****     HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_RESET);
 894:Core/Src/main.c ****     
 895:Core/Src/main.c ****     /* if in_len > 0 */
 896:Core/Src/main.c ****     if (command_length > 0)
 897:Core/Src/main.c ****     {
 898:Core/Src/main.c ****         /* transmit the input buffer */
 899:Core/Src/main.c ****         res = HAL_SPI_Transmit(&hspi1, command, command_length, 1000);
 900:Core/Src/main.c ****         if (res != HAL_OK)
 901:Core/Src/main.c ****         {
 902:Core/Src/main.c ****             /* set cs high */
 903:Core/Src/main.c ****             HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 904:Core/Src/main.c ****            
 905:Core/Src/main.c ****             return 1;
 906:Core/Src/main.c ****         }
 907:Core/Src/main.c ****     }
 908:Core/Src/main.c ****     
 909:Core/Src/main.c ****     /* if out_len > 0 */
 910:Core/Src/main.c ****     if (data_length > 0)
 911:Core/Src/main.c ****     {
 912:Core/Src/main.c ****         /* transmit to the output buffer */
 913:Core/Src/main.c ****         res = HAL_SPI_Receive(&hspi1, data, data_length, 1000);
 914:Core/Src/main.c ****         if (res != HAL_OK)
 915:Core/Src/main.c ****         {
 916:Core/Src/main.c ****             /* set cs high */
 917:Core/Src/main.c ****             HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 918:Core/Src/main.c ****            
 919:Core/Src/main.c ****             return 1;
 920:Core/Src/main.c ****         }
 921:Core/Src/main.c ****     }
 922:Core/Src/main.c ****     
 923:Core/Src/main.c ****     /* set cs high */
 924:Core/Src/main.c ****     HAL_GPIO_WritePin(CS_WIRELESS_GPIO_Port, CS_WIRELESS_Pin, GPIO_PIN_SET);
 925:Core/Src/main.c ****     
 926:Core/Src/main.c ****     return 0;
 927:Core/Src/main.c ****                                      }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 37


 928:Core/Src/main.c **** 
 929:Core/Src/main.c **** 
 930:Core/Src/main.c **** /* USER CODE END 4 */
 931:Core/Src/main.c **** 
 932:Core/Src/main.c **** /**
 933:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 934:Core/Src/main.c ****   * @retval None
 935:Core/Src/main.c ****   */
 936:Core/Src/main.c **** void Error_Handler(void)
 937:Core/Src/main.c **** {
 954              		.loc 1 937 1 is_stmt 1 view -0
 955              		.cfi_startproc
 956              		@ Volatile: function does not return.
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 938:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 939:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 940:Core/Src/main.c ****   __disable_irq();
 960              		.loc 1 940 3 view .LVU201
 961              	.LBB12:
 962              	.LBI12:
 963              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 38


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 39


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 40


 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 41


 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 42


 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 43


 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 44


 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 45


 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 46


 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 47


 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 48


 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 49


 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 50


 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 51


 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 52


 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 53


 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 54


 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 964              		.loc 2 960 27 view .LVU202
 965              	.LBB13:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 966              		.loc 2 962 3 view .LVU203
 967              		.syntax unified
 968              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 969 0000 72B6     		cpsid i
 970              	@ 0 "" 2
 971              		.thumb
 972              		.syntax unified
 973              	.L63:
 974              	.LBE13:
 975              	.LBE12:
 941:Core/Src/main.c ****   while (1)
 976              		.loc 1 941 3 view .LVU204
 942:Core/Src/main.c ****   {
 943:Core/Src/main.c ****   }
 977              		.loc 1 943 3 view .LVU205
 941:Core/Src/main.c ****   while (1)
 978              		.loc 1 941 9 view .LVU206
 979 0002 FEE7     		b	.L63
 980              		.cfi_endproc
 981              	.LFE154:
 983              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 984              		.align	1
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	MX_USART1_UART_Init:
 990              	.LFB139:
 572:Core/Src/main.c **** 
 991              		.loc 1 572 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995 0000 08B5     		push	{r3, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 3, -8
 998              		.cfi_offset 14, -4
 581:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 999              		.loc 1 581 3 view .LVU208
 581:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 55


 1000              		.loc 1 581 19 is_stmt 0 view .LVU209
 1001 0002 0A48     		ldr	r0, .L68
 1002 0004 0A4B     		ldr	r3, .L68+4
 1003 0006 0360     		str	r3, [r0]
 582:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1004              		.loc 1 582 3 is_stmt 1 view .LVU210
 582:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1005              		.loc 1 582 24 is_stmt 0 view .LVU211
 1006 0008 4FF4E133 		mov	r3, #115200
 1007 000c 4360     		str	r3, [r0, #4]
 583:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1008              		.loc 1 583 3 is_stmt 1 view .LVU212
 583:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1009              		.loc 1 583 26 is_stmt 0 view .LVU213
 1010 000e 0023     		movs	r3, #0
 1011 0010 8360     		str	r3, [r0, #8]
 584:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1012              		.loc 1 584 3 is_stmt 1 view .LVU214
 584:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1013              		.loc 1 584 24 is_stmt 0 view .LVU215
 1014 0012 C360     		str	r3, [r0, #12]
 585:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1015              		.loc 1 585 3 is_stmt 1 view .LVU216
 585:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1016              		.loc 1 585 22 is_stmt 0 view .LVU217
 1017 0014 0361     		str	r3, [r0, #16]
 586:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1018              		.loc 1 586 3 is_stmt 1 view .LVU218
 586:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1019              		.loc 1 586 20 is_stmt 0 view .LVU219
 1020 0016 0C22     		movs	r2, #12
 1021 0018 4261     		str	r2, [r0, #20]
 587:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1022              		.loc 1 587 3 is_stmt 1 view .LVU220
 587:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1023              		.loc 1 587 25 is_stmt 0 view .LVU221
 1024 001a 8361     		str	r3, [r0, #24]
 588:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1025              		.loc 1 588 3 is_stmt 1 view .LVU222
 588:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1026              		.loc 1 588 28 is_stmt 0 view .LVU223
 1027 001c C361     		str	r3, [r0, #28]
 589:Core/Src/main.c ****   {
 1028              		.loc 1 589 3 is_stmt 1 view .LVU224
 589:Core/Src/main.c ****   {
 1029              		.loc 1 589 7 is_stmt 0 view .LVU225
 1030 001e FFF7FEFF 		bl	HAL_UART_Init
 1031              	.LVL73:
 589:Core/Src/main.c ****   {
 1032              		.loc 1 589 6 discriminator 1 view .LVU226
 1033 0022 00B9     		cbnz	r0, .L67
 597:Core/Src/main.c **** 
 1034              		.loc 1 597 1 view .LVU227
 1035 0024 08BD     		pop	{r3, pc}
 1036              	.L67:
 591:Core/Src/main.c ****   }
 1037              		.loc 1 591 5 is_stmt 1 view .LVU228
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 56


 1038 0026 FFF7FEFF 		bl	Error_Handler
 1039              	.LVL74:
 1040              	.L69:
 1041 002a 00BF     		.align	2
 1042              	.L68:
 1043 002c 00000000 		.word	huart1
 1044 0030 00100140 		.word	1073811456
 1045              		.cfi_endproc
 1046              	.LFE139:
 1048              		.section	.rodata.MX_I2C1_Init.str1.4,"aMS",%progbits,1
 1049              		.align	2
 1050              	.LC10:
 1051 0000 54656D70 		.ascii	"Temperature not ready\015\012\000"
 1051      65726174 
 1051      75726520 
 1051      6E6F7420 
 1051      72656164 
 1052              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1053              		.align	1
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1058              	MX_I2C1_Init:
 1059              	.LFB136:
 468:Core/Src/main.c **** 
 1060              		.loc 1 468 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064 0000 00B5     		push	{lr}
 1065              		.cfi_def_cfa_offset 4
 1066              		.cfi_offset 14, -4
 1067 0002 85B0     		sub	sp, sp, #20
 1068              		.cfi_def_cfa_offset 24
 477:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1069              		.loc 1 477 3 view .LVU230
 477:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1070              		.loc 1 477 18 is_stmt 0 view .LVU231
 1071 0004 1948     		ldr	r0, .L76
 1072 0006 1A4B     		ldr	r3, .L76+4
 1073 0008 0360     		str	r3, [r0]
 478:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1074              		.loc 1 478 3 is_stmt 1 view .LVU232
 478:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1075              		.loc 1 478 25 is_stmt 0 view .LVU233
 1076 000a 1A4B     		ldr	r3, .L76+8
 1077 000c 4360     		str	r3, [r0, #4]
 479:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 1078              		.loc 1 479 3 is_stmt 1 view .LVU234
 479:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 130;
 1079              		.loc 1 479 24 is_stmt 0 view .LVU235
 1080 000e 0023     		movs	r3, #0
 1081 0010 8360     		str	r3, [r0, #8]
 480:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1082              		.loc 1 480 3 is_stmt 1 view .LVU236
 480:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1083              		.loc 1 480 26 is_stmt 0 view .LVU237
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 57


 1084 0012 8222     		movs	r2, #130
 1085 0014 C260     		str	r2, [r0, #12]
 481:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1086              		.loc 1 481 3 is_stmt 1 view .LVU238
 481:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1087              		.loc 1 481 29 is_stmt 0 view .LVU239
 1088 0016 4FF48042 		mov	r2, #16384
 1089 001a 0261     		str	r2, [r0, #16]
 482:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1090              		.loc 1 482 3 is_stmt 1 view .LVU240
 482:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1091              		.loc 1 482 30 is_stmt 0 view .LVU241
 1092 001c 4361     		str	r3, [r0, #20]
 483:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1093              		.loc 1 483 3 is_stmt 1 view .LVU242
 483:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1094              		.loc 1 483 26 is_stmt 0 view .LVU243
 1095 001e 8361     		str	r3, [r0, #24]
 484:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1096              		.loc 1 484 3 is_stmt 1 view .LVU244
 484:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1097              		.loc 1 484 30 is_stmt 0 view .LVU245
 1098 0020 C361     		str	r3, [r0, #28]
 485:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1099              		.loc 1 485 3 is_stmt 1 view .LVU246
 485:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1100              		.loc 1 485 28 is_stmt 0 view .LVU247
 1101 0022 0362     		str	r3, [r0, #32]
 486:Core/Src/main.c ****   {
 1102              		.loc 1 486 3 is_stmt 1 view .LVU248
 486:Core/Src/main.c ****   {
 1103              		.loc 1 486 7 is_stmt 0 view .LVU249
 1104 0024 FFF7FEFF 		bl	HAL_I2C_Init
 1105              	.LVL75:
 486:Core/Src/main.c ****   {
 1106              		.loc 1 486 6 discriminator 1 view .LVU250
 1107 0028 88B9     		cbnz	r0, .L75
 491:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 1108              		.loc 1 491 5 is_stmt 1 view .LVU251
 491:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 1109              		.loc 1 491 9 is_stmt 0 view .LVU252
 1110 002a 4FF47A73 		mov	r3, #1000
 1111 002e 0222     		movs	r2, #2
 1112 0030 8221     		movs	r1, #130
 1113 0032 0E48     		ldr	r0, .L76
 1114 0034 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 1115              	.LVL76:
 491:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, (uint8_t*)"Temperature not ready\r\n", 32, 1000);
 1116              		.loc 1 491 8 discriminator 1 view .LVU253
 1117 0038 58B1     		cbz	r0, .L72
 492:Core/Src/main.c ****     } else {
 1118              		.loc 1 492 7 is_stmt 1 view .LVU254
 1119 003a 4FF47A73 		mov	r3, #1000
 1120 003e 2022     		movs	r2, #32
 1121 0040 0D49     		ldr	r1, .L76+12
 1122 0042 0E48     		ldr	r0, .L76+16
 1123 0044 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 58


 1124              	.LVL77:
 1125              	.L70:
 498:Core/Src/main.c **** 
 1126              		.loc 1 498 1 is_stmt 0 view .LVU255
 1127 0048 05B0     		add	sp, sp, #20
 1128              		.cfi_remember_state
 1129              		.cfi_def_cfa_offset 4
 1130              		@ sp needed
 1131 004a 5DF804FB 		ldr	pc, [sp], #4
 1132              	.L75:
 1133              		.cfi_restore_state
 488:Core/Src/main.c ****   }
 1134              		.loc 1 488 5 is_stmt 1 view .LVU256
 1135 004e FFF7FEFF 		bl	Error_Handler
 1136              	.LVL78:
 1137              	.L72:
 494:Core/Src/main.c ****     }
 1138              		.loc 1 494 7 view .LVU257
 1139 0052 4FF47A73 		mov	r3, #1000
 1140 0056 0293     		str	r3, [sp, #8]
 1141 0058 0123     		movs	r3, #1
 1142 005a 0193     		str	r3, [sp, #4]
 1143 005c 0022     		movs	r2, #0
 1144 005e 0092     		str	r2, [sp]
 1145 0060 0422     		movs	r2, #4
 1146 0062 8221     		movs	r1, #130
 1147 0064 0148     		ldr	r0, .L76
 1148 0066 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 1149              	.LVL79:
 498:Core/Src/main.c **** 
 1150              		.loc 1 498 1 is_stmt 0 view .LVU258
 1151 006a EDE7     		b	.L70
 1152              	.L77:
 1153              		.align	2
 1154              	.L76:
 1155 006c 00000000 		.word	hi2c1
 1156 0070 00540040 		.word	1073763328
 1157 0074 A0860100 		.word	100000
 1158 0078 00000000 		.word	.LC10
 1159 007c 00000000 		.word	huart1
 1160              		.cfi_endproc
 1161              	.LFE136:
 1163              		.section	.text.MX_SPI1_Init,"ax",%progbits
 1164              		.align	1
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1169              	MX_SPI1_Init:
 1170              	.LFB138:
 534:Core/Src/main.c **** 
 1171              		.loc 1 534 1 is_stmt 1 view -0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175 0000 08B5     		push	{r3, lr}
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 3, -8
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 59


 1178              		.cfi_offset 14, -4
 544:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1179              		.loc 1 544 3 view .LVU260
 544:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1180              		.loc 1 544 18 is_stmt 0 view .LVU261
 1181 0002 0D48     		ldr	r0, .L82
 1182 0004 0D4B     		ldr	r3, .L82+4
 1183 0006 0360     		str	r3, [r0]
 545:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1184              		.loc 1 545 3 is_stmt 1 view .LVU262
 545:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1185              		.loc 1 545 19 is_stmt 0 view .LVU263
 1186 0008 4FF48273 		mov	r3, #260
 1187 000c 4360     		str	r3, [r0, #4]
 546:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1188              		.loc 1 546 3 is_stmt 1 view .LVU264
 546:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1189              		.loc 1 546 24 is_stmt 0 view .LVU265
 1190 000e 0023     		movs	r3, #0
 1191 0010 8360     		str	r3, [r0, #8]
 547:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1192              		.loc 1 547 3 is_stmt 1 view .LVU266
 547:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1193              		.loc 1 547 23 is_stmt 0 view .LVU267
 1194 0012 C360     		str	r3, [r0, #12]
 548:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1195              		.loc 1 548 3 is_stmt 1 view .LVU268
 548:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1196              		.loc 1 548 26 is_stmt 0 view .LVU269
 1197 0014 0361     		str	r3, [r0, #16]
 549:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1198              		.loc 1 549 3 is_stmt 1 view .LVU270
 549:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1199              		.loc 1 549 23 is_stmt 0 view .LVU271
 1200 0016 4361     		str	r3, [r0, #20]
 550:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1201              		.loc 1 550 3 is_stmt 1 view .LVU272
 550:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1202              		.loc 1 550 18 is_stmt 0 view .LVU273
 1203 0018 4FF40072 		mov	r2, #512
 1204 001c 8261     		str	r2, [r0, #24]
 551:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1205              		.loc 1 551 3 is_stmt 1 view .LVU274
 551:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1206              		.loc 1 551 32 is_stmt 0 view .LVU275
 1207 001e C361     		str	r3, [r0, #28]
 552:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1208              		.loc 1 552 3 is_stmt 1 view .LVU276
 552:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1209              		.loc 1 552 23 is_stmt 0 view .LVU277
 1210 0020 0362     		str	r3, [r0, #32]
 553:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1211              		.loc 1 553 3 is_stmt 1 view .LVU278
 553:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1212              		.loc 1 553 21 is_stmt 0 view .LVU279
 1213 0022 4362     		str	r3, [r0, #36]
 554:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 60


 1214              		.loc 1 554 3 is_stmt 1 view .LVU280
 554:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1215              		.loc 1 554 29 is_stmt 0 view .LVU281
 1216 0024 8362     		str	r3, [r0, #40]
 555:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1217              		.loc 1 555 3 is_stmt 1 view .LVU282
 555:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1218              		.loc 1 555 28 is_stmt 0 view .LVU283
 1219 0026 0A23     		movs	r3, #10
 1220 0028 C362     		str	r3, [r0, #44]
 556:Core/Src/main.c ****   {
 1221              		.loc 1 556 3 is_stmt 1 view .LVU284
 556:Core/Src/main.c ****   {
 1222              		.loc 1 556 7 is_stmt 0 view .LVU285
 1223 002a FFF7FEFF 		bl	HAL_SPI_Init
 1224              	.LVL80:
 556:Core/Src/main.c ****   {
 1225              		.loc 1 556 6 discriminator 1 view .LVU286
 1226 002e 00B9     		cbnz	r0, .L81
 564:Core/Src/main.c **** 
 1227              		.loc 1 564 1 view .LVU287
 1228 0030 08BD     		pop	{r3, pc}
 1229              	.L81:
 558:Core/Src/main.c ****   }
 1230              		.loc 1 558 5 is_stmt 1 view .LVU288
 1231 0032 FFF7FEFF 		bl	Error_Handler
 1232              	.LVL81:
 1233              	.L83:
 1234 0036 00BF     		.align	2
 1235              	.L82:
 1236 0038 00000000 		.word	hspi1
 1237 003c 00300140 		.word	1073819648
 1238              		.cfi_endproc
 1239              	.LFE138:
 1241              		.section	.text.SystemClock_Config,"ax",%progbits
 1242              		.align	1
 1243              		.global	SystemClock_Config
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1248              	SystemClock_Config:
 1249              	.LFB135:
 421:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1250              		.loc 1 421 1 view -0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 80
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254 0000 00B5     		push	{lr}
 1255              		.cfi_def_cfa_offset 4
 1256              		.cfi_offset 14, -4
 1257 0002 95B0     		sub	sp, sp, #84
 1258              		.cfi_def_cfa_offset 88
 422:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1259              		.loc 1 422 3 view .LVU290
 422:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1260              		.loc 1 422 22 is_stmt 0 view .LVU291
 1261 0004 3022     		movs	r2, #48
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 61


 1262 0006 0021     		movs	r1, #0
 1263 0008 08A8     		add	r0, sp, #32
 1264 000a FFF7FEFF 		bl	memset
 1265              	.LVL82:
 423:Core/Src/main.c **** 
 1266              		.loc 1 423 3 is_stmt 1 view .LVU292
 423:Core/Src/main.c **** 
 1267              		.loc 1 423 22 is_stmt 0 view .LVU293
 1268 000e 0023     		movs	r3, #0
 1269 0010 0393     		str	r3, [sp, #12]
 1270 0012 0493     		str	r3, [sp, #16]
 1271 0014 0593     		str	r3, [sp, #20]
 1272 0016 0693     		str	r3, [sp, #24]
 1273 0018 0793     		str	r3, [sp, #28]
 427:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1274              		.loc 1 427 3 is_stmt 1 view .LVU294
 1275              	.LBB14:
 427:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1276              		.loc 1 427 3 view .LVU295
 1277 001a 0193     		str	r3, [sp, #4]
 427:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1278              		.loc 1 427 3 view .LVU296
 1279 001c 1F4A     		ldr	r2, .L90
 1280 001e 116C     		ldr	r1, [r2, #64]
 1281 0020 41F08051 		orr	r1, r1, #268435456
 1282 0024 1164     		str	r1, [r2, #64]
 427:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1283              		.loc 1 427 3 view .LVU297
 1284 0026 126C     		ldr	r2, [r2, #64]
 1285 0028 02F08052 		and	r2, r2, #268435456
 1286 002c 0192     		str	r2, [sp, #4]
 427:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1287              		.loc 1 427 3 view .LVU298
 1288 002e 019A     		ldr	r2, [sp, #4]
 1289              	.LBE14:
 427:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1290              		.loc 1 427 3 view .LVU299
 428:Core/Src/main.c **** 
 1291              		.loc 1 428 3 view .LVU300
 1292              	.LBB15:
 428:Core/Src/main.c **** 
 1293              		.loc 1 428 3 view .LVU301
 1294 0030 0293     		str	r3, [sp, #8]
 428:Core/Src/main.c **** 
 1295              		.loc 1 428 3 view .LVU302
 1296 0032 1B4A     		ldr	r2, .L90+4
 1297 0034 1168     		ldr	r1, [r2]
 1298 0036 41F48041 		orr	r1, r1, #16384
 1299 003a 1160     		str	r1, [r2]
 428:Core/Src/main.c **** 
 1300              		.loc 1 428 3 view .LVU303
 1301 003c 1268     		ldr	r2, [r2]
 1302 003e 02F48042 		and	r2, r2, #16384
 1303 0042 0292     		str	r2, [sp, #8]
 428:Core/Src/main.c **** 
 1304              		.loc 1 428 3 view .LVU304
 1305 0044 029A     		ldr	r2, [sp, #8]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 62


 1306              	.LBE15:
 428:Core/Src/main.c **** 
 1307              		.loc 1 428 3 view .LVU305
 433:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1308              		.loc 1 433 3 view .LVU306
 433:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1309              		.loc 1 433 36 is_stmt 0 view .LVU307
 1310 0046 0222     		movs	r2, #2
 1311 0048 0892     		str	r2, [sp, #32]
 434:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1312              		.loc 1 434 3 is_stmt 1 view .LVU308
 434:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1313              		.loc 1 434 30 is_stmt 0 view .LVU309
 1314 004a 0121     		movs	r1, #1
 1315 004c 0B91     		str	r1, [sp, #44]
 435:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1316              		.loc 1 435 3 is_stmt 1 view .LVU310
 435:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1317              		.loc 1 435 41 is_stmt 0 view .LVU311
 1318 004e 1021     		movs	r1, #16
 1319 0050 0C91     		str	r1, [sp, #48]
 436:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1320              		.loc 1 436 3 is_stmt 1 view .LVU312
 436:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1321              		.loc 1 436 34 is_stmt 0 view .LVU313
 1322 0052 0E92     		str	r2, [sp, #56]
 437:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1323              		.loc 1 437 3 is_stmt 1 view .LVU314
 437:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1324              		.loc 1 437 35 is_stmt 0 view .LVU315
 1325 0054 0F93     		str	r3, [sp, #60]
 438:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 128;
 1326              		.loc 1 438 3 is_stmt 1 view .LVU316
 438:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 128;
 1327              		.loc 1 438 30 is_stmt 0 view .LVU317
 1328 0056 0823     		movs	r3, #8
 1329 0058 1093     		str	r3, [sp, #64]
 439:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1330              		.loc 1 439 3 is_stmt 1 view .LVU318
 439:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1331              		.loc 1 439 30 is_stmt 0 view .LVU319
 1332 005a 8023     		movs	r3, #128
 1333 005c 1193     		str	r3, [sp, #68]
 440:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 6;
 1334              		.loc 1 440 3 is_stmt 1 view .LVU320
 440:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 6;
 1335              		.loc 1 440 30 is_stmt 0 view .LVU321
 1336 005e 1292     		str	r2, [sp, #72]
 441:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1337              		.loc 1 441 3 is_stmt 1 view .LVU322
 441:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1338              		.loc 1 441 30 is_stmt 0 view .LVU323
 1339 0060 0623     		movs	r3, #6
 1340 0062 1393     		str	r3, [sp, #76]
 442:Core/Src/main.c ****   {
 1341              		.loc 1 442 3 is_stmt 1 view .LVU324
 442:Core/Src/main.c ****   {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 63


 1342              		.loc 1 442 7 is_stmt 0 view .LVU325
 1343 0064 08A8     		add	r0, sp, #32
 1344 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1345              	.LVL83:
 442:Core/Src/main.c ****   {
 1346              		.loc 1 442 6 discriminator 1 view .LVU326
 1347 006a 98B9     		cbnz	r0, .L88
 449:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1348              		.loc 1 449 3 is_stmt 1 view .LVU327
 449:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1349              		.loc 1 449 31 is_stmt 0 view .LVU328
 1350 006c 0F23     		movs	r3, #15
 1351 006e 0393     		str	r3, [sp, #12]
 451:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1352              		.loc 1 451 3 is_stmt 1 view .LVU329
 451:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1353              		.loc 1 451 34 is_stmt 0 view .LVU330
 1354 0070 0223     		movs	r3, #2
 1355 0072 0493     		str	r3, [sp, #16]
 452:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1356              		.loc 1 452 3 is_stmt 1 view .LVU331
 452:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1357              		.loc 1 452 35 is_stmt 0 view .LVU332
 1358 0074 0023     		movs	r3, #0
 1359 0076 0593     		str	r3, [sp, #20]
 453:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1360              		.loc 1 453 3 is_stmt 1 view .LVU333
 453:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1361              		.loc 1 453 36 is_stmt 0 view .LVU334
 1362 0078 4FF4A053 		mov	r3, #5120
 1363 007c 0693     		str	r3, [sp, #24]
 454:Core/Src/main.c **** 
 1364              		.loc 1 454 3 is_stmt 1 view .LVU335
 454:Core/Src/main.c **** 
 1365              		.loc 1 454 36 is_stmt 0 view .LVU336
 1366 007e 4FF48053 		mov	r3, #4096
 1367 0082 0793     		str	r3, [sp, #28]
 456:Core/Src/main.c ****   {
 1368              		.loc 1 456 3 is_stmt 1 view .LVU337
 456:Core/Src/main.c ****   {
 1369              		.loc 1 456 7 is_stmt 0 view .LVU338
 1370 0084 0421     		movs	r1, #4
 1371 0086 03A8     		add	r0, sp, #12
 1372 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1373              	.LVL84:
 456:Core/Src/main.c ****   {
 1374              		.loc 1 456 6 discriminator 1 view .LVU339
 1375 008c 20B9     		cbnz	r0, .L89
 460:Core/Src/main.c **** 
 1376              		.loc 1 460 1 view .LVU340
 1377 008e 15B0     		add	sp, sp, #84
 1378              		.cfi_remember_state
 1379              		.cfi_def_cfa_offset 4
 1380              		@ sp needed
 1381 0090 5DF804FB 		ldr	pc, [sp], #4
 1382              	.L88:
 1383              		.cfi_restore_state
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 64


 444:Core/Src/main.c ****   }
 1384              		.loc 1 444 5 is_stmt 1 view .LVU341
 1385 0094 FFF7FEFF 		bl	Error_Handler
 1386              	.LVL85:
 1387              	.L89:
 458:Core/Src/main.c ****   }
 1388              		.loc 1 458 5 view .LVU342
 1389 0098 FFF7FEFF 		bl	Error_Handler
 1390              	.LVL86:
 1391              	.L91:
 1392              		.align	2
 1393              	.L90:
 1394 009c 00380240 		.word	1073887232
 1395 00a0 00700040 		.word	1073770496
 1396              		.cfi_endproc
 1397              	.LFE135:
 1399              		.global	__aeabi_f2d
 1400              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1401              		.align	2
 1402              	.LC11:
 1403 0000 25342E32 		.ascii	"%4.2f,%4.2f,%4.2f,%4.2f,%4.2f,%4.2f,%.2f,101.325\015"
 1403      662C2534 
 1403      2E32662C 
 1403      25342E32 
 1403      662C2534 
 1404 0031 0A00     		.ascii	"\012\000"
 1405              		.section	.text.main,"ax",%progbits
 1406              		.align	1
 1407              		.global	main
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1412              	main:
 1413              	.LFB134:
 110:Core/Src/main.c **** 
 1414              		.loc 1 110 1 view -0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 56
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 1418 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1419              		.cfi_def_cfa_offset 32
 1420              		.cfi_offset 4, -32
 1421              		.cfi_offset 5, -28
 1422              		.cfi_offset 6, -24
 1423              		.cfi_offset 7, -20
 1424              		.cfi_offset 8, -16
 1425              		.cfi_offset 9, -12
 1426              		.cfi_offset 10, -8
 1427              		.cfi_offset 14, -4
 1428 0004 9AB0     		sub	sp, sp, #104
 1429              		.cfi_def_cfa_offset 136
 119:Core/Src/main.c **** 
 1430              		.loc 1 119 3 view .LVU344
 1431 0006 FFF7FEFF 		bl	HAL_Init
 1432              	.LVL87:
 126:Core/Src/main.c **** 
 1433              		.loc 1 126 3 view .LVU345
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 65


 1434 000a FFF7FEFF 		bl	SystemClock_Config
 1435              	.LVL88:
 133:Core/Src/main.c ****   MX_SDIO_SD_Init();
 1436              		.loc 1 133 3 view .LVU346
 1437 000e FFF7FEFF 		bl	MX_GPIO_Init
 1438              	.LVL89:
 134:Core/Src/main.c ****   MX_USART1_UART_Init();
 1439              		.loc 1 134 3 view .LVU347
 1440 0012 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1441              	.LVL90:
 135:Core/Src/main.c ****   MX_I2C1_Init();
 1442              		.loc 1 135 3 view .LVU348
 1443 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1444              	.LVL91:
 136:Core/Src/main.c ****   MX_FATFS_Init();
 1445              		.loc 1 136 3 view .LVU349
 1446 001a FFF7FEFF 		bl	MX_I2C1_Init
 1447              	.LVL92:
 137:Core/Src/main.c ****   MX_SPI1_Init();
 1448              		.loc 1 137 3 view .LVU350
 1449 001e FFF7FEFF 		bl	MX_FATFS_Init
 1450              	.LVL93:
 138:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1451              		.loc 1 138 3 view .LVU351
 1452 0022 FFF7FEFF 		bl	MX_SPI1_Init
 1453              	.LVL94:
 144:Core/Src/main.c ****   dev_ctx.write_reg = lsm6dsm_platform_write;
 1454              		.loc 1 144 3 view .LVU352
 145:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1455              		.loc 1 145 3 view .LVU353
 145:Core/Src/main.c ****   dev_ctx.read_reg = lsm6dsm_platform_read;
 1456              		.loc 1 145 21 is_stmt 0 view .LVU354
 1457 0026 C14B     		ldr	r3, .L112
 1458 0028 1693     		str	r3, [sp, #88]
 146:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1459              		.loc 1 146 3 is_stmt 1 view .LVU355
 146:Core/Src/main.c ****   dev_ctx.handle = &hspi1;
 1460              		.loc 1 146 20 is_stmt 0 view .LVU356
 1461 002a C14B     		ldr	r3, .L112+4
 1462 002c 1793     		str	r3, [sp, #92]
 147:Core/Src/main.c **** 
 1463              		.loc 1 147 3 is_stmt 1 view .LVU357
 147:Core/Src/main.c **** 
 1464              		.loc 1 147 18 is_stmt 0 view .LVU358
 1465 002e C14B     		ldr	r3, .L112+8
 1466 0030 1993     		str	r3, [sp, #100]
 149:Core/Src/main.c ****   radio_ctx.write_reg = llcc68_platform_write;
 1467              		.loc 1 149 3 is_stmt 1 view .LVU359
 150:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_read;
 1468              		.loc 1 150 3 view .LVU360
 150:Core/Src/main.c ****   radio_ctx.read_reg = llcc68_platform_read;
 1469              		.loc 1 150 23 is_stmt 0 view .LVU361
 1470 0032 C14A     		ldr	r2, .L112+12
 1471 0034 1192     		str	r2, [sp, #68]
 151:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
 1472              		.loc 1 151 3 is_stmt 1 view .LVU362
 151:Core/Src/main.c ****   radio_ctx.reset = llcc68_platform_reset;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 66


 1473              		.loc 1 151 22 is_stmt 0 view .LVU363
 1474 0036 C14A     		ldr	r2, .L112+16
 1475 0038 1292     		str	r2, [sp, #72]
 152:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 1476              		.loc 1 152 3 is_stmt 1 view .LVU364
 152:Core/Src/main.c ****   radio_ctx.handle = &hspi1;
 1477              		.loc 1 152 19 is_stmt 0 view .LVU365
 1478 003a C14A     		ldr	r2, .L112+20
 1479 003c 1392     		str	r2, [sp, #76]
 153:Core/Src/main.c ****   radio_ctx.gpio = CS_WIRELESS_GPIO_Port;
 1480              		.loc 1 153 3 is_stmt 1 view .LVU366
 153:Core/Src/main.c ****   radio_ctx.gpio = CS_WIRELESS_GPIO_Port;
 1481              		.loc 1 153 20 is_stmt 0 view .LVU367
 1482 003e 1593     		str	r3, [sp, #84]
 154:Core/Src/main.c **** 
 1483              		.loc 1 154 3 is_stmt 1 view .LVU368
 154:Core/Src/main.c **** 
 1484              		.loc 1 154 18 is_stmt 0 view .LVU369
 1485 0040 C04B     		ldr	r3, .L112+24
 1486 0042 1493     		str	r3, [sp, #80]
 166:Core/Src/main.c **** 
 1487              		.loc 1 166 3 is_stmt 1 view .LVU370
 1488 0044 4FF47A70 		mov	r0, #1000
 1489 0048 FFF7FEFF 		bl	platform_delay
 1490              	.LVL95:
 181:Core/Src/main.c ****   //set auto increment to read several register at same time
 1491              		.loc 1 181 3 view .LVU371
 1492 004c 0121     		movs	r1, #1
 1493 004e 16A8     		add	r0, sp, #88
 1494 0050 FFF7FEFF 		bl	lsm6dsm_spi_mode_set
 1495              	.LVL96:
 183:Core/Src/main.c **** 
 1496              		.loc 1 183 3 view .LVU372
 1497 0054 0121     		movs	r1, #1
 1498 0056 16A8     		add	r0, sp, #88
 1499 0058 FFF7FEFF 		bl	lsm6dsm_auto_increment_set
 1500              	.LVL97:
 186:Core/Src/main.c ****   
 1501              		.loc 1 186 3 view .LVU373
 1502 005c BA4C     		ldr	r4, .L112+28
 1503 005e 2146     		mov	r1, r4
 1504 0060 16A8     		add	r0, sp, #88
 1505 0062 FFF7FEFF 		bl	lsm6dsm_device_id_get
 1506              	.LVL98:
 188:Core/Src/main.c ****     while (1) {
 1507              		.loc 1 188 3 view .LVU374
 188:Core/Src/main.c ****     while (1) {
 1508              		.loc 1 188 14 is_stmt 0 view .LVU375
 1509 0066 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 188:Core/Src/main.c ****     while (1) {
 1510              		.loc 1 188 6 view .LVU376
 1511 0068 6A2B     		cmp	r3, #106
 1512 006a 00D0     		beq	.L93
 1513              	.L94:
 189:Core/Src/main.c ****       /* manage here device not found */
 1514              		.loc 1 189 5 is_stmt 1 view .LVU377
 191:Core/Src/main.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 67


 1515              		.loc 1 191 5 view .LVU378
 189:Core/Src/main.c ****       /* manage here device not found */
 1516              		.loc 1 189 11 view .LVU379
 1517 006c FEE7     		b	.L94
 1518              	.L93:
 197:Core/Src/main.c ****     lsm6dsm_reset_get(&dev_ctx, &rst);
 1519              		.loc 1 197 3 view .LVU380
 198:Core/Src/main.c ****   } while (rst);
 1520              		.loc 1 198 5 view .LVU381
 1521 006e B74C     		ldr	r4, .L112+32
 1522 0070 2146     		mov	r1, r4
 1523 0072 16A8     		add	r0, sp, #88
 1524 0074 FFF7FEFF 		bl	lsm6dsm_reset_get
 1525              	.LVL99:
 199:Core/Src/main.c **** 
 1526              		.loc 1 199 12 discriminator 1 view .LVU382
 1527 0078 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1528 007a 002B     		cmp	r3, #0
 1529 007c F7D1     		bne	.L93
 202:Core/Src/main.c ****   /* Set Output Data Rate for Acc and Gyro */
 1530              		.loc 1 202 3 view .LVU383
 1531 007e 0121     		movs	r1, #1
 1532 0080 16A8     		add	r0, sp, #88
 1533 0082 FFF7FEFF 		bl	lsm6dsm_block_data_update_set
 1534              	.LVL100:
 204:Core/Src/main.c ****   lsm6dsm_gy_data_rate_set(&dev_ctx, LSM6DSM_XL_ODR_6k66Hz);
 1535              		.loc 1 204 3 view .LVU384
 1536 0086 0A21     		movs	r1, #10
 1537 0088 16A8     		add	r0, sp, #88
 1538 008a FFF7FEFF 		bl	lsm6dsm_xl_data_rate_set
 1539              	.LVL101:
 205:Core/Src/main.c ****   /* Set full scale */
 1540              		.loc 1 205 3 view .LVU385
 1541 008e 0A21     		movs	r1, #10
 1542 0090 16A8     		add	r0, sp, #88
 1543 0092 FFF7FEFF 		bl	lsm6dsm_gy_data_rate_set
 1544              	.LVL102:
 207:Core/Src/main.c ****   lsm6dsm_gy_full_scale_set(&dev_ctx, LSM6DSM_2000dps);
 1545              		.loc 1 207 3 view .LVU386
 1546 0096 0021     		movs	r1, #0
 1547 0098 16A8     		add	r0, sp, #88
 1548 009a FFF7FEFF 		bl	lsm6dsm_xl_full_scale_set
 1549              	.LVL103:
 208:Core/Src/main.c ****   /* Configure filtering chain(No aux interface)
 1550              		.loc 1 208 3 view .LVU387
 1551 009e 0621     		movs	r1, #6
 1552 00a0 16A8     		add	r0, sp, #88
 1553 00a2 FFF7FEFF 		bl	lsm6dsm_gy_full_scale_set
 1554              	.LVL104:
 212:Core/Src/main.c ****   /* Accelerometer - LPF1 path (LPF2 not used) */
 1555              		.loc 1 212 3 view .LVU388
 1556 00a6 0121     		movs	r1, #1
 1557 00a8 16A8     		add	r0, sp, #88
 1558 00aa FFF7FEFF 		bl	lsm6dsm_xl_filter_analog_set
 1559              	.LVL105:
 216:Core/Src/main.c ****                                LSM6DSM_XL_LOW_LAT_LP_ODR_DIV_400);
 1560              		.loc 1 216 3 view .LVU389
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 68


 1561 00ae 0321     		movs	r1, #3
 1562 00b0 16A8     		add	r0, sp, #88
 1563 00b2 FFF7FEFF 		bl	lsm6dsm_xl_lp2_bandwidth_set
 1564              	.LVL106:
 222:Core/Src/main.c ****   // update the offset bias of acceleration
 1565              		.loc 1 222 3 view .LVU390
 1566 00b6 0B21     		movs	r1, #11
 1567 00b8 16A8     		add	r0, sp, #88
 1568 00ba FFF7FEFF 		bl	lsm6dsm_gy_band_pass_set
 1569              	.LVL107:
 224:Core/Src/main.c **** 
 1570              		.loc 1 224 3 view .LVU391
 1571 00be 4FF4FA60 		mov	r0, #2000
 1572 00c2 FFF7FEFF 		bl	platform_delay
 1573              	.LVL108:
 226:Core/Src/main.c ****   //create a while loop that gets 5 sample of acceleration and calculate the average, then set the 
 1574              		.loc 1 226 3 view .LVU392
 228:Core/Src/main.c ****   int i = 0;
 1575              		.loc 1 228 3 view .LVU393
 228:Core/Src/main.c ****   int i = 0;
 1576              		.loc 1 228 11 is_stmt 0 view .LVU394
 1577 00c6 0024     		movs	r4, #0
 1578 00c8 ADF83C40 		strh	r4, [sp, #60]	@ movhi
 1579 00cc ADF83E40 		strh	r4, [sp, #62]	@ movhi
 1580 00d0 ADF84040 		strh	r4, [sp, #64]	@ movhi
 229:Core/Src/main.c ****   do {
 1581              		.loc 1 229 3 is_stmt 1 view .LVU395
 1582              	.LVL109:
 229:Core/Src/main.c ****   do {
 1583              		.loc 1 229 3 is_stmt 0 view .LVU396
 1584 00d4 02E0     		b	.L96
 1585              	.LVL110:
 1586              	.L95:
 244:Core/Src/main.c ****   acc_bias[0] /= SAMPLE_SIZE;
 1587              		.loc 1 244 14 is_stmt 1 view .LVU397
 1588 00d6 B4F57A7F 		cmp	r4, #1000
 1589 00da 48DA     		bge	.L108
 1590              	.LVL111:
 1591              	.L96:
 230:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 1592              		.loc 1 230 3 view .LVU398
 1593              	.LBB16:
 231:Core/Src/main.c ****       /* Read output only if new value is available */
 1594              		.loc 1 231 5 view .LVU399
 233:Core/Src/main.c ****       if (reg.status_reg.xlda) {
 1595              		.loc 1 233 7 view .LVU400
 1596 00dc 0CA9     		add	r1, sp, #48
 1597 00de 16A8     		add	r0, sp, #88
 1598 00e0 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1599              	.LVL112:
 234:Core/Src/main.c ****         /* Read acceleration field data */
 1600              		.loc 1 234 7 view .LVU401
 234:Core/Src/main.c ****         /* Read acceleration field data */
 1601              		.loc 1 234 11 is_stmt 0 view .LVU402
 1602 00e4 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 234:Core/Src/main.c ****         /* Read acceleration field data */
 1603              		.loc 1 234 10 view .LVU403
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 69


 1604 00e8 13F0010F 		tst	r3, #1
 1605 00ec F3D0     		beq	.L95
 1606              	.LBB17:
 236:Core/Src/main.c ****         lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1607              		.loc 1 236 9 is_stmt 1 view .LVU404
 1608 00ee 984D     		ldr	r5, .L112+36
 1609 00f0 0023     		movs	r3, #0
 1610 00f2 2B60     		str	r3, [r5]
 1611 00f4 AB80     		strh	r3, [r5, #4]	@ movhi
 237:Core/Src/main.c ****         acc_bias[0] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[0]);
 1612              		.loc 1 237 9 view .LVU405
 1613 00f6 2946     		mov	r1, r5
 1614 00f8 16A8     		add	r0, sp, #88
 1615 00fa FFF7FEFF 		bl	lsm6dsm_acceleration_raw_get
 1616              	.LVL113:
 238:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1617              		.loc 1 238 9 view .LVU406
 238:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1618              		.loc 1 238 24 is_stmt 0 view .LVU407
 1619 00fe B5F90000 		ldrsh	r0, [r5]
 1620 0102 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1621              	.LVL114:
 238:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1622              		.loc 1 238 17 discriminator 1 view .LVU408
 1623 0106 BDF93C30 		ldrsh	r3, [sp, #60]
 1624 010a 07EE903A 		vmov	s15, r3	@ int
 238:Core/Src/main.c ****         acc_bias[1] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[1]);
 1625              		.loc 1 238 21 discriminator 1 view .LVU409
 1626 010e F8EEE77A 		vcvt.f32.s32	s15, s15
 1627 0112 77EE807A 		vadd.f32	s15, s15, s0
 1628 0116 FDEEE77A 		vcvt.s32.f32	s15, s15
 1629 011a 17EE903A 		vmov	r3, s15	@ int
 1630 011e ADF83C30 		strh	r3, [sp, #60]	@ movhi
 239:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1631              		.loc 1 239 9 is_stmt 1 view .LVU410
 239:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1632              		.loc 1 239 24 is_stmt 0 view .LVU411
 1633 0122 B5F90200 		ldrsh	r0, [r5, #2]
 1634 0126 FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1635              	.LVL115:
 239:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1636              		.loc 1 239 17 discriminator 1 view .LVU412
 1637 012a BDF93E30 		ldrsh	r3, [sp, #62]
 1638 012e 07EE903A 		vmov	s15, r3	@ int
 239:Core/Src/main.c ****         acc_bias[2] += lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[2]);
 1639              		.loc 1 239 21 discriminator 1 view .LVU413
 1640 0132 F8EEE77A 		vcvt.f32.s32	s15, s15
 1641 0136 77EE807A 		vadd.f32	s15, s15, s0
 1642 013a FDEEE77A 		vcvt.s32.f32	s15, s15
 1643 013e 17EE903A 		vmov	r3, s15	@ int
 1644 0142 ADF83E30 		strh	r3, [sp, #62]	@ movhi
 240:Core/Src/main.c ****         // platform_delay(100);
 1645              		.loc 1 240 9 is_stmt 1 view .LVU414
 240:Core/Src/main.c ****         // platform_delay(100);
 1646              		.loc 1 240 24 is_stmt 0 view .LVU415
 1647 0146 B5F90400 		ldrsh	r0, [r5, #4]
 1648 014a FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 70


 1649              	.LVL116:
 240:Core/Src/main.c ****         // platform_delay(100);
 1650              		.loc 1 240 17 discriminator 1 view .LVU416
 1651 014e BDF94030 		ldrsh	r3, [sp, #64]
 1652 0152 07EE903A 		vmov	s15, r3	@ int
 240:Core/Src/main.c ****         // platform_delay(100);
 1653              		.loc 1 240 21 discriminator 1 view .LVU417
 1654 0156 F8EEE77A 		vcvt.f32.s32	s15, s15
 1655 015a 77EE807A 		vadd.f32	s15, s15, s0
 1656 015e FDEEE77A 		vcvt.s32.f32	s15, s15
 1657 0162 17EE903A 		vmov	r3, s15	@ int
 1658 0166 ADF84030 		strh	r3, [sp, #64]	@ movhi
 242:Core/Src/main.c ****       }
 1659              		.loc 1 242 9 is_stmt 1 view .LVU418
 242:Core/Src/main.c ****       }
 1660              		.loc 1 242 10 is_stmt 0 view .LVU419
 1661 016a 0134     		adds	r4, r4, #1
 1662              	.LVL117:
 242:Core/Src/main.c ****       }
 1663              		.loc 1 242 10 view .LVU420
 1664 016c B3E7     		b	.L95
 1665              	.L108:
 242:Core/Src/main.c ****       }
 1666              		.loc 1 242 10 view .LVU421
 1667              	.LBE17:
 1668              	.LBE16:
 245:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 1669              		.loc 1 245 3 is_stmt 1 view .LVU422
 245:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 1670              		.loc 1 245 11 is_stmt 0 view .LVU423
 1671 016e BDF93C30 		ldrsh	r3, [sp, #60]
 245:Core/Src/main.c ****   acc_bias[1] /= SAMPLE_SIZE;
 1672              		.loc 1 245 15 view .LVU424
 1673 0172 4FF47A72 		mov	r2, #1000
 1674 0176 93FBF2F3 		sdiv	r3, r3, r2
 1675 017a ADF83C30 		strh	r3, [sp, #60]	@ movhi
 246:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 1676              		.loc 1 246 3 is_stmt 1 view .LVU425
 246:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 1677              		.loc 1 246 11 is_stmt 0 view .LVU426
 1678 017e BDF93E30 		ldrsh	r3, [sp, #62]
 246:Core/Src/main.c ****   acc_bias[2] /= SAMPLE_SIZE;
 1679              		.loc 1 246 15 view .LVU427
 1680 0182 93FBF2F3 		sdiv	r3, r3, r2
 1681 0186 ADF83E30 		strh	r3, [sp, #62]	@ movhi
 247:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 1682              		.loc 1 247 3 is_stmt 1 view .LVU428
 247:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 1683              		.loc 1 247 11 is_stmt 0 view .LVU429
 1684 018a BDF94030 		ldrsh	r3, [sp, #64]
 247:Core/Src/main.c ****   // for (int i = 0; i < 10; i++) {
 1685              		.loc 1 247 15 view .LVU430
 1686 018e 93FBF2F3 		sdiv	r3, r3, r2
 1687 0192 ADF84030 		strh	r3, [sp, #64]	@ movhi
 262:Core/Src/main.c ****   i = 0;
 1688              		.loc 1 262 3 is_stmt 1 view .LVU431
 262:Core/Src/main.c ****   i = 0;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 71


 1689              		.loc 1 262 11 is_stmt 0 view .LVU432
 1690 0196 0024     		movs	r4, #0
 1691              	.LVL118:
 262:Core/Src/main.c ****   i = 0;
 1692              		.loc 1 262 11 view .LVU433
 1693 0198 ADF83440 		strh	r4, [sp, #52]	@ movhi
 1694 019c ADF83640 		strh	r4, [sp, #54]	@ movhi
 1695 01a0 ADF83840 		strh	r4, [sp, #56]	@ movhi
 263:Core/Src/main.c ****   do {
 1696              		.loc 1 263 3 is_stmt 1 view .LVU434
 1697              	.LVL119:
 263:Core/Src/main.c ****   do {
 1698              		.loc 1 263 3 is_stmt 0 view .LVU435
 1699 01a4 02E0     		b	.L98
 1700              	.LVL120:
 1701              	.L97:
 278:Core/Src/main.c ****   gyro_bias[0] /= SAMPLE_SIZE;
 1702              		.loc 1 278 14 is_stmt 1 view .LVU436
 1703 01a6 B4F57A7F 		cmp	r4, #1000
 1704 01aa 48DA     		bge	.L109
 1705              	.LVL121:
 1706              	.L98:
 264:Core/Src/main.c ****     lsm6dsm_reg_t reg;
 1707              		.loc 1 264 3 view .LVU437
 1708              	.LBB18:
 265:Core/Src/main.c **** 	    /* Read output only if new value is available */
 1709              		.loc 1 265 5 view .LVU438
 267:Core/Src/main.c ****       if (reg.status_reg.gda) {
 1710              		.loc 1 267 6 view .LVU439
 1711 01ac 0CA9     		add	r1, sp, #48
 1712 01ae 16A8     		add	r0, sp, #88
 1713 01b0 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 1714              	.LVL122:
 268:Core/Src/main.c ****         /* Read angular rate field data */
 1715              		.loc 1 268 7 view .LVU440
 268:Core/Src/main.c ****         /* Read angular rate field data */
 1716              		.loc 1 268 11 is_stmt 0 view .LVU441
 1717 01b4 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 268:Core/Src/main.c ****         /* Read angular rate field data */
 1718              		.loc 1 268 10 view .LVU442
 1719 01b8 13F0020F 		tst	r3, #2
 1720 01bc F3D0     		beq	.L97
 1721              	.LBB19:
 270:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1722              		.loc 1 270 9 is_stmt 1 view .LVU443
 1723 01be 654D     		ldr	r5, .L112+40
 1724 01c0 0023     		movs	r3, #0
 1725 01c2 2B60     		str	r3, [r5]
 1726 01c4 AB80     		strh	r3, [r5, #4]	@ movhi
 271:Core/Src/main.c ****         gyro_bias[0] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[0]);
 1727              		.loc 1 271 9 view .LVU444
 1728 01c6 2946     		mov	r1, r5
 1729 01c8 16A8     		add	r0, sp, #88
 1730 01ca FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1731              	.LVL123:
 272:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1732              		.loc 1 272 9 view .LVU445
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 72


 272:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1733              		.loc 1 272 25 is_stmt 0 view .LVU446
 1734 01ce B5F90000 		ldrsh	r0, [r5]
 1735 01d2 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1736              	.LVL124:
 272:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1737              		.loc 1 272 18 discriminator 1 view .LVU447
 1738 01d6 BDF93430 		ldrsh	r3, [sp, #52]
 1739 01da 07EE903A 		vmov	s15, r3	@ int
 272:Core/Src/main.c ****         gyro_bias[1] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[1]);
 1740              		.loc 1 272 22 discriminator 1 view .LVU448
 1741 01de F8EEE77A 		vcvt.f32.s32	s15, s15
 1742 01e2 77EE807A 		vadd.f32	s15, s15, s0
 1743 01e6 FDEEE77A 		vcvt.s32.f32	s15, s15
 1744 01ea 17EE903A 		vmov	r3, s15	@ int
 1745 01ee ADF83430 		strh	r3, [sp, #52]	@ movhi
 273:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1746              		.loc 1 273 9 is_stmt 1 view .LVU449
 273:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1747              		.loc 1 273 25 is_stmt 0 view .LVU450
 1748 01f2 B5F90200 		ldrsh	r0, [r5, #2]
 1749 01f6 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1750              	.LVL125:
 273:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1751              		.loc 1 273 18 discriminator 1 view .LVU451
 1752 01fa BDF93630 		ldrsh	r3, [sp, #54]
 1753 01fe 07EE903A 		vmov	s15, r3	@ int
 273:Core/Src/main.c ****         gyro_bias[2] += lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[2]);
 1754              		.loc 1 273 22 discriminator 1 view .LVU452
 1755 0202 F8EEE77A 		vcvt.f32.s32	s15, s15
 1756 0206 77EE807A 		vadd.f32	s15, s15, s0
 1757 020a FDEEE77A 		vcvt.s32.f32	s15, s15
 1758 020e 17EE903A 		vmov	r3, s15	@ int
 1759 0212 ADF83630 		strh	r3, [sp, #54]	@ movhi
 274:Core/Src/main.c ****         // platform_delay(100);
 1760              		.loc 1 274 9 is_stmt 1 view .LVU453
 274:Core/Src/main.c ****         // platform_delay(100);
 1761              		.loc 1 274 25 is_stmt 0 view .LVU454
 1762 0216 B5F90400 		ldrsh	r0, [r5, #4]
 1763 021a FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1764              	.LVL126:
 274:Core/Src/main.c ****         // platform_delay(100);
 1765              		.loc 1 274 18 discriminator 1 view .LVU455
 1766 021e BDF93830 		ldrsh	r3, [sp, #56]
 1767 0222 07EE903A 		vmov	s15, r3	@ int
 274:Core/Src/main.c ****         // platform_delay(100);
 1768              		.loc 1 274 22 discriminator 1 view .LVU456
 1769 0226 F8EEE77A 		vcvt.f32.s32	s15, s15
 1770 022a 77EE807A 		vadd.f32	s15, s15, s0
 1771 022e FDEEE77A 		vcvt.s32.f32	s15, s15
 1772 0232 17EE903A 		vmov	r3, s15	@ int
 1773 0236 ADF83830 		strh	r3, [sp, #56]	@ movhi
 276:Core/Src/main.c ****       }
 1774              		.loc 1 276 9 is_stmt 1 view .LVU457
 276:Core/Src/main.c ****       }
 1775              		.loc 1 276 10 is_stmt 0 view .LVU458
 1776 023a 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 73


 1777              	.LVL127:
 276:Core/Src/main.c ****       }
 1778              		.loc 1 276 10 view .LVU459
 1779 023c B3E7     		b	.L97
 1780              	.L109:
 276:Core/Src/main.c ****       }
 1781              		.loc 1 276 10 view .LVU460
 1782              	.LBE19:
 1783              	.LBE18:
 279:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 1784              		.loc 1 279 3 is_stmt 1 view .LVU461
 279:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 1785              		.loc 1 279 12 is_stmt 0 view .LVU462
 1786 023e BDF93430 		ldrsh	r3, [sp, #52]
 279:Core/Src/main.c ****   gyro_bias[1] /= SAMPLE_SIZE;
 1787              		.loc 1 279 16 view .LVU463
 1788 0242 4FF47A72 		mov	r2, #1000
 1789 0246 93FBF2F3 		sdiv	r3, r3, r2
 1790 024a ADF83430 		strh	r3, [sp, #52]	@ movhi
 280:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 1791              		.loc 1 280 3 is_stmt 1 view .LVU464
 280:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 1792              		.loc 1 280 12 is_stmt 0 view .LVU465
 1793 024e BDF93630 		ldrsh	r3, [sp, #54]
 280:Core/Src/main.c ****   gyro_bias[2] /= SAMPLE_SIZE;
 1794              		.loc 1 280 16 view .LVU466
 1795 0252 93FBF2F3 		sdiv	r3, r3, r2
 1796 0256 ADF83630 		strh	r3, [sp, #54]	@ movhi
 281:Core/Src/main.c **** 
 1797              		.loc 1 281 3 is_stmt 1 view .LVU467
 281:Core/Src/main.c **** 
 1798              		.loc 1 281 12 is_stmt 0 view .LVU468
 1799 025a BDF93830 		ldrsh	r3, [sp, #56]
 281:Core/Src/main.c **** 
 1800              		.loc 1 281 16 view .LVU469
 1801 025e 93FBF2F3 		sdiv	r3, r3, r2
 1802 0262 ADF83830 		strh	r3, [sp, #56]	@ movhi
 283:Core/Src/main.c ****   gyro_bias[1] = 0;
 1803              		.loc 1 283 3 is_stmt 1 view .LVU470
 283:Core/Src/main.c ****   gyro_bias[1] = 0;
 1804              		.loc 1 283 16 is_stmt 0 view .LVU471
 1805 0266 0023     		movs	r3, #0
 1806 0268 ADF83430 		strh	r3, [sp, #52]	@ movhi
 284:Core/Src/main.c ****   gyro_bias[2] = 0;
 1807              		.loc 1 284 3 is_stmt 1 view .LVU472
 284:Core/Src/main.c ****   gyro_bias[2] = 0;
 1808              		.loc 1 284 16 is_stmt 0 view .LVU473
 1809 026c ADF83630 		strh	r3, [sp, #54]	@ movhi
 285:Core/Src/main.c **** 
 1810              		.loc 1 285 3 is_stmt 1 view .LVU474
 285:Core/Src/main.c **** 
 1811              		.loc 1 285 16 is_stmt 0 view .LVU475
 1812 0270 ADF83830 		strh	r3, [sp, #56]	@ movhi
 1813 0274 ABE0     		b	.L106
 1814              	.LVL128:
 1815              	.L110:
 1816              	.LBB20:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 74


 1817              	.LBB21:
 335:Core/Src/main.c ****         lsm6dsm_acceleration_raw_get(&dev_ctx, data_raw_acceleration);
 1818              		.loc 1 335 9 is_stmt 1 view .LVU476
 1819 0276 3649     		ldr	r1, .L112+36
 1820 0278 0024     		movs	r4, #0
 1821 027a 0C60     		str	r4, [r1]
 1822 027c 8C80     		strh	r4, [r1, #4]	@ movhi
 336:Core/Src/main.c ****         for (int j = 0; j < 3; j++) {
 1823              		.loc 1 336 9 view .LVU477
 1824 027e 16A8     		add	r0, sp, #88
 1825 0280 FFF7FEFF 		bl	lsm6dsm_acceleration_raw_get
 1826              	.LVL129:
 337:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 1827              		.loc 1 337 9 view .LVU478
 1828              	.LBB22:
 337:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 1829              		.loc 1 337 14 view .LVU479
 337:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 1830              		.loc 1 337 9 is_stmt 0 view .LVU480
 1831 0284 21E0     		b	.L100
 1832              	.LVL130:
 1833              	.L101:
 1834              	.LBB23:
 338:Core/Src/main.c ****             filtered_acc[j] = alpha * raw + (1.0f - alpha) * filtered_acc[j];
 1835              		.loc 1 338 13 is_stmt 1 view .LVU481
 338:Core/Src/main.c ****             filtered_acc[j] = alpha * raw + (1.0f - alpha) * filtered_acc[j];
 1836              		.loc 1 338 25 is_stmt 0 view .LVU482
 1837 0286 324B     		ldr	r3, .L112+36
 1838 0288 33F91400 		ldrsh	r0, [r3, r4, lsl #1]
 1839 028c FFF7FEFF 		bl	lsm6dsm_from_fs2g_to_mg
 1840              	.LVL131:
 338:Core/Src/main.c ****             filtered_acc[j] = alpha * raw + (1.0f - alpha) * filtered_acc[j];
 1841              		.loc 1 338 85 discriminator 1 view .LVU483
 1842 0290 1AAB     		add	r3, sp, #104
 1843 0292 03EB4403 		add	r3, r3, r4, lsl #1
 1844 0296 33F92C3C 		ldrsh	r3, [r3, #-44]
 1845 029a 07EE903A 		vmov	s15, r3	@ int
 338:Core/Src/main.c ****             filtered_acc[j] = alpha * raw + (1.0f - alpha) * filtered_acc[j];
 1846              		.loc 1 338 75 discriminator 1 view .LVU484
 1847 029e F8EEE77A 		vcvt.f32.s32	s15, s15
 338:Core/Src/main.c ****             filtered_acc[j] = alpha * raw + (1.0f - alpha) * filtered_acc[j];
 1848              		.loc 1 338 19 discriminator 1 view .LVU485
 1849 02a2 70EE677A 		vsub.f32	s15, s0, s15
 1850              	.LVL132:
 339:Core/Src/main.c ****         }
 1851              		.loc 1 339 13 is_stmt 1 view .LVU486
 339:Core/Src/main.c ****         }
 1852              		.loc 1 339 37 is_stmt 0 view .LVU487
 1853 02a6 9FED2C7A 		vldr.32	s14, .L112+44
 1854 02aa 67EE877A 		vmul.f32	s15, s15, s14
 1855              	.LVL133:
 339:Core/Src/main.c ****         }
 1856              		.loc 1 339 74 view .LVU488
 1857 02ae 2B4B     		ldr	r3, .L112+48
 1858              	.LVL134:
 339:Core/Src/main.c ****         }
 1859              		.loc 1 339 74 view .LVU489
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 75


 1860 02b0 03EB8403 		add	r3, r3, r4, lsl #2
 1861 02b4 93ED007A 		vldr.32	s14, [r3]
 339:Core/Src/main.c ****         }
 1862              		.loc 1 339 60 view .LVU490
 1863 02b8 DFED296A 		vldr.32	s13, .L112+52
 1864 02bc 27EE267A 		vmul.f32	s14, s14, s13
 339:Core/Src/main.c ****         }
 1865              		.loc 1 339 43 view .LVU491
 1866 02c0 77EE877A 		vadd.f32	s15, s15, s14
 339:Core/Src/main.c ****         }
 1867              		.loc 1 339 29 view .LVU492
 1868 02c4 C3ED007A 		vstr.32	s15, [r3]
 1869              	.LBE23:
 337:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 1870              		.loc 1 337 33 is_stmt 1 discriminator 3 view .LVU493
 1871 02c8 0134     		adds	r4, r4, #1
 1872              	.LVL135:
 1873              	.L100:
 337:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 1874              		.loc 1 337 27 discriminator 1 view .LVU494
 1875 02ca 022C     		cmp	r4, #2
 1876 02cc DBDD     		ble	.L101
 1877 02ce 88E0     		b	.L99
 1878              	.LVL136:
 1879              	.L111:
 337:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2g_to_mg(data_raw_acceleration[j]) - acc_bias[j];
 1880              		.loc 1 337 27 is_stmt 0 discriminator 1 view .LVU495
 1881              	.LBE22:
 1882              	.LBE21:
 1883              	.LBB24:
 345:Core/Src/main.c ****         lsm6dsm_angular_rate_raw_get(&dev_ctx, data_raw_angular_rate);
 1884              		.loc 1 345 9 is_stmt 1 view .LVU496
 1885 02d0 2049     		ldr	r1, .L112+40
 1886 02d2 0024     		movs	r4, #0
 1887 02d4 0C60     		str	r4, [r1]
 1888 02d6 8C80     		strh	r4, [r1, #4]	@ movhi
 346:Core/Src/main.c ****         for (int j = 0; j < 3; j++) {
 1889              		.loc 1 346 9 view .LVU497
 1890 02d8 16A8     		add	r0, sp, #88
 1891 02da FFF7FEFF 		bl	lsm6dsm_angular_rate_raw_get
 1892              	.LVL137:
 347:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 1893              		.loc 1 347 9 view .LVU498
 1894              	.LBB25:
 347:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 1895              		.loc 1 347 14 view .LVU499
 347:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 1896              		.loc 1 347 9 is_stmt 0 view .LVU500
 1897 02de 21E0     		b	.L103
 1898              	.LVL138:
 1899              	.L104:
 1900              	.LBB26:
 348:Core/Src/main.c ****             filtered_gyro[j] = alpha * raw + (1.0f - alpha) * filtered_gyro[j];
 1901              		.loc 1 348 13 is_stmt 1 view .LVU501
 348:Core/Src/main.c ****             filtered_gyro[j] = alpha * raw + (1.0f - alpha) * filtered_gyro[j];
 1902              		.loc 1 348 25 is_stmt 0 view .LVU502
 1903 02e0 1C4B     		ldr	r3, .L112+40
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 76


 1904 02e2 33F91400 		ldrsh	r0, [r3, r4, lsl #1]
 1905 02e6 FFF7FEFF 		bl	lsm6dsm_from_fs2000dps_to_mdps
 1906              	.LVL139:
 348:Core/Src/main.c ****             filtered_gyro[j] = alpha * raw + (1.0f - alpha) * filtered_gyro[j];
 1907              		.loc 1 348 93 discriminator 1 view .LVU503
 1908 02ea 1AAB     		add	r3, sp, #104
 1909 02ec 03EB4403 		add	r3, r3, r4, lsl #1
 1910 02f0 33F9343C 		ldrsh	r3, [r3, #-52]
 1911 02f4 07EE903A 		vmov	s15, r3	@ int
 348:Core/Src/main.c ****             filtered_gyro[j] = alpha * raw + (1.0f - alpha) * filtered_gyro[j];
 1912              		.loc 1 348 82 discriminator 1 view .LVU504
 1913 02f8 F8EEE77A 		vcvt.f32.s32	s15, s15
 348:Core/Src/main.c ****             filtered_gyro[j] = alpha * raw + (1.0f - alpha) * filtered_gyro[j];
 1914              		.loc 1 348 19 discriminator 1 view .LVU505
 1915 02fc 70EE677A 		vsub.f32	s15, s0, s15
 1916              	.LVL140:
 349:Core/Src/main.c ****         }
 1917              		.loc 1 349 13 is_stmt 1 view .LVU506
 349:Core/Src/main.c ****         }
 1918              		.loc 1 349 38 is_stmt 0 view .LVU507
 1919 0300 9FED157A 		vldr.32	s14, .L112+44
 1920 0304 67EE877A 		vmul.f32	s15, s15, s14
 1921              	.LVL141:
 349:Core/Src/main.c ****         }
 1922              		.loc 1 349 76 view .LVU508
 1923 0308 164B     		ldr	r3, .L112+56
 1924              	.LVL142:
 349:Core/Src/main.c ****         }
 1925              		.loc 1 349 76 view .LVU509
 1926 030a 03EB8403 		add	r3, r3, r4, lsl #2
 1927 030e 93ED007A 		vldr.32	s14, [r3]
 349:Core/Src/main.c ****         }
 1928              		.loc 1 349 61 view .LVU510
 1929 0312 DFED136A 		vldr.32	s13, .L112+52
 1930 0316 27EE267A 		vmul.f32	s14, s14, s13
 349:Core/Src/main.c ****         }
 1931              		.loc 1 349 44 view .LVU511
 1932 031a 77EE877A 		vadd.f32	s15, s15, s14
 349:Core/Src/main.c ****         }
 1933              		.loc 1 349 30 view .LVU512
 1934 031e C3ED007A 		vstr.32	s15, [r3]
 1935              	.LBE26:
 347:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 1936              		.loc 1 347 33 is_stmt 1 discriminator 3 view .LVU513
 1937 0322 0134     		adds	r4, r4, #1
 1938              	.LVL143:
 1939              	.L103:
 347:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 1940              		.loc 1 347 27 discriminator 1 view .LVU514
 1941 0324 022C     		cmp	r4, #2
 1942 0326 DBDD     		ble	.L104
 1943 0328 61E0     		b	.L102
 1944              	.L113:
 1945 032a 00BF     		.align	2
 1946              	.L112:
 1947 032c 00000000 		.word	lsm6dsm_platform_write
 1948 0330 00000000 		.word	lsm6dsm_platform_read
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 77


 1949 0334 00000000 		.word	hspi1
 1950 0338 00000000 		.word	llcc68_platform_write
 1951 033c 00000000 		.word	llcc68_platform_read
 1952 0340 00000000 		.word	llcc68_platform_reset
 1953 0344 00000240 		.word	1073872896
 1954 0348 00000000 		.word	whoamI
 1955 034c 00000000 		.word	rst
 1956 0350 00000000 		.word	data_raw_acceleration
 1957 0354 00000000 		.word	data_raw_angular_rate
 1958 0358 CDCCCC3D 		.word	1036831949
 1959 035c 00000000 		.word	filtered_acc
 1960 0360 6666663F 		.word	1063675494
 1961 0364 00000000 		.word	filtered_gyro
 1962              	.LVL144:
 1963              	.L105:
 347:Core/Src/main.c ****             float raw = lsm6dsm_from_fs2000dps_to_mdps(data_raw_angular_rate[j]) - gyro_bias[j];
 1964              		.loc 1 347 27 is_stmt 0 discriminator 1 view .LVU515
 1965              	.LBE25:
 1966              	.LBE24:
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1967              		.loc 1 363 7 is_stmt 1 view .LVU516
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1968              		.loc 1 363 82 is_stmt 0 view .LVU517
 1969 0368 2B4B     		ldr	r3, .L114
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1970              		.loc 1 363 99 view .LVU518
 1971 036a 5E68     		ldr	r6, [r3, #4]	@ float
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1972              		.loc 1 363 116 view .LVU519
 1973 036c 9F68     		ldr	r7, [r3, #8]	@ float
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1974              		.loc 1 363 134 view .LVU520
 1975 036e 2B4A     		ldr	r2, .L114+4
 1976 0370 D2F80080 		ldr	r8, [r2]	@ float
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1977              		.loc 1 363 152 view .LVU521
 1978 0374 D2F80490 		ldr	r9, [r2, #4]	@ float
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1979              		.loc 1 363 170 view .LVU522
 1980 0378 D2F808A0 		ldr	r10, [r2, #8]	@ float
 363:Core/Src/main.c ****       // acceleration_mg[0] = 0;
 1981              		.loc 1 363 7 view .LVU523
 1982 037c 1868     		ldr	r0, [r3]	@ float
 1983 037e FFF7FEFF 		bl	__aeabi_f2d
 1984              	.LVL145:
 1985 0382 0446     		mov	r4, r0
 1986 0384 0D46     		mov	r5, r1
 1987 0386 264B     		ldr	r3, .L114+8
 1988 0388 1868     		ldr	r0, [r3]	@ float
 1989 038a FFF7FEFF 		bl	__aeabi_f2d
 1990              	.LVL146:
 1991 038e CDE90A01 		strd	r0, [sp, #40]
 1992 0392 5046     		mov	r0, r10	@ float
 1993 0394 FFF7FEFF 		bl	__aeabi_f2d
 1994              	.LVL147:
 1995 0398 CDE90801 		strd	r0, [sp, #32]
 1996 039c 4846     		mov	r0, r9	@ float
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 78


 1997 039e FFF7FEFF 		bl	__aeabi_f2d
 1998              	.LVL148:
 1999 03a2 CDE90601 		strd	r0, [sp, #24]
 2000 03a6 4046     		mov	r0, r8	@ float
 2001 03a8 FFF7FEFF 		bl	__aeabi_f2d
 2002              	.LVL149:
 2003 03ac CDE90401 		strd	r0, [sp, #16]
 2004 03b0 3846     		mov	r0, r7	@ float
 2005 03b2 FFF7FEFF 		bl	__aeabi_f2d
 2006              	.LVL150:
 2007 03b6 CDE90201 		strd	r0, [sp, #8]
 2008 03ba 3046     		mov	r0, r6	@ float
 2009 03bc FFF7FEFF 		bl	__aeabi_f2d
 2010              	.LVL151:
 2011 03c0 CDE90001 		strd	r0, [sp]
 2012 03c4 2246     		mov	r2, r4
 2013 03c6 2B46     		mov	r3, r5
 2014 03c8 1648     		ldr	r0, .L114+12
 2015 03ca FFF7FEFF 		bl	printf
 2016              	.LVL152:
 2017              	.LBE20:
 313:Core/Src/main.c ****   {
 2018              		.loc 1 313 9 is_stmt 1 view .LVU524
 2019              	.L106:
 313:Core/Src/main.c ****   {
 2020              		.loc 1 313 3 view .LVU525
 2021              	.LBB28:
 331:Core/Src/main.c **** 	    /* Read output only if new value is available */
 2022              		.loc 1 331 6 view .LVU526
 333:Core/Src/main.c **** 	    if (reg.status_reg.xlda) {
 2023              		.loc 1 333 6 view .LVU527
 2024 03ce 0CA9     		add	r1, sp, #48
 2025 03d0 16A8     		add	r0, sp, #88
 2026 03d2 FFF7FEFF 		bl	lsm6dsm_status_reg_get
 2027              	.LVL153:
 334:Core/Src/main.c ****         memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 2028              		.loc 1 334 6 view .LVU528
 334:Core/Src/main.c ****         memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 2029              		.loc 1 334 10 is_stmt 0 view .LVU529
 2030 03d6 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 334:Core/Src/main.c ****         memset(data_raw_acceleration, 0x00, 3 * sizeof(int16_t));
 2031              		.loc 1 334 9 view .LVU530
 2032 03da 13F0010F 		tst	r3, #1
 2033 03de 7FF44AAF 		bne	.L110
 2034              	.L99:
 344:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 2035              		.loc 1 344 5 is_stmt 1 view .LVU531
 344:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 2036              		.loc 1 344 9 is_stmt 0 view .LVU532
 2037 03e2 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 344:Core/Src/main.c ****         memset(data_raw_angular_rate, 0x00, 3 * sizeof(int16_t));
 2038              		.loc 1 344 8 view .LVU533
 2039 03e6 13F0020F 		tst	r3, #2
 2040 03ea 7FF471AF 		bne	.L111
 2041              	.L102:
 353:Core/Src/main.c **** 	      /* Read temperature data */
 2042              		.loc 1 353 6 is_stmt 1 view .LVU534
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 79


 353:Core/Src/main.c **** 	      /* Read temperature data */
 2043              		.loc 1 353 10 is_stmt 0 view .LVU535
 2044 03ee 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 353:Core/Src/main.c **** 	      /* Read temperature data */
 2045              		.loc 1 353 9 view .LVU536
 2046 03f2 13F0040F 		tst	r3, #4
 2047 03f6 B7D0     		beq	.L105
 2048              	.LBB27:
 355:Core/Src/main.c **** 	      lsm6dsm_temperature_raw_get(&dev_ctx, &data_raw_temperature);
 2049              		.loc 1 355 8 is_stmt 1 view .LVU537
 2050 03f8 0B4C     		ldr	r4, .L114+16
 2051 03fa 0023     		movs	r3, #0
 2052 03fc 2380     		strh	r3, [r4]	@ movhi
 356:Core/Src/main.c **** 	      temperature_degC = lsm6dsm_from_lsb_to_celsius(
 2053              		.loc 1 356 8 view .LVU538
 2054 03fe 2146     		mov	r1, r4
 2055 0400 16A8     		add	r0, sp, #88
 2056 0402 FFF7FEFF 		bl	lsm6dsm_temperature_raw_get
 2057              	.LVL154:
 357:Core/Src/main.c **** 	                           data_raw_temperature);
 2058              		.loc 1 357 8 view .LVU539
 357:Core/Src/main.c **** 	                           data_raw_temperature);
 2059              		.loc 1 357 27 is_stmt 0 view .LVU540
 2060 0406 B4F90000 		ldrsh	r0, [r4]
 2061 040a FFF7FEFF 		bl	lsm6dsm_from_lsb_to_celsius
 2062              	.LVL155:
 357:Core/Src/main.c **** 	                           data_raw_temperature);
 2063              		.loc 1 357 25 discriminator 1 view .LVU541
 2064 040e 044B     		ldr	r3, .L114+8
 2065 0410 83ED000A 		vstr.32	s0, [r3]
 2066 0414 A8E7     		b	.L105
 2067              	.L115:
 2068 0416 00BF     		.align	2
 2069              	.L114:
 2070 0418 00000000 		.word	filtered_acc
 2071 041c 00000000 		.word	filtered_gyro
 2072 0420 00000000 		.word	temperature_degC
 2073 0424 00000000 		.word	.LC11
 2074 0428 00000000 		.word	data_raw_temperature
 2075              	.LBE27:
 2076              	.LBE28:
 2077              		.cfi_endproc
 2078              	.LFE134:
 2080              		.global	alpha
 2081              		.section	.rodata.alpha,"a"
 2082              		.align	2
 2085              	alpha:
 2086 0000 CDCCCC3D 		.word	1036831949
 2087              		.global	filtered_gyro
 2088              		.section	.bss.filtered_gyro,"aw",%nobits
 2089              		.align	2
 2092              	filtered_gyro:
 2093 0000 00000000 		.space	12
 2093      00000000 
 2093      00000000 
 2094              		.global	filtered_acc
 2095              		.section	.bss.filtered_acc,"aw",%nobits
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 80


 2096              		.align	2
 2099              	filtered_acc:
 2100 0000 00000000 		.space	12
 2100      00000000 
 2100      00000000 
 2101              		.section	.bss.rst,"aw",%nobits
 2104              	rst:
 2105 0000 00       		.space	1
 2106              		.section	.bss.whoamI,"aw",%nobits
 2109              	whoamI:
 2110 0000 00       		.space	1
 2111              		.section	.bss.temperature_degC,"aw",%nobits
 2112              		.align	2
 2115              	temperature_degC:
 2116 0000 00000000 		.space	4
 2117              		.section	.bss.data_raw_temperature,"aw",%nobits
 2118              		.align	1
 2121              	data_raw_temperature:
 2122 0000 0000     		.space	2
 2123              		.section	.bss.data_raw_angular_rate,"aw",%nobits
 2124              		.align	2
 2127              	data_raw_angular_rate:
 2128 0000 00000000 		.space	6
 2128      0000
 2129              		.section	.bss.data_raw_acceleration,"aw",%nobits
 2130              		.align	2
 2133              	data_raw_acceleration:
 2134 0000 00000000 		.space	6
 2134      0000
 2135              		.global	temp
 2136              		.section	.bss.temp,"aw",%nobits
 2137              		.align	1
 2140              	temp:
 2141 0000 0000     		.space	2
 2142              		.global	huart1
 2143              		.section	.bss.huart1,"aw",%nobits
 2144              		.align	2
 2147              	huart1:
 2148 0000 00000000 		.space	72
 2148      00000000 
 2148      00000000 
 2148      00000000 
 2148      00000000 
 2149              		.global	hspi1
 2150              		.section	.bss.hspi1,"aw",%nobits
 2151              		.align	2
 2154              	hspi1:
 2155 0000 00000000 		.space	88
 2155      00000000 
 2155      00000000 
 2155      00000000 
 2155      00000000 
 2156              		.global	hsd
 2157              		.section	.bss.hsd,"aw",%nobits
 2158              		.align	2
 2161              	hsd:
 2162 0000 00000000 		.space	132
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 81


 2162      00000000 
 2162      00000000 
 2162      00000000 
 2162      00000000 
 2163              		.global	hi2c1
 2164              		.section	.bss.hi2c1,"aw",%nobits
 2165              		.align	2
 2168              	hi2c1:
 2169 0000 00000000 		.space	84
 2169      00000000 
 2169      00000000 
 2169      00000000 
 2169      00000000 
 2170              		.text
 2171              	.Letext0:
 2172              		.file 3 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/ma
 2173              		.file 4 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/sy
 2174              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 2175              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2176              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2177              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2178              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2179              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2180              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2181              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 2182              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 2183              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2184              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2185              		.file 16 "C:/PROGRAM FILES (X86)/ARM GNU TOOLCHAIN ARM-NONE-EABI/13.3 REL1/arm-none-eabi/include/m
 2186              		.file 17 "Drivers/LSM6DSM/Inc/lsm6dsm_reg.h"
 2187              		.file 18 "Drivers/LLCC68/Inc/llcc68_hal.h"
 2188              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2189              		.file 20 "<built-in>"
 2190              		.file 21 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 82


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:21     .text.MX_SDIO_SD_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:26     .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:62     .text.MX_SDIO_SD_Init:00000018 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2161   .bss.hsd:00000000 hsd
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:68     .text.llcc68_platform_reset:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:73     .text.llcc68_platform_reset:00000000 llcc68_platform_reset
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:115    .text.llcc68_platform_reset:00000028 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:120    .text.platform_delay:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:125    .text.platform_delay:00000000 platform_delay
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:146    .text.llcc68_platform_write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:151    .text.llcc68_platform_write:00000000 llcc68_platform_write
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:213    .text.llcc68_platform_write:00000048 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2154   .bss.hspi1:00000000 hspi1
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:219    .text.lsm6dsm_platform_write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:224    .text.lsm6dsm_platform_write:00000000 lsm6dsm_platform_write
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:290    .text.lsm6dsm_platform_write:00000048 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:295    .text.llcc68_platform_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:300    .text.llcc68_platform_read:00000000 llcc68_platform_read
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:362    .text.llcc68_platform_read:00000048 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:368    .text.lsm6dsm_platform_read:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:373    .text.lsm6dsm_platform_read:00000000 lsm6dsm_platform_read
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:446    .text.lsm6dsm_platform_read:00000054 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:451    .text.MX_GPIO_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:456    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:688    .text.MX_GPIO_Init:0000010c $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:695    .text._write:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:701    .text._write:00000000 _write
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:733    .text._write:00000014 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2147   .bss.huart1:00000000 huart1
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:738    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:742    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:748    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:786    .text.HAL_GPIO_EXTI_Callback:00000014 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:791    .rodata.bmp5_error_codes_print_result.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:820    .text.bmp5_error_codes_print_result:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:826    .text.bmp5_error_codes_print_result:00000000 bmp5_error_codes_print_result
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:860    .text.bmp5_error_codes_print_result:0000001a $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:933    .text.bmp5_error_codes_print_result:00000074 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:946    .text.Error_Handler:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:952    .text.Error_Handler:00000000 Error_Handler
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:984    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:989    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1043   .text.MX_USART1_UART_Init:0000002c $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1049   .rodata.MX_I2C1_Init.str1.4:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1053   .text.MX_I2C1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1058   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1155   .text.MX_I2C1_Init:0000006c $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2168   .bss.hi2c1:00000000 hi2c1
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1164   .text.MX_SPI1_Init:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1169   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1236   .text.MX_SPI1_Init:00000038 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1242   .text.SystemClock_Config:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1248   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1394   .text.SystemClock_Config:0000009c $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1401   .rodata.main.str1.4:00000000 $d
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 83


C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1406   .text.main:00000000 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1412   .text.main:00000000 main
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1947   .text.main:0000032c $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2109   .bss.whoamI:00000000 whoamI
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2104   .bss.rst:00000000 rst
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2133   .bss.data_raw_acceleration:00000000 data_raw_acceleration
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2127   .bss.data_raw_angular_rate:00000000 data_raw_angular_rate
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2099   .bss.filtered_acc:00000000 filtered_acc
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2092   .bss.filtered_gyro:00000000 filtered_gyro
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:1969   .text.main:00000368 $t
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2070   .text.main:00000418 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2115   .bss.temperature_degC:00000000 temperature_degC
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2121   .bss.data_raw_temperature:00000000 data_raw_temperature
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2085   .rodata.alpha:00000000 alpha
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2082   .rodata.alpha:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2089   .bss.filtered_gyro:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2096   .bss.filtered_acc:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2105   .bss.rst:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2110   .bss.whoamI:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2112   .bss.temperature_degC:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2118   .bss.data_raw_temperature:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2124   .bss.data_raw_angular_rate:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2130   .bss.data_raw_acceleration:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2140   .bss.temp:00000000 temp
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2137   .bss.temp:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2144   .bss.huart1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2151   .bss.hspi1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2158   .bss.hsd:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:2165   .bss.hi2c1:00000000 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:867    .text.bmp5_error_codes_print_result:00000021 $d
C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s:867    .text.bmp5_error_codes_print_result:00000022 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
HAL_SPI_Transmit
HAL_SPI_Receive
HAL_GPIO_Init
HAL_UART_Transmit
printf
HAL_UART_Init
HAL_I2C_Init
HAL_I2C_IsDeviceReady
HAL_I2C_Mem_Write
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_FATFS_Init
lsm6dsm_spi_mode_set
lsm6dsm_auto_increment_set
lsm6dsm_device_id_get
lsm6dsm_reset_get
lsm6dsm_block_data_update_set
lsm6dsm_xl_data_rate_set
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccGqaZL7.s 			page 84


lsm6dsm_gy_data_rate_set
lsm6dsm_xl_full_scale_set
lsm6dsm_gy_full_scale_set
lsm6dsm_xl_filter_analog_set
lsm6dsm_xl_lp2_bandwidth_set
lsm6dsm_gy_band_pass_set
lsm6dsm_status_reg_get
lsm6dsm_acceleration_raw_get
lsm6dsm_from_fs2g_to_mg
lsm6dsm_angular_rate_raw_get
lsm6dsm_from_fs2000dps_to_mdps
lsm6dsm_temperature_raw_get
lsm6dsm_from_lsb_to_celsius
